                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module life
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _int1
                                     13 	.globl _int0
                                     14 	.globl _getchar
                                     15 	.globl _putchar
                                     16 	.globl _CY
                                     17 	.globl _AC
                                     18 	.globl _F0
                                     19 	.globl _RS1
                                     20 	.globl _RS0
                                     21 	.globl _OV
                                     22 	.globl _FL
                                     23 	.globl _P
                                     24 	.globl _TF2
                                     25 	.globl _EXF2
                                     26 	.globl _RCLK
                                     27 	.globl _TCLK
                                     28 	.globl _EXEN2
                                     29 	.globl _TR2
                                     30 	.globl _C_T2
                                     31 	.globl _CP_RL2
                                     32 	.globl _T2CON_7
                                     33 	.globl _T2CON_6
                                     34 	.globl _T2CON_5
                                     35 	.globl _T2CON_4
                                     36 	.globl _T2CON_3
                                     37 	.globl _T2CON_2
                                     38 	.globl _T2CON_1
                                     39 	.globl _T2CON_0
                                     40 	.globl _PT2
                                     41 	.globl _PS
                                     42 	.globl _PT1
                                     43 	.globl _PX1
                                     44 	.globl _PT0
                                     45 	.globl _PX0
                                     46 	.globl _RD
                                     47 	.globl _WR
                                     48 	.globl _T1
                                     49 	.globl _T0
                                     50 	.globl _INT1
                                     51 	.globl _INT0
                                     52 	.globl _TXD
                                     53 	.globl _RXD
                                     54 	.globl _P3_7
                                     55 	.globl _P3_6
                                     56 	.globl _P3_5
                                     57 	.globl _P3_4
                                     58 	.globl _P3_3
                                     59 	.globl _P3_2
                                     60 	.globl _P3_1
                                     61 	.globl _P3_0
                                     62 	.globl _EA
                                     63 	.globl _ET2
                                     64 	.globl _ES
                                     65 	.globl _ET1
                                     66 	.globl _EX1
                                     67 	.globl _ET0
                                     68 	.globl _EX0
                                     69 	.globl _P2_7
                                     70 	.globl _P2_6
                                     71 	.globl _P2_5
                                     72 	.globl _P2_4
                                     73 	.globl _P2_3
                                     74 	.globl _P2_2
                                     75 	.globl _P2_1
                                     76 	.globl _P2_0
                                     77 	.globl _SM0
                                     78 	.globl _SM1
                                     79 	.globl _SM2
                                     80 	.globl _REN
                                     81 	.globl _TB8
                                     82 	.globl _RB8
                                     83 	.globl _TI
                                     84 	.globl _RI
                                     85 	.globl _T2EX
                                     86 	.globl _T2
                                     87 	.globl _P1_7
                                     88 	.globl _P1_6
                                     89 	.globl _P1_5
                                     90 	.globl _P1_4
                                     91 	.globl _P1_3
                                     92 	.globl _P1_2
                                     93 	.globl _P1_1
                                     94 	.globl _P1_0
                                     95 	.globl _TF1
                                     96 	.globl _TR1
                                     97 	.globl _TF0
                                     98 	.globl _TR0
                                     99 	.globl _IE1
                                    100 	.globl _IT1
                                    101 	.globl _IE0
                                    102 	.globl _IT0
                                    103 	.globl _P0_7
                                    104 	.globl _P0_6
                                    105 	.globl _P0_5
                                    106 	.globl _P0_4
                                    107 	.globl _P0_3
                                    108 	.globl _P0_2
                                    109 	.globl _P0_1
                                    110 	.globl _P0_0
                                    111 	.globl _B
                                    112 	.globl _A
                                    113 	.globl _ACC
                                    114 	.globl _PSW
                                    115 	.globl _TH2
                                    116 	.globl _TL2
                                    117 	.globl _RCAP2H
                                    118 	.globl _RCAP2L
                                    119 	.globl _T2MOD
                                    120 	.globl _T2CON
                                    121 	.globl _IP
                                    122 	.globl _P3
                                    123 	.globl _IE
                                    124 	.globl _P2
                                    125 	.globl _SBUF
                                    126 	.globl _SCON
                                    127 	.globl _P1
                                    128 	.globl _TH1
                                    129 	.globl _TH0
                                    130 	.globl _TL1
                                    131 	.globl _TL0
                                    132 	.globl _TMOD
                                    133 	.globl _TCON
                                    134 	.globl _PCON
                                    135 	.globl _DPH
                                    136 	.globl _DPL
                                    137 	.globl _SP
                                    138 	.globl _P0
                                    139 	.globl _c
                                    140 	.globl _j
                                    141 	.globl _cycle2
                                    142 	.globl _fixed
                                    143 	.globl _generation
                                    144 	.globl _n
                                    145 	.globl _y1
                                    146 	.globl _x1
                                    147 	.globl _y
                                    148 	.globl _x
                                    149 	.globl _nu
                                    150 	.globl _u
                                    151 	.globl _pu
                                    152 	.globl _i1
                                    153 	.globl _i0
                                    154 ;--------------------------------------------------------
                                    155 ; special function registers
                                    156 ;--------------------------------------------------------
                                    157 	.area RSEG    (ABS,DATA)
      000000                        158 	.org 0x0000
                           000080   159 _P0	=	0x0080
                           000081   160 _SP	=	0x0081
                           000082   161 _DPL	=	0x0082
                           000083   162 _DPH	=	0x0083
                           000087   163 _PCON	=	0x0087
                           000088   164 _TCON	=	0x0088
                           000089   165 _TMOD	=	0x0089
                           00008A   166 _TL0	=	0x008a
                           00008B   167 _TL1	=	0x008b
                           00008C   168 _TH0	=	0x008c
                           00008D   169 _TH1	=	0x008d
                           000090   170 _P1	=	0x0090
                           000098   171 _SCON	=	0x0098
                           000099   172 _SBUF	=	0x0099
                           0000A0   173 _P2	=	0x00a0
                           0000A8   174 _IE	=	0x00a8
                           0000B0   175 _P3	=	0x00b0
                           0000B8   176 _IP	=	0x00b8
                           0000C8   177 _T2CON	=	0x00c8
                           0000C9   178 _T2MOD	=	0x00c9
                           0000CA   179 _RCAP2L	=	0x00ca
                           0000CB   180 _RCAP2H	=	0x00cb
                           0000CC   181 _TL2	=	0x00cc
                           0000CD   182 _TH2	=	0x00cd
                           0000D0   183 _PSW	=	0x00d0
                           0000E0   184 _ACC	=	0x00e0
                           0000E0   185 _A	=	0x00e0
                           0000F0   186 _B	=	0x00f0
                                    187 ;--------------------------------------------------------
                                    188 ; special function bits
                                    189 ;--------------------------------------------------------
                                    190 	.area RSEG    (ABS,DATA)
      000000                        191 	.org 0x0000
                           000080   192 _P0_0	=	0x0080
                           000081   193 _P0_1	=	0x0081
                           000082   194 _P0_2	=	0x0082
                           000083   195 _P0_3	=	0x0083
                           000084   196 _P0_4	=	0x0084
                           000085   197 _P0_5	=	0x0085
                           000086   198 _P0_6	=	0x0086
                           000087   199 _P0_7	=	0x0087
                           000088   200 _IT0	=	0x0088
                           000089   201 _IE0	=	0x0089
                           00008A   202 _IT1	=	0x008a
                           00008B   203 _IE1	=	0x008b
                           00008C   204 _TR0	=	0x008c
                           00008D   205 _TF0	=	0x008d
                           00008E   206 _TR1	=	0x008e
                           00008F   207 _TF1	=	0x008f
                           000090   208 _P1_0	=	0x0090
                           000091   209 _P1_1	=	0x0091
                           000092   210 _P1_2	=	0x0092
                           000093   211 _P1_3	=	0x0093
                           000094   212 _P1_4	=	0x0094
                           000095   213 _P1_5	=	0x0095
                           000096   214 _P1_6	=	0x0096
                           000097   215 _P1_7	=	0x0097
                           000090   216 _T2	=	0x0090
                           000091   217 _T2EX	=	0x0091
                           000098   218 _RI	=	0x0098
                           000099   219 _TI	=	0x0099
                           00009A   220 _RB8	=	0x009a
                           00009B   221 _TB8	=	0x009b
                           00009C   222 _REN	=	0x009c
                           00009D   223 _SM2	=	0x009d
                           00009E   224 _SM1	=	0x009e
                           00009F   225 _SM0	=	0x009f
                           0000A0   226 _P2_0	=	0x00a0
                           0000A1   227 _P2_1	=	0x00a1
                           0000A2   228 _P2_2	=	0x00a2
                           0000A3   229 _P2_3	=	0x00a3
                           0000A4   230 _P2_4	=	0x00a4
                           0000A5   231 _P2_5	=	0x00a5
                           0000A6   232 _P2_6	=	0x00a6
                           0000A7   233 _P2_7	=	0x00a7
                           0000A8   234 _EX0	=	0x00a8
                           0000A9   235 _ET0	=	0x00a9
                           0000AA   236 _EX1	=	0x00aa
                           0000AB   237 _ET1	=	0x00ab
                           0000AC   238 _ES	=	0x00ac
                           0000AD   239 _ET2	=	0x00ad
                           0000AF   240 _EA	=	0x00af
                           0000B0   241 _P3_0	=	0x00b0
                           0000B1   242 _P3_1	=	0x00b1
                           0000B2   243 _P3_2	=	0x00b2
                           0000B3   244 _P3_3	=	0x00b3
                           0000B4   245 _P3_4	=	0x00b4
                           0000B5   246 _P3_5	=	0x00b5
                           0000B6   247 _P3_6	=	0x00b6
                           0000B7   248 _P3_7	=	0x00b7
                           0000B0   249 _RXD	=	0x00b0
                           0000B1   250 _TXD	=	0x00b1
                           0000B2   251 _INT0	=	0x00b2
                           0000B3   252 _INT1	=	0x00b3
                           0000B4   253 _T0	=	0x00b4
                           0000B5   254 _T1	=	0x00b5
                           0000B6   255 _WR	=	0x00b6
                           0000B7   256 _RD	=	0x00b7
                           0000B8   257 _PX0	=	0x00b8
                           0000B9   258 _PT0	=	0x00b9
                           0000BA   259 _PX1	=	0x00ba
                           0000BB   260 _PT1	=	0x00bb
                           0000BC   261 _PS	=	0x00bc
                           0000BD   262 _PT2	=	0x00bd
                           0000C8   263 _T2CON_0	=	0x00c8
                           0000C9   264 _T2CON_1	=	0x00c9
                           0000CA   265 _T2CON_2	=	0x00ca
                           0000CB   266 _T2CON_3	=	0x00cb
                           0000CC   267 _T2CON_4	=	0x00cc
                           0000CD   268 _T2CON_5	=	0x00cd
                           0000CE   269 _T2CON_6	=	0x00ce
                           0000CF   270 _T2CON_7	=	0x00cf
                           0000C8   271 _CP_RL2	=	0x00c8
                           0000C9   272 _C_T2	=	0x00c9
                           0000CA   273 _TR2	=	0x00ca
                           0000CB   274 _EXEN2	=	0x00cb
                           0000CC   275 _TCLK	=	0x00cc
                           0000CD   276 _RCLK	=	0x00cd
                           0000CE   277 _EXF2	=	0x00ce
                           0000CF   278 _TF2	=	0x00cf
                           0000D0   279 _P	=	0x00d0
                           0000D1   280 _FL	=	0x00d1
                           0000D2   281 _OV	=	0x00d2
                           0000D3   282 _RS0	=	0x00d3
                           0000D4   283 _RS1	=	0x00d4
                           0000D5   284 _F0	=	0x00d5
                           0000D6   285 _AC	=	0x00d6
                           0000D7   286 _CY	=	0x00d7
                                    287 ;--------------------------------------------------------
                                    288 ; overlayable register banks
                                    289 ;--------------------------------------------------------
                                    290 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        291 	.ds 8
                                    292 	.area REG_BANK_1	(REL,OVR,DATA)
      000000                        293 	.ds 8
                                    294 ;--------------------------------------------------------
                                    295 ; overlayable bit register bank
                                    296 ;--------------------------------------------------------
                                    297 	.area BIT_BANK	(REL,OVR,DATA)
      000000                        298 bits:
      000000                        299 	.ds 1
                           008000   300 	b0 = bits[0]
                           008100   301 	b1 = bits[1]
                           008200   302 	b2 = bits[2]
                           008300   303 	b3 = bits[3]
                           008400   304 	b4 = bits[4]
                           008500   305 	b5 = bits[5]
                           008600   306 	b6 = bits[6]
                           008700   307 	b7 = bits[7]
                                    308 ;--------------------------------------------------------
                                    309 ; internal ram data
                                    310 ;--------------------------------------------------------
                                    311 	.area DSEG    (DATA)
                                    312 ;--------------------------------------------------------
                                    313 ; overlayable items in internal ram 
                                    314 ;--------------------------------------------------------
                                    315 ;--------------------------------------------------------
                                    316 ; Stack segment in internal ram 
                                    317 ;--------------------------------------------------------
                                    318 	.area	SSEG
      000000                        319 __start__stack:
      000000                        320 	.ds	1
                                    321 
                                    322 ;--------------------------------------------------------
                                    323 ; indirectly addressable internal ram data
                                    324 ;--------------------------------------------------------
                                    325 	.area ISEG    (DATA)
                                    326 ;--------------------------------------------------------
                                    327 ; absolute internal ram data
                                    328 ;--------------------------------------------------------
                                    329 	.area IABS    (ABS,DATA)
                                    330 	.area IABS    (ABS,DATA)
                                    331 ;--------------------------------------------------------
                                    332 ; bit data
                                    333 ;--------------------------------------------------------
                                    334 	.area BSEG    (BIT)
                                    335 ;--------------------------------------------------------
                                    336 ; paged external ram data
                                    337 ;--------------------------------------------------------
                                    338 	.area PSEG    (PAG,XDATA)
                                    339 ;--------------------------------------------------------
                                    340 ; external ram data
                                    341 ;--------------------------------------------------------
                                    342 	.area XSEG    (XDATA)
      000000                        343 _i0::
      000000                        344 	.ds 1
      000001                        345 _i1::
      000001                        346 	.ds 1
      000002                        347 _pu::
      000002                        348 	.ds 1024
      000402                        349 _u::
      000402                        350 	.ds 1024
      000802                        351 _nu::
      000802                        352 	.ds 1024
      000C02                        353 _x::
      000C02                        354 	.ds 2
      000C04                        355 _y::
      000C04                        356 	.ds 2
      000C06                        357 _x1::
      000C06                        358 	.ds 2
      000C08                        359 _y1::
      000C08                        360 	.ds 2
      000C0A                        361 _n::
      000C0A                        362 	.ds 1
      000C0B                        363 _generation::
      000C0B                        364 	.ds 8
      000C13                        365 _fixed::
      000C13                        366 	.ds 1
      000C14                        367 _cycle2::
      000C14                        368 	.ds 1
      000C15                        369 _j::
      000C15                        370 	.ds 2
      000C17                        371 _c::
      000C17                        372 	.ds 2
                                    373 ;--------------------------------------------------------
                                    374 ; absolute external ram data
                                    375 ;--------------------------------------------------------
                                    376 	.area XABS    (ABS,XDATA)
                                    377 ;--------------------------------------------------------
                                    378 ; external initialized ram data
                                    379 ;--------------------------------------------------------
                                    380 	.area XISEG   (XDATA)
                                    381 	.area HOME    (CODE)
                                    382 	.area GSINIT0 (CODE)
                                    383 	.area GSINIT1 (CODE)
                                    384 	.area GSINIT2 (CODE)
                                    385 	.area GSINIT3 (CODE)
                                    386 	.area GSINIT4 (CODE)
                                    387 	.area GSINIT5 (CODE)
                                    388 	.area GSINIT  (CODE)
                                    389 	.area GSFINAL (CODE)
                                    390 	.area CSEG    (CODE)
                                    391 ;--------------------------------------------------------
                                    392 ; interrupt vector 
                                    393 ;--------------------------------------------------------
                                    394 	.area HOME    (CODE)
      000000                        395 __interrupt_vect:
      000000 02r00r00         [24]  396 	ljmp	__sdcc_gsinit_startup
      000003 02r00r0E         [24]  397 	ljmp	_int0
      000006                        398 	.ds	5
      00000B 32               [24]  399 	reti
      00000C                        400 	.ds	7
      000013 02r00r21         [24]  401 	ljmp	_int1
                                    402 ;--------------------------------------------------------
                                    403 ; global & static initialisations
                                    404 ;--------------------------------------------------------
                                    405 	.area HOME    (CODE)
                                    406 	.area GSINIT  (CODE)
                                    407 	.area GSFINAL (CODE)
                                    408 	.area GSINIT  (CODE)
                                    409 	.globl __sdcc_gsinit_startup
                                    410 	.globl __sdcc_program_startup
                                    411 	.globl __start__stack
                                    412 	.globl __mcs51_genXINIT
                                    413 	.globl __mcs51_genXRAMCLEAR
                                    414 	.globl __mcs51_genRAMCLEAR
                                    415 	.area GSFINAL (CODE)
      000000 02r00r16         [24]  416 	ljmp	__sdcc_program_startup
                                    417 ;--------------------------------------------------------
                                    418 ; Home
                                    419 ;--------------------------------------------------------
                                    420 	.area HOME    (CODE)
                                    421 	.area HOME    (CODE)
      000016                        422 __sdcc_program_startup:
      000016 02r00r34         [24]  423 	ljmp	_main
                                    424 ;	return from main will return to caller
                                    425 ;--------------------------------------------------------
                                    426 ; code
                                    427 ;--------------------------------------------------------
                                    428 	.area CSEG    (CODE)
                                    429 ;------------------------------------------------------------
                                    430 ;Allocation info for local variables in function 'putchar'
                                    431 ;------------------------------------------------------------
                                    432 ;c                         Allocated to registers 
                                    433 ;------------------------------------------------------------
                                    434 ;	life.c:6: int putchar(int c) __naked {
                                    435 ;	-----------------------------------------
                                    436 ;	 function putchar
                                    437 ;	-----------------------------------------
      000000                        438 _putchar:
                                    439 ;	naked function: no prologue.
                                    440 ;	life.c:11: __endasm;
      000000 E5 82            [12]  441 	mov	a, dpl
      000002 02 00 30         [24]  442 	ljmp	0x0030
                                    443 ;	life.c:12: }
                                    444 ;	naked function: no epilogue.
                                    445 ;------------------------------------------------------------
                                    446 ;Allocation info for local variables in function 'getchar'
                                    447 ;------------------------------------------------------------
                                    448 ;	life.c:14: int getchar(void) __naked {
                                    449 ;	-----------------------------------------
                                    450 ;	 function getchar
                                    451 ;	-----------------------------------------
      000005                        452 _getchar:
                                    453 ;	naked function: no prologue.
                                    454 ;	life.c:20: __endasm;
      000005 12 00 32         [24]  455 	lcall	0x0032
      000008 F5 82            [12]  456 	mov	dpl, a
      00000A 75 83 00         [24]  457 	mov	dph, #0
      00000D 22               [24]  458 	ret
                                    459 ;	life.c:21: }
                                    460 ;	naked function: no epilogue.
                                    461 ;------------------------------------------------------------
                                    462 ;Allocation info for local variables in function 'int0'
                                    463 ;------------------------------------------------------------
                                    464 ;	life.c:63: void int0(void) __interrupt 0 __using 1 {
                                    465 ;	-----------------------------------------
                                    466 ;	 function int0
                                    467 ;	-----------------------------------------
      00000E                        468 _int0:
                           00000F   469 	ar7 = 0x0f
                           00000E   470 	ar6 = 0x0e
                           00000D   471 	ar5 = 0x0d
                           00000C   472 	ar4 = 0x0c
                           00000B   473 	ar3 = 0x0b
                           00000A   474 	ar2 = 0x0a
                           000009   475 	ar1 = 0x09
                           000008   476 	ar0 = 0x08
      00000E C0 E0            [24]  477 	push	acc
      000010 C0 82            [24]  478 	push	dpl
      000012 C0 83            [24]  479 	push	dph
                                    480 ;	life.c:64: i0 = 1;
      000014 90r00r00         [24]  481 	mov	dptr,#_i0
      000017 74 01            [12]  482 	mov	a,#0x01
      000019 F0               [24]  483 	movx	@dptr,a
                                    484 ;	life.c:65: }
      00001A D0 83            [24]  485 	pop	dph
      00001C D0 82            [24]  486 	pop	dpl
      00001E D0 E0            [24]  487 	pop	acc
      000020 32               [24]  488 	reti
                                    489 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    490 ;	eliminated unneeded push/pop psw
                                    491 ;	eliminated unneeded push/pop b
                                    492 ;------------------------------------------------------------
                                    493 ;Allocation info for local variables in function 'int1'
                                    494 ;------------------------------------------------------------
                                    495 ;	life.c:68: void int1(void) __interrupt 2 __using 1 {
                                    496 ;	-----------------------------------------
                                    497 ;	 function int1
                                    498 ;	-----------------------------------------
      000021                        499 _int1:
      000021 C0 E0            [24]  500 	push	acc
      000023 C0 82            [24]  501 	push	dpl
      000025 C0 83            [24]  502 	push	dph
                                    503 ;	life.c:69: i1 = 1;
      000027 90r00r01         [24]  504 	mov	dptr,#_i1
      00002A 74 01            [12]  505 	mov	a,#0x01
      00002C F0               [24]  506 	movx	@dptr,a
                                    507 ;	life.c:70: }
      00002D D0 83            [24]  508 	pop	dph
      00002F D0 82            [24]  509 	pop	dpl
      000031 D0 E0            [24]  510 	pop	acc
      000033 32               [24]  511 	reti
                                    512 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    513 ;	eliminated unneeded push/pop psw
                                    514 ;	eliminated unneeded push/pop b
                                    515 ;------------------------------------------------------------
                                    516 ;Allocation info for local variables in function 'main'
                                    517 ;------------------------------------------------------------
                                    518 ;__2621440020              Allocated to registers 
                                    519 ;s                         Allocated to registers r5 r6 r7 
                                    520 ;__2621440022              Allocated to registers 
                                    521 ;s                         Allocated to registers r5 r6 r7 
                                    522 ;__1310720015              Allocated to registers r6 r7 
                                    523 ;a                         Allocated to registers r4 r5 
                                    524 ;__1310720017              Allocated to registers 
                                    525 ;s                         Allocated to registers r5 r6 r7 
                                    526 ;__2621440025              Allocated to registers 
                                    527 ;s                         Allocated to registers r5 r6 r7 
                                    528 ;__1310720003              Allocated to registers 
                                    529 ;s                         Allocated to registers r5 r6 r7 
                                    530 ;__2621440001              Allocated to registers r6 r7 
                                    531 ;a                         Allocated to registers r4 r5 
                                    532 ;__1310720006              Allocated to registers 
                                    533 ;s                         Allocated to registers r5 r6 r7 
                                    534 ;__3276800009              Allocated to registers 
                                    535 ;s                         Allocated to registers r5 r6 r7 
                                    536 ;__3276800011              Allocated to registers 
                                    537 ;s                         Allocated to registers r5 r6 r7 
                                    538 ;__2621440013              Allocated to registers 
                                    539 ;s                         Allocated to registers r5 r6 r7 
                                    540 ;__4587520030              Allocated to registers 
                                    541 ;s                         Allocated to registers r5 r6 r7 
                                    542 ;__3276800032              Allocated to registers 
                                    543 ;s                         Allocated to registers r5 r6 r7 
                                    544 ;__1310720034              Allocated to registers 
                                    545 ;s                         Allocated to registers r5 r6 r7 
                                    546 ;sloc0                     Allocated to stack - _bp +1
                                    547 ;------------------------------------------------------------
                                    548 ;	life.c:180: void main(void) {
                                    549 ;	-----------------------------------------
                                    550 ;	 function main
                                    551 ;	-----------------------------------------
      000034                        552 _main:
                           000007   553 	ar7 = 0x07
                           000006   554 	ar6 = 0x06
                           000005   555 	ar5 = 0x05
                           000004   556 	ar4 = 0x04
                           000003   557 	ar3 = 0x03
                           000002   558 	ar2 = 0x02
                           000001   559 	ar1 = 0x01
                           000000   560 	ar0 = 0x00
      000034 C0*00            [24]  561 	push	_bp
      000036 85 81*00         [24]  562 	mov	_bp,sp
      000039 05 81            [12]  563 	inc	sp
                                    564 ;	life.c:181: IT0 = 1;
                                    565 ;	assignBit
      00003B D2 88            [12]  566 	setb	_IT0
                                    567 ;	life.c:182: IT1 = 1;
                                    568 ;	assignBit
      00003D D2 8A            [12]  569 	setb	_IT1
                                    570 ;	life.c:183: EX0 = 1;
                                    571 ;	assignBit
      00003F D2 A8            [12]  572 	setb	_EX0
                                    573 ;	life.c:184: EX1 = 1;
                                    574 ;	assignBit
      000041 D2 AA            [12]  575 	setb	_EX1
                                    576 ;	life.c:185: EA = 1;
                                    577 ;	assignBit
      000043 D2 AF            [12]  578 	setb	_EA
                                    579 ;	life.c:187: for (i0 = 0; !i0; ) {
      000045 90r00r00         [24]  580 	mov	dptr,#_i0
      000048 E4               [12]  581 	clr	a
      000049 F0               [24]  582 	movx	@dptr,a
      00004A 90r00r01         [24]  583 	mov	dptr,#_i1
      00004D F0               [24]  584 	movx	@dptr,a
      00004E                        585 00256$:
                                    586 ;	life.c:114: for (y = 0; y < H; y++)
      00004E 90r0Cr04         [24]  587 	mov	dptr,#_y
      000051 E4               [12]  588 	clr	a
      000052 F0               [24]  589 	movx	@dptr,a
      000053 A3               [24]  590 	inc	dptr
      000054 F0               [24]  591 	movx	@dptr,a
      000055                        592 00189$:
                                    593 ;	life.c:115: for (x = 0; x < W; x++) {
      000055 90r0Cr02         [24]  594 	mov	dptr,#_x
      000058 E4               [12]  595 	clr	a
      000059 F0               [24]  596 	movx	@dptr,a
      00005A A3               [24]  597 	inc	dptr
      00005B F0               [24]  598 	movx	@dptr,a
      00005C                        599 00187$:
                                    600 ;	life.c:116: u[y][x] = 0;
      00005C 90r0Cr04         [24]  601 	mov	dptr,#_y
      00005F E0               [24]  602 	movx	a,@dptr
      000060 FE               [12]  603 	mov	r6,a
      000061 A3               [24]  604 	inc	dptr
      000062 E0               [24]  605 	movx	a,@dptr
      000063 C4               [12]  606 	swap	a
      000064 23               [12]  607 	rl	a
      000065 54 E0            [12]  608 	anl	a,#0xe0
      000067 CE               [12]  609 	xch	a,r6
      000068 C4               [12]  610 	swap	a
      000069 23               [12]  611 	rl	a
      00006A CE               [12]  612 	xch	a,r6
      00006B 6E               [12]  613 	xrl	a,r6
      00006C CE               [12]  614 	xch	a,r6
      00006D 54 E0            [12]  615 	anl	a,#0xe0
      00006F CE               [12]  616 	xch	a,r6
      000070 6E               [12]  617 	xrl	a,r6
      000071 FF               [12]  618 	mov	r7,a
      000072 EE               [12]  619 	mov	a,r6
      000073 24r02            [12]  620 	add	a,#_u
      000075 FE               [12]  621 	mov	r6,a
      000076 EF               [12]  622 	mov	a,r7
      000077 34s04            [12]  623 	addc	a,#(_u >> 8)
      000079 FF               [12]  624 	mov	r7,a
      00007A 90r0Cr02         [24]  625 	mov	dptr,#_x
      00007D E0               [24]  626 	movx	a,@dptr
      00007E FC               [12]  627 	mov	r4,a
      00007F A3               [24]  628 	inc	dptr
      000080 E0               [24]  629 	movx	a,@dptr
      000081 FD               [12]  630 	mov	r5,a
      000082 EC               [12]  631 	mov	a,r4
      000083 2E               [12]  632 	add	a,r6
      000084 F5 82            [12]  633 	mov	dpl,a
      000086 ED               [12]  634 	mov	a,r5
      000087 3F               [12]  635 	addc	a,r7
      000088 F5 83            [12]  636 	mov	dph,a
      00008A E4               [12]  637 	clr	a
      00008B F0               [24]  638 	movx	@dptr,a
                                    639 ;	life.c:117: pu[y][x] = 0;
      00008C 90r0Cr04         [24]  640 	mov	dptr,#_y
      00008F E0               [24]  641 	movx	a,@dptr
      000090 FE               [12]  642 	mov	r6,a
      000091 A3               [24]  643 	inc	dptr
      000092 E0               [24]  644 	movx	a,@dptr
      000093 C4               [12]  645 	swap	a
      000094 23               [12]  646 	rl	a
      000095 54 E0            [12]  647 	anl	a,#0xe0
      000097 CE               [12]  648 	xch	a,r6
      000098 C4               [12]  649 	swap	a
      000099 23               [12]  650 	rl	a
      00009A CE               [12]  651 	xch	a,r6
      00009B 6E               [12]  652 	xrl	a,r6
      00009C CE               [12]  653 	xch	a,r6
      00009D 54 E0            [12]  654 	anl	a,#0xe0
      00009F CE               [12]  655 	xch	a,r6
      0000A0 6E               [12]  656 	xrl	a,r6
      0000A1 FF               [12]  657 	mov	r7,a
      0000A2 EE               [12]  658 	mov	a,r6
      0000A3 24r02            [12]  659 	add	a,#_pu
      0000A5 FE               [12]  660 	mov	r6,a
      0000A6 EF               [12]  661 	mov	a,r7
      0000A7 34s00            [12]  662 	addc	a,#(_pu >> 8)
      0000A9 FF               [12]  663 	mov	r7,a
      0000AA 90r0Cr02         [24]  664 	mov	dptr,#_x
      0000AD E0               [24]  665 	movx	a,@dptr
      0000AE FC               [12]  666 	mov	r4,a
      0000AF A3               [24]  667 	inc	dptr
      0000B0 E0               [24]  668 	movx	a,@dptr
      0000B1 FD               [12]  669 	mov	r5,a
      0000B2 EC               [12]  670 	mov	a,r4
      0000B3 2E               [12]  671 	add	a,r6
      0000B4 F5 82            [12]  672 	mov	dpl,a
      0000B6 ED               [12]  673 	mov	a,r5
      0000B7 3F               [12]  674 	addc	a,r7
      0000B8 F5 83            [12]  675 	mov	dph,a
      0000BA E4               [12]  676 	clr	a
      0000BB F0               [24]  677 	movx	@dptr,a
                                    678 ;	life.c:115: for (x = 0; x < W; x++) {
      0000BC 90r0Cr02         [24]  679 	mov	dptr,#_x
      0000BF E0               [24]  680 	movx	a,@dptr
      0000C0 24 01            [12]  681 	add	a,#0x01
      0000C2 F0               [24]  682 	movx	@dptr,a
      0000C3 A3               [24]  683 	inc	dptr
      0000C4 E0               [24]  684 	movx	a,@dptr
      0000C5 34 00            [12]  685 	addc	a,#0x00
      0000C7 F0               [24]  686 	movx	@dptr,a
      0000C8 90r0Cr02         [24]  687 	mov	dptr,#_x
      0000CB E0               [24]  688 	movx	a,@dptr
      0000CC FE               [12]  689 	mov	r6,a
      0000CD A3               [24]  690 	inc	dptr
      0000CE E0               [24]  691 	movx	a,@dptr
      0000CF FF               [12]  692 	mov	r7,a
      0000D0 C3               [12]  693 	clr	c
      0000D1 EE               [12]  694 	mov	a,r6
      0000D2 94 20            [12]  695 	subb	a,#0x20
      0000D4 EF               [12]  696 	mov	a,r7
      0000D5 64 80            [12]  697 	xrl	a,#0x80
      0000D7 94 80            [12]  698 	subb	a,#0x80
      0000D9 50 03            [24]  699 	jnc	00559$
      0000DB 02r00r5C         [24]  700 	ljmp	00187$
      0000DE                        701 00559$:
                                    702 ;	life.c:114: for (y = 0; y < H; y++)
      0000DE 90r0Cr04         [24]  703 	mov	dptr,#_y
      0000E1 E0               [24]  704 	movx	a,@dptr
      0000E2 24 01            [12]  705 	add	a,#0x01
      0000E4 F0               [24]  706 	movx	@dptr,a
      0000E5 A3               [24]  707 	inc	dptr
      0000E6 E0               [24]  708 	movx	a,@dptr
      0000E7 34 00            [12]  709 	addc	a,#0x00
      0000E9 F0               [24]  710 	movx	@dptr,a
      0000EA 90r0Cr04         [24]  711 	mov	dptr,#_y
      0000ED E0               [24]  712 	movx	a,@dptr
      0000EE FE               [12]  713 	mov	r6,a
      0000EF A3               [24]  714 	inc	dptr
      0000F0 E0               [24]  715 	movx	a,@dptr
      0000F1 FF               [12]  716 	mov	r7,a
      0000F2 C3               [12]  717 	clr	c
      0000F3 EE               [12]  718 	mov	a,r6
      0000F4 94 20            [12]  719 	subb	a,#0x20
      0000F6 EF               [12]  720 	mov	a,r7
      0000F7 64 80            [12]  721 	xrl	a,#0x80
      0000F9 94 80            [12]  722 	subb	a,#0x80
      0000FB 50 03            [24]  723 	jnc	00560$
      0000FD 02r00r55         [24]  724 	ljmp	00189$
      000100                        725 00560$:
                                    726 ;	life.c:189: printstr("\033[2J\033[mINIT\r\n");
      000100 7Dr25            [12]  727 	mov	r5,#___str_5
      000102 7Es00            [12]  728 	mov	r6,#(___str_5 >> 8)
      000104 7F 80            [12]  729 	mov	r7,#0x80
                                    730 ;	life.c:47: return;
      000106                        731 00192$:
                                    732 ;	life.c:45: for (; *s; s++) putchar(*s);
      000106 8D 82            [24]  733 	mov	dpl,r5
      000108 8E 83            [24]  734 	mov	dph,r6
      00010A 8F F0            [24]  735 	mov	b,r7
      00010C 12r00r00         [24]  736 	lcall	__gptrget
      00010F FC               [12]  737 	mov	r4,a
      000110 60 10            [24]  738 	jz	00112$
      000112 7B 00            [12]  739 	mov	r3,#0x00
      000114 8C 82            [24]  740 	mov	dpl,r4
      000116 8B 83            [24]  741 	mov	dph,r3
      000118 12r00r00         [24]  742 	lcall	_putchar
      00011B 0D               [12]  743 	inc	r5
                                    744 ;	life.c:189: printstr("\033[2J\033[mINIT\r\n");
      00011C BD 00 E7         [24]  745 	cjne	r5,#0x00,00192$
      00011F 0E               [12]  746 	inc	r6
      000120 80 E4            [24]  747 	sjmp	00192$
      000122                        748 00112$:
                                    749 ;	life.c:190: (void)getchar();
      000122 12r00r05         [24]  750 	lcall	_getchar
                                    751 ;	life.c:192: printstr("LOAD\r\n");
      000125 7Dr33            [12]  752 	mov	r5,#___str_6
      000127 7Es00            [12]  753 	mov	r6,#(___str_6 >> 8)
      000129 7F 80            [12]  754 	mov	r7,#0x80
                                    755 ;	life.c:47: return;
      00012B                        756 00195$:
                                    757 ;	life.c:45: for (; *s; s++) putchar(*s);
      00012B 8D 82            [24]  758 	mov	dpl,r5
      00012D 8E 83            [24]  759 	mov	dph,r6
      00012F 8F F0            [24]  760 	mov	b,r7
      000131 12r00r00         [24]  761 	lcall	__gptrget
      000134 FC               [12]  762 	mov	r4,a
      000135 60 10            [24]  763 	jz	00114$
      000137 7B 00            [12]  764 	mov	r3,#0x00
      000139 8C 82            [24]  765 	mov	dpl,r4
      00013B 8B 83            [24]  766 	mov	dph,r3
      00013D 12r00r00         [24]  767 	lcall	_putchar
      000140 0D               [12]  768 	inc	r5
                                    769 ;	life.c:192: printstr("LOAD\r\n");
      000141 BD 00 E7         [24]  770 	cjne	r5,#0x00,00195$
      000144 0E               [12]  771 	inc	r6
      000145 80 E4            [24]  772 	sjmp	00195$
      000147                        773 00114$:
                                    774 ;	life.c:193: (void)getchar();
      000147 12r00r05         [24]  775 	lcall	_getchar
                                    776 ;	life.c:124: j = 0;
      00014A 90r0Cr15         [24]  777 	mov	dptr,#_j
      00014D E4               [12]  778 	clr	a
      00014E F0               [24]  779 	movx	@dptr,a
      00014F A3               [24]  780 	inc	dptr
      000150 F0               [24]  781 	movx	@dptr,a
                                    782 ;	life.c:126: putchar('<');
      000151 90 00 3C         [24]  783 	mov	dptr,#0x003c
      000154 12r00r00         [24]  784 	lcall	_putchar
                                    785 ;	life.c:128: for (y = 0; y < H; y++)
      000157 90r0Cr04         [24]  786 	mov	dptr,#_y
      00015A E4               [12]  787 	clr	a
      00015B F0               [24]  788 	movx	@dptr,a
      00015C A3               [24]  789 	inc	dptr
      00015D F0               [24]  790 	movx	@dptr,a
      00015E                        791 00199$:
                                    792 ;	life.c:129: for (x = 0; x < W; x++) {
      00015E 90r0Cr02         [24]  793 	mov	dptr,#_x
      000161 E4               [12]  794 	clr	a
      000162 F0               [24]  795 	movx	@dptr,a
      000163 A3               [24]  796 	inc	dptr
      000164 F0               [24]  797 	movx	@dptr,a
      000165                        798 00197$:
                                    799 ;	life.c:130: c = getchar();
      000165 12r00r05         [24]  800 	lcall	_getchar
      000168 AE 82            [24]  801 	mov	r6,dpl
      00016A AF 83            [24]  802 	mov	r7,dph
      00016C 90r0Cr17         [24]  803 	mov	dptr,#_c
      00016F EE               [12]  804 	mov	a,r6
      000170 F0               [24]  805 	movx	@dptr,a
      000171 EF               [12]  806 	mov	a,r7
      000172 A3               [24]  807 	inc	dptr
      000173 F0               [24]  808 	movx	@dptr,a
                                    809 ;	life.c:131: if (c == (int)'0') {
      000174 BE 30 41         [24]  810 	cjne	r6,#0x30,00121$
      000177 BF 00 3E         [24]  811 	cjne	r7,#0x00,00121$
                                    812 ;	life.c:132: u[y][x] = 0;
      00017A 90r0Cr04         [24]  813 	mov	dptr,#_y
      00017D E0               [24]  814 	movx	a,@dptr
      00017E FC               [12]  815 	mov	r4,a
      00017F A3               [24]  816 	inc	dptr
      000180 E0               [24]  817 	movx	a,@dptr
      000181 C4               [12]  818 	swap	a
      000182 23               [12]  819 	rl	a
      000183 54 E0            [12]  820 	anl	a,#0xe0
      000185 CC               [12]  821 	xch	a,r4
      000186 C4               [12]  822 	swap	a
      000187 23               [12]  823 	rl	a
      000188 CC               [12]  824 	xch	a,r4
      000189 6C               [12]  825 	xrl	a,r4
      00018A CC               [12]  826 	xch	a,r4
      00018B 54 E0            [12]  827 	anl	a,#0xe0
      00018D CC               [12]  828 	xch	a,r4
      00018E 6C               [12]  829 	xrl	a,r4
      00018F FD               [12]  830 	mov	r5,a
      000190 EC               [12]  831 	mov	a,r4
      000191 24r02            [12]  832 	add	a,#_u
      000193 FC               [12]  833 	mov	r4,a
      000194 ED               [12]  834 	mov	a,r5
      000195 34s04            [12]  835 	addc	a,#(_u >> 8)
      000197 FD               [12]  836 	mov	r5,a
      000198 90r0Cr02         [24]  837 	mov	dptr,#_x
      00019B E0               [24]  838 	movx	a,@dptr
      00019C FA               [12]  839 	mov	r2,a
      00019D A3               [24]  840 	inc	dptr
      00019E E0               [24]  841 	movx	a,@dptr
      00019F FB               [12]  842 	mov	r3,a
      0001A0 EA               [12]  843 	mov	a,r2
      0001A1 2C               [12]  844 	add	a,r4
      0001A2 F5 82            [12]  845 	mov	dpl,a
      0001A4 EB               [12]  846 	mov	a,r3
      0001A5 3D               [12]  847 	addc	a,r5
      0001A6 F5 83            [12]  848 	mov	dph,a
      0001A8 E4               [12]  849 	clr	a
      0001A9 F0               [24]  850 	movx	@dptr,a
                                    851 ;	life.c:133: j++;
      0001AA 90r0Cr15         [24]  852 	mov	dptr,#_j
      0001AD E0               [24]  853 	movx	a,@dptr
      0001AE 24 01            [12]  854 	add	a,#0x01
      0001B0 F0               [24]  855 	movx	@dptr,a
      0001B1 A3               [24]  856 	inc	dptr
      0001B2 E0               [24]  857 	movx	a,@dptr
      0001B3 34 00            [12]  858 	addc	a,#0x00
      0001B5 F0               [24]  859 	movx	@dptr,a
      0001B6 80 4D            [24]  860 	sjmp	00198$
      0001B8                        861 00121$:
                                    862 ;	life.c:134: } else if (c == (int)'1') {
      0001B8 BE 31 42         [24]  863 	cjne	r6,#0x31,00119$
      0001BB BF 00 3F         [24]  864 	cjne	r7,#0x00,00119$
                                    865 ;	life.c:135: u[y][x] = 1;
      0001BE 90r0Cr04         [24]  866 	mov	dptr,#_y
      0001C1 E0               [24]  867 	movx	a,@dptr
      0001C2 FC               [12]  868 	mov	r4,a
      0001C3 A3               [24]  869 	inc	dptr
      0001C4 E0               [24]  870 	movx	a,@dptr
      0001C5 C4               [12]  871 	swap	a
      0001C6 23               [12]  872 	rl	a
      0001C7 54 E0            [12]  873 	anl	a,#0xe0
      0001C9 CC               [12]  874 	xch	a,r4
      0001CA C4               [12]  875 	swap	a
      0001CB 23               [12]  876 	rl	a
      0001CC CC               [12]  877 	xch	a,r4
      0001CD 6C               [12]  878 	xrl	a,r4
      0001CE CC               [12]  879 	xch	a,r4
      0001CF 54 E0            [12]  880 	anl	a,#0xe0
      0001D1 CC               [12]  881 	xch	a,r4
      0001D2 6C               [12]  882 	xrl	a,r4
      0001D3 FD               [12]  883 	mov	r5,a
      0001D4 EC               [12]  884 	mov	a,r4
      0001D5 24r02            [12]  885 	add	a,#_u
      0001D7 FC               [12]  886 	mov	r4,a
      0001D8 ED               [12]  887 	mov	a,r5
      0001D9 34s04            [12]  888 	addc	a,#(_u >> 8)
      0001DB FD               [12]  889 	mov	r5,a
      0001DC 90r0Cr02         [24]  890 	mov	dptr,#_x
      0001DF E0               [24]  891 	movx	a,@dptr
      0001E0 FA               [12]  892 	mov	r2,a
      0001E1 A3               [24]  893 	inc	dptr
      0001E2 E0               [24]  894 	movx	a,@dptr
      0001E3 FB               [12]  895 	mov	r3,a
      0001E4 EA               [12]  896 	mov	a,r2
      0001E5 2C               [12]  897 	add	a,r4
      0001E6 F5 82            [12]  898 	mov	dpl,a
      0001E8 EB               [12]  899 	mov	a,r3
      0001E9 3D               [12]  900 	addc	a,r5
      0001EA F5 83            [12]  901 	mov	dph,a
      0001EC 74 01            [12]  902 	mov	a,#0x01
      0001EE F0               [24]  903 	movx	@dptr,a
                                    904 ;	life.c:136: j++;
      0001EF 90r0Cr15         [24]  905 	mov	dptr,#_j
      0001F2 E0               [24]  906 	movx	a,@dptr
      0001F3 24 01            [12]  907 	add	a,#0x01
      0001F5 F0               [24]  908 	movx	@dptr,a
      0001F6 A3               [24]  909 	inc	dptr
      0001F7 E0               [24]  910 	movx	a,@dptr
      0001F8 34 00            [12]  911 	addc	a,#0x00
      0001FA F0               [24]  912 	movx	@dptr,a
      0001FB 80 08            [24]  913 	sjmp	00198$
      0001FD                        914 00119$:
                                    915 ;	life.c:137: } else if (c == (int)'#') goto out;
      0001FD BE 23 05         [24]  916 	cjne	r6,#0x23,00569$
      000200 BF 00 02         [24]  917 	cjne	r7,#0x00,00569$
      000203 80 44            [24]  918 	sjmp	00132$
      000205                        919 00569$:
      000205                        920 00198$:
                                    921 ;	life.c:129: for (x = 0; x < W; x++) {
      000205 90r0Cr02         [24]  922 	mov	dptr,#_x
      000208 E0               [24]  923 	movx	a,@dptr
      000209 24 01            [12]  924 	add	a,#0x01
      00020B F0               [24]  925 	movx	@dptr,a
      00020C A3               [24]  926 	inc	dptr
      00020D E0               [24]  927 	movx	a,@dptr
      00020E 34 00            [12]  928 	addc	a,#0x00
      000210 F0               [24]  929 	movx	@dptr,a
      000211 90r0Cr02         [24]  930 	mov	dptr,#_x
      000214 E0               [24]  931 	movx	a,@dptr
      000215 FE               [12]  932 	mov	r6,a
      000216 A3               [24]  933 	inc	dptr
      000217 E0               [24]  934 	movx	a,@dptr
      000218 FF               [12]  935 	mov	r7,a
      000219 C3               [12]  936 	clr	c
      00021A EE               [12]  937 	mov	a,r6
      00021B 94 20            [12]  938 	subb	a,#0x20
      00021D EF               [12]  939 	mov	a,r7
      00021E 64 80            [12]  940 	xrl	a,#0x80
      000220 94 80            [12]  941 	subb	a,#0x80
      000222 50 03            [24]  942 	jnc	00570$
      000224 02r01r65         [24]  943 	ljmp	00197$
      000227                        944 00570$:
                                    945 ;	life.c:128: for (y = 0; y < H; y++)
      000227 90r0Cr04         [24]  946 	mov	dptr,#_y
      00022A E0               [24]  947 	movx	a,@dptr
      00022B 24 01            [12]  948 	add	a,#0x01
      00022D F0               [24]  949 	movx	@dptr,a
      00022E A3               [24]  950 	inc	dptr
      00022F E0               [24]  951 	movx	a,@dptr
      000230 34 00            [12]  952 	addc	a,#0x00
      000232 F0               [24]  953 	movx	@dptr,a
      000233 90r0Cr04         [24]  954 	mov	dptr,#_y
      000236 E0               [24]  955 	movx	a,@dptr
      000237 FE               [12]  956 	mov	r6,a
      000238 A3               [24]  957 	inc	dptr
      000239 E0               [24]  958 	movx	a,@dptr
      00023A FF               [12]  959 	mov	r7,a
      00023B C3               [12]  960 	clr	c
      00023C EE               [12]  961 	mov	a,r6
      00023D 94 20            [12]  962 	subb	a,#0x20
      00023F EF               [12]  963 	mov	a,r7
      000240 64 80            [12]  964 	xrl	a,#0x80
      000242 94 80            [12]  965 	subb	a,#0x80
      000244 50 03            [24]  966 	jnc	00571$
      000246 02r01r5E         [24]  967 	ljmp	00199$
      000249                        968 00571$:
                                    969 ;	life.c:140: out:
      000249                        970 00132$:
                                    971 ;	life.c:141: if (c != (int)'#')
      000249 90r0Cr17         [24]  972 	mov	dptr,#_c
      00024C E0               [24]  973 	movx	a,@dptr
      00024D FE               [12]  974 	mov	r6,a
      00024E A3               [24]  975 	inc	dptr
      00024F E0               [24]  976 	movx	a,@dptr
      000250 FF               [12]  977 	mov	r7,a
      000251 BE 23 05         [24]  978 	cjne	r6,#0x23,00572$
      000254 BF 00 02         [24]  979 	cjne	r7,#0x00,00572$
      000257 80 15            [24]  980 	sjmp	00131$
      000259                        981 00572$:
                                    982 ;	life.c:142: while (1) {
      000259                        983 00128$:
                                    984 ;	life.c:143: c = getchar();
      000259 12r00r05         [24]  985 	lcall	_getchar
      00025C AE 82            [24]  986 	mov	r6,dpl
      00025E AF 83            [24]  987 	mov	r7,dph
      000260 90r0Cr17         [24]  988 	mov	dptr,#_c
      000263 EE               [12]  989 	mov	a,r6
      000264 F0               [24]  990 	movx	@dptr,a
      000265 EF               [12]  991 	mov	a,r7
      000266 A3               [24]  992 	inc	dptr
      000267 F0               [24]  993 	movx	@dptr,a
                                    994 ;	life.c:144: if (c == (int)'#') break;
      000268 BE 23 EE         [24]  995 	cjne	r6,#0x23,00128$
      00026B BF 00 EB         [24]  996 	cjne	r7,#0x00,00128$
      00026E                        997 00131$:
                                    998 ;	life.c:146: print16x(j);
      00026E 90r0Cr15         [24]  999 	mov	dptr,#_j
      000271 E0               [24] 1000 	movx	a,@dptr
      000272 FE               [12] 1001 	mov	r6,a
      000273 A3               [24] 1002 	inc	dptr
      000274 E0               [24] 1003 	movx	a,@dptr
      000275 FF               [12] 1004 	mov	r7,a
      000276 8E 04            [24] 1005 	mov	ar4,r6
                                   1006 ;	life.c:36: putchar(digits[(a >> 12) & 0xf]);
      000278 EF               [12] 1007 	mov	a,r7
      000279 FD               [12] 1008 	mov	r5,a
      00027A C4               [12] 1009 	swap	a
      00027B 54 0F            [12] 1010 	anl	a,#0x0f
      00027D 30 E3 02         [24] 1011 	jnb	acc.3,00575$
      000280 44 F0            [12] 1012 	orl	a,#0xf0
      000282                       1013 00575$:
      000282 FE               [12] 1014 	mov	r6,a
      000283 33               [12] 1015 	rlc	a
      000284 95 E0            [12] 1016 	subb	a,acc
      000286 53 06 0F         [24] 1017 	anl	ar6,#0x0f
      000289 7F 00            [12] 1018 	mov	r7,#0x00
      00028B EE               [12] 1019 	mov	a,r6
      00028C 24r00            [12] 1020 	add	a,#_digits
      00028E F5 82            [12] 1021 	mov	dpl,a
      000290 EF               [12] 1022 	mov	a,r7
      000291 34s00            [12] 1023 	addc	a,#(_digits >> 8)
      000293 F5 83            [12] 1024 	mov	dph,a
      000295 E4               [12] 1025 	clr	a
      000296 93               [24] 1026 	movc	a,@a+dptr
      000297 FF               [12] 1027 	mov	r7,a
      000298 7E 00            [12] 1028 	mov	r6,#0x00
      00029A 8F 82            [24] 1029 	mov	dpl,r7
      00029C 8E 83            [24] 1030 	mov	dph,r6
      00029E 12r00r00         [24] 1031 	lcall	_putchar
                                   1032 ;	life.c:37: putchar(digits[(a >> 8) & 0xf]);
      0002A1 8D 07            [24] 1033 	mov	ar7,r5
      0002A3 53 07 0F         [24] 1034 	anl	ar7,#0x0f
      0002A6 7E 00            [12] 1035 	mov	r6,#0x00
      0002A8 EF               [12] 1036 	mov	a,r7
      0002A9 24r00            [12] 1037 	add	a,#_digits
      0002AB F5 82            [12] 1038 	mov	dpl,a
      0002AD EE               [12] 1039 	mov	a,r6
      0002AE 34s00            [12] 1040 	addc	a,#(_digits >> 8)
      0002B0 F5 83            [12] 1041 	mov	dph,a
      0002B2 E4               [12] 1042 	clr	a
      0002B3 93               [24] 1043 	movc	a,@a+dptr
      0002B4 FF               [12] 1044 	mov	r7,a
      0002B5 7E 00            [12] 1045 	mov	r6,#0x00
      0002B7 8F 82            [24] 1046 	mov	dpl,r7
      0002B9 8E 83            [24] 1047 	mov	dph,r6
      0002BB 12r00r00         [24] 1048 	lcall	_putchar
                                   1049 ;	life.c:38: putchar(digits[(a >> 4) & 0xf]);
      0002BE 8C 06            [24] 1050 	mov	ar6,r4
      0002C0 ED               [12] 1051 	mov	a,r5
      0002C1 C4               [12] 1052 	swap	a
      0002C2 CE               [12] 1053 	xch	a,r6
      0002C3 C4               [12] 1054 	swap	a
      0002C4 54 0F            [12] 1055 	anl	a,#0x0f
      0002C6 6E               [12] 1056 	xrl	a,r6
      0002C7 CE               [12] 1057 	xch	a,r6
      0002C8 54 0F            [12] 1058 	anl	a,#0x0f
      0002CA CE               [12] 1059 	xch	a,r6
      0002CB 6E               [12] 1060 	xrl	a,r6
      0002CC CE               [12] 1061 	xch	a,r6
      0002CD 30 E3 02         [24] 1062 	jnb	acc.3,00576$
      0002D0 44 F0            [12] 1063 	orl	a,#0xf0
      0002D2                       1064 00576$:
      0002D2 53 06 0F         [24] 1065 	anl	ar6,#0x0f
      0002D5 7F 00            [12] 1066 	mov	r7,#0x00
      0002D7 EE               [12] 1067 	mov	a,r6
      0002D8 24r00            [12] 1068 	add	a,#_digits
      0002DA F5 82            [12] 1069 	mov	dpl,a
      0002DC EF               [12] 1070 	mov	a,r7
      0002DD 34s00            [12] 1071 	addc	a,#(_digits >> 8)
      0002DF F5 83            [12] 1072 	mov	dph,a
      0002E1 E4               [12] 1073 	clr	a
      0002E2 93               [24] 1074 	movc	a,@a+dptr
      0002E3 FF               [12] 1075 	mov	r7,a
      0002E4 7E 00            [12] 1076 	mov	r6,#0x00
      0002E6 8F 82            [24] 1077 	mov	dpl,r7
      0002E8 8E 83            [24] 1078 	mov	dph,r6
      0002EA 12r00r00         [24] 1079 	lcall	_putchar
                                   1080 ;	life.c:39: putchar(digits[a & 0xf]);
      0002ED 53 04 0F         [24] 1081 	anl	ar4,#0x0f
      0002F0 7D 00            [12] 1082 	mov	r5,#0x00
      0002F2 EC               [12] 1083 	mov	a,r4
      0002F3 24r00            [12] 1084 	add	a,#_digits
      0002F5 F5 82            [12] 1085 	mov	dpl,a
      0002F7 ED               [12] 1086 	mov	a,r5
      0002F8 34s00            [12] 1087 	addc	a,#(_digits >> 8)
      0002FA F5 83            [12] 1088 	mov	dph,a
      0002FC E4               [12] 1089 	clr	a
      0002FD 93               [24] 1090 	movc	a,@a+dptr
      0002FE FF               [12] 1091 	mov	r7,a
      0002FF 7E 00            [12] 1092 	mov	r6,#0x00
      000301 8F 82            [24] 1093 	mov	dpl,r7
      000303 8E 83            [24] 1094 	mov	dph,r6
      000305 12r00r00         [24] 1095 	lcall	_putchar
                                   1096 ;	life.c:147: printstr(">\r\n");
      000308 7Dr21            [12] 1097 	mov	r5,#___str_4
      00030A 7Es00            [12] 1098 	mov	r6,#(___str_4 >> 8)
      00030C 7F 80            [12] 1099 	mov	r7,#0x80
                                   1100 ;	life.c:47: return;
      00030E                       1101 00202$:
                                   1102 ;	life.c:45: for (; *s; s++) putchar(*s);
      00030E 8D 82            [24] 1103 	mov	dpl,r5
      000310 8E 83            [24] 1104 	mov	dph,r6
      000312 8F F0            [24] 1105 	mov	b,r7
      000314 12r00r00         [24] 1106 	lcall	__gptrget
      000317 FC               [12] 1107 	mov	r4,a
      000318 60 10            [24] 1108 	jz	00135$
      00031A 7B 00            [12] 1109 	mov	r3,#0x00
      00031C 8C 82            [24] 1110 	mov	dpl,r4
      00031E 8B 83            [24] 1111 	mov	dph,r3
      000320 12r00r00         [24] 1112 	lcall	_putchar
      000323 0D               [12] 1113 	inc	r5
                                   1114 ;	life.c:147: printstr(">\r\n");
      000324 BD 00 E7         [24] 1115 	cjne	r5,#0x00,00202$
      000327 0E               [12] 1116 	inc	r6
      000328 80 E4            [24] 1117 	sjmp	00202$
      00032A                       1118 00135$:
                                   1119 ;	life.c:197: printstr("RDY\r\n");
      00032A 7Dr3A            [12] 1120 	mov	r5,#___str_7
      00032C 7Es00            [12] 1121 	mov	r6,#(___str_7 >> 8)
      00032E 7F 80            [12] 1122 	mov	r7,#0x80
                                   1123 ;	life.c:47: return;
      000330                       1124 00205$:
                                   1125 ;	life.c:45: for (; *s; s++) putchar(*s);
      000330 8D 82            [24] 1126 	mov	dpl,r5
      000332 8E 83            [24] 1127 	mov	dph,r6
      000334 8F F0            [24] 1128 	mov	b,r7
      000336 12r00r00         [24] 1129 	lcall	__gptrget
      000339 FC               [12] 1130 	mov	r4,a
      00033A 60 10            [24] 1131 	jz	00138$
      00033C 7B 00            [12] 1132 	mov	r3,#0x00
      00033E 8C 82            [24] 1133 	mov	dpl,r4
      000340 8B 83            [24] 1134 	mov	dph,r3
      000342 12r00r00         [24] 1135 	lcall	_putchar
      000345 0D               [12] 1136 	inc	r5
                                   1137 ;	life.c:197: printstr("RDY\r\n");
      000346 BD 00 E7         [24] 1138 	cjne	r5,#0x00,00205$
      000349 0E               [12] 1139 	inc	r6
      00034A 80 E4            [24] 1140 	sjmp	00205$
      00034C                       1141 00138$:
                                   1142 ;	life.c:198: (void)getchar();
      00034C 12r00r05         [24] 1143 	lcall	_getchar
                                   1144 ;	life.c:73: for (j = 0; j < 4; j++)
      00034F 90r0Cr15         [24] 1145 	mov	dptr,#_j
      000352 E4               [12] 1146 	clr	a
      000353 F0               [24] 1147 	movx	@dptr,a
      000354 A3               [24] 1148 	inc	dptr
      000355 F0               [24] 1149 	movx	@dptr,a
      000356                       1150 00207$:
                                   1151 ;	life.c:74: generation[j] = 0;
      000356 90r0Cr15         [24] 1152 	mov	dptr,#_j
      000359 E0               [24] 1153 	movx	a,@dptr
      00035A FE               [12] 1154 	mov	r6,a
      00035B A3               [24] 1155 	inc	dptr
      00035C E0               [24] 1156 	movx	a,@dptr
      00035D FF               [12] 1157 	mov	r7,a
      00035E EE               [12] 1158 	mov	a,r6
      00035F 2E               [12] 1159 	add	a,r6
      000360 FE               [12] 1160 	mov	r6,a
      000361 EF               [12] 1161 	mov	a,r7
      000362 33               [12] 1162 	rlc	a
      000363 FF               [12] 1163 	mov	r7,a
      000364 EE               [12] 1164 	mov	a,r6
      000365 24r0B            [12] 1165 	add	a,#_generation
      000367 F5 82            [12] 1166 	mov	dpl,a
      000369 EF               [12] 1167 	mov	a,r7
      00036A 34s0C            [12] 1168 	addc	a,#(_generation >> 8)
      00036C F5 83            [12] 1169 	mov	dph,a
      00036E E4               [12] 1170 	clr	a
      00036F F0               [24] 1171 	movx	@dptr,a
      000370 A3               [24] 1172 	inc	dptr
      000371 F0               [24] 1173 	movx	@dptr,a
                                   1174 ;	life.c:73: for (j = 0; j < 4; j++)
      000372 90r0Cr15         [24] 1175 	mov	dptr,#_j
      000375 E0               [24] 1176 	movx	a,@dptr
      000376 24 01            [12] 1177 	add	a,#0x01
      000378 F0               [24] 1178 	movx	@dptr,a
      000379 A3               [24] 1179 	inc	dptr
      00037A E0               [24] 1180 	movx	a,@dptr
      00037B 34 00            [12] 1181 	addc	a,#0x00
      00037D F0               [24] 1182 	movx	@dptr,a
      00037E 90r0Cr15         [24] 1183 	mov	dptr,#_j
      000381 E0               [24] 1184 	movx	a,@dptr
      000382 FE               [12] 1185 	mov	r6,a
      000383 A3               [24] 1186 	inc	dptr
      000384 E0               [24] 1187 	movx	a,@dptr
      000385 FF               [12] 1188 	mov	r7,a
      000386 C3               [12] 1189 	clr	c
      000387 EE               [12] 1190 	mov	a,r6
      000388 94 04            [12] 1191 	subb	a,#0x04
      00038A EF               [12] 1192 	mov	a,r7
      00038B 64 80            [12] 1193 	xrl	a,#0x80
      00038D 94 80            [12] 1194 	subb	a,#0x80
      00038F 40 C5            [24] 1195 	jc	00207$
                                   1196 ;	life.c:202: for (i1 = 0; !i0 && !i1; ) {
      000391                       1197 00251$:
      000391 90r00r00         [24] 1198 	mov	dptr,#_i0
      000394 E0               [24] 1199 	movx	a,@dptr
      000395 60 03            [24] 1200 	jz	00582$
      000397 02r09rFD         [24] 1201 	ljmp	00104$
      00039A                       1202 00582$:
                                   1203 ;	life.c:98: printstr("\033[2J\033[m");
      00039A 7Dr10            [12] 1204 	mov	r5,#___str_0
      00039C 7Es00            [12] 1205 	mov	r6,#(___str_0 >> 8)
      00039E 7F 80            [12] 1206 	mov	r7,#0x80
                                   1207 ;	life.c:47: return;
      0003A0                       1208 00210$:
                                   1209 ;	life.c:45: for (; *s; s++) putchar(*s);
      0003A0 8D 82            [24] 1210 	mov	dpl,r5
      0003A2 8E 83            [24] 1211 	mov	dph,r6
      0003A4 8F F0            [24] 1212 	mov	b,r7
      0003A6 12r00r00         [24] 1213 	lcall	__gptrget
      0003A9 FC               [12] 1214 	mov	r4,a
      0003AA 60 10            [24] 1215 	jz	00142$
      0003AC 7B 00            [12] 1216 	mov	r3,#0x00
      0003AE 8C 82            [24] 1217 	mov	dpl,r4
      0003B0 8B 83            [24] 1218 	mov	dph,r3
      0003B2 12r00r00         [24] 1219 	lcall	_putchar
      0003B5 0D               [12] 1220 	inc	r5
                                   1221 ;	life.c:98: printstr("\033[2J\033[m");
      0003B6 BD 00 E7         [24] 1222 	cjne	r5,#0x00,00210$
      0003B9 0E               [12] 1223 	inc	r6
      0003BA 80 E4            [24] 1224 	sjmp	00210$
      0003BC                       1225 00142$:
                                   1226 ;	life.c:89: for (j = 0; j < 4; j++) {
      0003BC 90r0Cr15         [24] 1227 	mov	dptr,#_j
      0003BF E4               [12] 1228 	clr	a
      0003C0 F0               [24] 1229 	movx	@dptr,a
      0003C1 A3               [24] 1230 	inc	dptr
      0003C2 F0               [24] 1231 	movx	@dptr,a
      0003C3                       1232 00212$:
                                   1233 ;	life.c:90: print16x(generation[3 - j]);
      0003C3 90r0Cr15         [24] 1234 	mov	dptr,#_j
      0003C6 E0               [24] 1235 	movx	a,@dptr
      0003C7 FE               [12] 1236 	mov	r6,a
      0003C8 A3               [24] 1237 	inc	dptr
      0003C9 E0               [24] 1238 	movx	a,@dptr
      0003CA 74 03            [12] 1239 	mov	a,#0x03
      0003CC C3               [12] 1240 	clr	c
      0003CD 9E               [12] 1241 	subb	a,r6
      0003CE FE               [12] 1242 	mov	r6,a
      0003CF C2 D5            [12] 1243 	clr	F0
      0003D1 75 F0 02         [24] 1244 	mov	b,#0x02
      0003D4 EE               [12] 1245 	mov	a,r6
      0003D5 30 E7 04         [24] 1246 	jnb	acc.7,00585$
      0003D8 B2 D5            [12] 1247 	cpl	F0
      0003DA F4               [12] 1248 	cpl	a
      0003DB 04               [12] 1249 	inc	a
      0003DC                       1250 00585$:
      0003DC A4               [48] 1251 	mul	ab
      0003DD 30 D5 0A         [24] 1252 	jnb	F0,00586$
      0003E0 F4               [12] 1253 	cpl	a
      0003E1 24 01            [12] 1254 	add	a,#0x01
      0003E3 C5 F0            [12] 1255 	xch	a,b
      0003E5 F4               [12] 1256 	cpl	a
      0003E6 34 00            [12] 1257 	addc	a,#0x00
      0003E8 C5 F0            [12] 1258 	xch	a,b
      0003EA                       1259 00586$:
      0003EA 24r0B            [12] 1260 	add	a,#_generation
      0003EC F5 82            [12] 1261 	mov	dpl,a
      0003EE 74s0C            [12] 1262 	mov	a,#(_generation >> 8)
      0003F0 35 F0            [12] 1263 	addc	a,b
      0003F2 F5 83            [12] 1264 	mov	dph,a
      0003F4 E0               [24] 1265 	movx	a,@dptr
      0003F5 FE               [12] 1266 	mov	r6,a
      0003F6 A3               [24] 1267 	inc	dptr
      0003F7 E0               [24] 1268 	movx	a,@dptr
      0003F8 FF               [12] 1269 	mov	r7,a
      0003F9 8E 04            [24] 1270 	mov	ar4,r6
                                   1271 ;	life.c:36: putchar(digits[(a >> 12) & 0xf]);
      0003FB EF               [12] 1272 	mov	a,r7
      0003FC FD               [12] 1273 	mov	r5,a
      0003FD C4               [12] 1274 	swap	a
      0003FE 54 0F            [12] 1275 	anl	a,#0x0f
      000400 30 E3 02         [24] 1276 	jnb	acc.3,00587$
      000403 44 F0            [12] 1277 	orl	a,#0xf0
      000405                       1278 00587$:
      000405 FE               [12] 1279 	mov	r6,a
      000406 33               [12] 1280 	rlc	a
      000407 95 E0            [12] 1281 	subb	a,acc
      000409 53 06 0F         [24] 1282 	anl	ar6,#0x0f
      00040C 7F 00            [12] 1283 	mov	r7,#0x00
      00040E EE               [12] 1284 	mov	a,r6
      00040F 24r00            [12] 1285 	add	a,#_digits
      000411 F5 82            [12] 1286 	mov	dpl,a
      000413 EF               [12] 1287 	mov	a,r7
      000414 34s00            [12] 1288 	addc	a,#(_digits >> 8)
      000416 F5 83            [12] 1289 	mov	dph,a
      000418 E4               [12] 1290 	clr	a
      000419 93               [24] 1291 	movc	a,@a+dptr
      00041A FF               [12] 1292 	mov	r7,a
      00041B 7E 00            [12] 1293 	mov	r6,#0x00
      00041D 8F 82            [24] 1294 	mov	dpl,r7
      00041F 8E 83            [24] 1295 	mov	dph,r6
      000421 12r00r00         [24] 1296 	lcall	_putchar
                                   1297 ;	life.c:37: putchar(digits[(a >> 8) & 0xf]);
      000424 8D 07            [24] 1298 	mov	ar7,r5
      000426 53 07 0F         [24] 1299 	anl	ar7,#0x0f
      000429 7E 00            [12] 1300 	mov	r6,#0x00
      00042B EF               [12] 1301 	mov	a,r7
      00042C 24r00            [12] 1302 	add	a,#_digits
      00042E F5 82            [12] 1303 	mov	dpl,a
      000430 EE               [12] 1304 	mov	a,r6
      000431 34s00            [12] 1305 	addc	a,#(_digits >> 8)
      000433 F5 83            [12] 1306 	mov	dph,a
      000435 E4               [12] 1307 	clr	a
      000436 93               [24] 1308 	movc	a,@a+dptr
      000437 FF               [12] 1309 	mov	r7,a
      000438 7E 00            [12] 1310 	mov	r6,#0x00
      00043A 8F 82            [24] 1311 	mov	dpl,r7
      00043C 8E 83            [24] 1312 	mov	dph,r6
      00043E 12r00r00         [24] 1313 	lcall	_putchar
                                   1314 ;	life.c:38: putchar(digits[(a >> 4) & 0xf]);
      000441 8C 06            [24] 1315 	mov	ar6,r4
      000443 ED               [12] 1316 	mov	a,r5
      000444 C4               [12] 1317 	swap	a
      000445 CE               [12] 1318 	xch	a,r6
      000446 C4               [12] 1319 	swap	a
      000447 54 0F            [12] 1320 	anl	a,#0x0f
      000449 6E               [12] 1321 	xrl	a,r6
      00044A CE               [12] 1322 	xch	a,r6
      00044B 54 0F            [12] 1323 	anl	a,#0x0f
      00044D CE               [12] 1324 	xch	a,r6
      00044E 6E               [12] 1325 	xrl	a,r6
      00044F CE               [12] 1326 	xch	a,r6
      000450 30 E3 02         [24] 1327 	jnb	acc.3,00588$
      000453 44 F0            [12] 1328 	orl	a,#0xf0
      000455                       1329 00588$:
      000455 53 06 0F         [24] 1330 	anl	ar6,#0x0f
      000458 7F 00            [12] 1331 	mov	r7,#0x00
      00045A EE               [12] 1332 	mov	a,r6
      00045B 24r00            [12] 1333 	add	a,#_digits
      00045D F5 82            [12] 1334 	mov	dpl,a
      00045F EF               [12] 1335 	mov	a,r7
      000460 34s00            [12] 1336 	addc	a,#(_digits >> 8)
      000462 F5 83            [12] 1337 	mov	dph,a
      000464 E4               [12] 1338 	clr	a
      000465 93               [24] 1339 	movc	a,@a+dptr
      000466 FF               [12] 1340 	mov	r7,a
      000467 7E 00            [12] 1341 	mov	r6,#0x00
      000469 8F 82            [24] 1342 	mov	dpl,r7
      00046B 8E 83            [24] 1343 	mov	dph,r6
      00046D 12r00r00         [24] 1344 	lcall	_putchar
                                   1345 ;	life.c:39: putchar(digits[a & 0xf]);
      000470 53 04 0F         [24] 1346 	anl	ar4,#0x0f
      000473 7D 00            [12] 1347 	mov	r5,#0x00
      000475 EC               [12] 1348 	mov	a,r4
      000476 24r00            [12] 1349 	add	a,#_digits
      000478 F5 82            [12] 1350 	mov	dpl,a
      00047A ED               [12] 1351 	mov	a,r5
      00047B 34s00            [12] 1352 	addc	a,#(_digits >> 8)
      00047D F5 83            [12] 1353 	mov	dph,a
      00047F E4               [12] 1354 	clr	a
      000480 93               [24] 1355 	movc	a,@a+dptr
      000481 FF               [12] 1356 	mov	r7,a
      000482 7E 00            [12] 1357 	mov	r6,#0x00
      000484 8F 82            [24] 1358 	mov	dpl,r7
      000486 8E 83            [24] 1359 	mov	dph,r6
      000488 12r00r00         [24] 1360 	lcall	_putchar
                                   1361 ;	life.c:91: if (j < 3) putchar(' ');
      00048B 90r0Cr15         [24] 1362 	mov	dptr,#_j
      00048E E0               [24] 1363 	movx	a,@dptr
      00048F FE               [12] 1364 	mov	r6,a
      000490 A3               [24] 1365 	inc	dptr
      000491 E0               [24] 1366 	movx	a,@dptr
      000492 FF               [12] 1367 	mov	r7,a
      000493 C3               [12] 1368 	clr	c
      000494 EE               [12] 1369 	mov	a,r6
      000495 94 03            [12] 1370 	subb	a,#0x03
      000497 EF               [12] 1371 	mov	a,r7
      000498 64 80            [12] 1372 	xrl	a,#0x80
      00049A 94 80            [12] 1373 	subb	a,#0x80
      00049C 50 06            [24] 1374 	jnc	00213$
      00049E 90 00 20         [24] 1375 	mov	dptr,#0x0020
      0004A1 12r00r00         [24] 1376 	lcall	_putchar
      0004A4                       1377 00213$:
                                   1378 ;	life.c:89: for (j = 0; j < 4; j++) {
      0004A4 90r0Cr15         [24] 1379 	mov	dptr,#_j
      0004A7 E0               [24] 1380 	movx	a,@dptr
      0004A8 24 01            [12] 1381 	add	a,#0x01
      0004AA F0               [24] 1382 	movx	@dptr,a
      0004AB A3               [24] 1383 	inc	dptr
      0004AC E0               [24] 1384 	movx	a,@dptr
      0004AD 34 00            [12] 1385 	addc	a,#0x00
      0004AF F0               [24] 1386 	movx	@dptr,a
      0004B0 90r0Cr15         [24] 1387 	mov	dptr,#_j
      0004B3 E0               [24] 1388 	movx	a,@dptr
      0004B4 FE               [12] 1389 	mov	r6,a
      0004B5 A3               [24] 1390 	inc	dptr
      0004B6 E0               [24] 1391 	movx	a,@dptr
      0004B7 FF               [12] 1392 	mov	r7,a
      0004B8 C3               [12] 1393 	clr	c
      0004B9 EE               [12] 1394 	mov	a,r6
      0004BA 94 04            [12] 1395 	subb	a,#0x04
      0004BC EF               [12] 1396 	mov	a,r7
      0004BD 64 80            [12] 1397 	xrl	a,#0x80
      0004BF 94 80            [12] 1398 	subb	a,#0x80
      0004C1 50 03            [24] 1399 	jnc	00590$
      0004C3 02r03rC3         [24] 1400 	ljmp	00212$
      0004C6                       1401 00590$:
                                   1402 ;	life.c:100: printstr("\r\n");
      0004C6 7Dr18            [12] 1403 	mov	r5,#___str_1
      0004C8 7Es00            [12] 1404 	mov	r6,#(___str_1 >> 8)
      0004CA 7F 80            [12] 1405 	mov	r7,#0x80
                                   1406 ;	life.c:47: return;
      0004CC                       1407 00215$:
                                   1408 ;	life.c:45: for (; *s; s++) putchar(*s);
      0004CC 8D 82            [24] 1409 	mov	dpl,r5
      0004CE 8E 83            [24] 1410 	mov	dph,r6
      0004D0 8F F0            [24] 1411 	mov	b,r7
      0004D2 12r00r00         [24] 1412 	lcall	__gptrget
      0004D5 FC               [12] 1413 	mov	r4,a
      0004D6 60 10            [24] 1414 	jz	00149$
      0004D8 7B 00            [12] 1415 	mov	r3,#0x00
      0004DA 8C 82            [24] 1416 	mov	dpl,r4
      0004DC 8B 83            [24] 1417 	mov	dph,r3
      0004DE 12r00r00         [24] 1418 	lcall	_putchar
      0004E1 0D               [12] 1419 	inc	r5
                                   1420 ;	life.c:100: printstr("\r\n");
      0004E2 BD 00 E7         [24] 1421 	cjne	r5,#0x00,00215$
      0004E5 0E               [12] 1422 	inc	r6
      0004E6 80 E4            [24] 1423 	sjmp	00215$
      0004E8                       1424 00149$:
                                   1425 ;	life.c:80: for (j = 0; j < 4; j++) {
      0004E8 90r0Cr15         [24] 1426 	mov	dptr,#_j
      0004EB E4               [12] 1427 	clr	a
      0004EC F0               [24] 1428 	movx	@dptr,a
      0004ED A3               [24] 1429 	inc	dptr
      0004EE F0               [24] 1430 	movx	@dptr,a
      0004EF                       1431 00217$:
                                   1432 ;	life.c:81: generation[j]++;
      0004EF 90r0Cr15         [24] 1433 	mov	dptr,#_j
      0004F2 E0               [24] 1434 	movx	a,@dptr
      0004F3 FE               [12] 1435 	mov	r6,a
      0004F4 A3               [24] 1436 	inc	dptr
      0004F5 E0               [24] 1437 	movx	a,@dptr
      0004F6 FF               [12] 1438 	mov	r7,a
      0004F7 EE               [12] 1439 	mov	a,r6
      0004F8 2E               [12] 1440 	add	a,r6
      0004F9 FE               [12] 1441 	mov	r6,a
      0004FA EF               [12] 1442 	mov	a,r7
      0004FB 33               [12] 1443 	rlc	a
      0004FC FF               [12] 1444 	mov	r7,a
      0004FD EE               [12] 1445 	mov	a,r6
      0004FE 24r0B            [12] 1446 	add	a,#_generation
      000500 FE               [12] 1447 	mov	r6,a
      000501 EF               [12] 1448 	mov	a,r7
      000502 34s0C            [12] 1449 	addc	a,#(_generation >> 8)
      000504 FF               [12] 1450 	mov	r7,a
      000505 8E 82            [24] 1451 	mov	dpl,r6
      000507 8F 83            [24] 1452 	mov	dph,r7
      000509 E0               [24] 1453 	movx	a,@dptr
      00050A FC               [12] 1454 	mov	r4,a
      00050B A3               [24] 1455 	inc	dptr
      00050C E0               [24] 1456 	movx	a,@dptr
      00050D FD               [12] 1457 	mov	r5,a
      00050E 0C               [12] 1458 	inc	r4
      00050F BC 00 01         [24] 1459 	cjne	r4,#0x00,00593$
      000512 0D               [12] 1460 	inc	r5
      000513                       1461 00593$:
      000513 8E 82            [24] 1462 	mov	dpl,r6
      000515 8F 83            [24] 1463 	mov	dph,r7
      000517 EC               [12] 1464 	mov	a,r4
      000518 F0               [24] 1465 	movx	@dptr,a
      000519 ED               [12] 1466 	mov	a,r5
      00051A A3               [24] 1467 	inc	dptr
      00051B F0               [24] 1468 	movx	@dptr,a
                                   1469 ;	life.c:82: if (generation[j]) break;
      00051C 90r0Cr15         [24] 1470 	mov	dptr,#_j
      00051F E0               [24] 1471 	movx	a,@dptr
      000520 FE               [12] 1472 	mov	r6,a
      000521 A3               [24] 1473 	inc	dptr
      000522 E0               [24] 1474 	movx	a,@dptr
      000523 FF               [12] 1475 	mov	r7,a
      000524 EE               [12] 1476 	mov	a,r6
      000525 2E               [12] 1477 	add	a,r6
      000526 FC               [12] 1478 	mov	r4,a
      000527 EF               [12] 1479 	mov	a,r7
      000528 33               [12] 1480 	rlc	a
      000529 FD               [12] 1481 	mov	r5,a
      00052A EC               [12] 1482 	mov	a,r4
      00052B 24r0B            [12] 1483 	add	a,#_generation
      00052D F5 82            [12] 1484 	mov	dpl,a
      00052F ED               [12] 1485 	mov	a,r5
      000530 34s0C            [12] 1486 	addc	a,#(_generation >> 8)
      000532 F5 83            [12] 1487 	mov	dph,a
      000534 E0               [24] 1488 	movx	a,@dptr
      000535 FC               [12] 1489 	mov	r4,a
      000536 A3               [24] 1490 	inc	dptr
      000537 E0               [24] 1491 	movx	a,@dptr
      000538 FD               [12] 1492 	mov	r5,a
      000539 4C               [12] 1493 	orl	a,r4
      00053A 70 1E            [24] 1494 	jnz	00153$
                                   1495 ;	life.c:80: for (j = 0; j < 4; j++) {
      00053C 90r0Cr15         [24] 1496 	mov	dptr,#_j
      00053F 74 01            [12] 1497 	mov	a,#0x01
      000541 2E               [12] 1498 	add	a,r6
      000542 F0               [24] 1499 	movx	@dptr,a
      000543 E4               [12] 1500 	clr	a
      000544 3F               [12] 1501 	addc	a,r7
      000545 A3               [24] 1502 	inc	dptr
      000546 F0               [24] 1503 	movx	@dptr,a
      000547 90r0Cr15         [24] 1504 	mov	dptr,#_j
      00054A E0               [24] 1505 	movx	a,@dptr
      00054B FE               [12] 1506 	mov	r6,a
      00054C A3               [24] 1507 	inc	dptr
      00054D E0               [24] 1508 	movx	a,@dptr
      00054E FF               [12] 1509 	mov	r7,a
      00054F C3               [12] 1510 	clr	c
      000550 EE               [12] 1511 	mov	a,r6
      000551 94 04            [12] 1512 	subb	a,#0x04
      000553 EF               [12] 1513 	mov	a,r7
      000554 64 80            [12] 1514 	xrl	a,#0x80
      000556 94 80            [12] 1515 	subb	a,#0x80
      000558 40 95            [24] 1516 	jc	00217$
                                   1517 ;	life.c:101: updategen();
      00055A                       1518 00153$:
                                   1519 ;	life.c:103: for (x = 0; x < W; x++) {
      00055A 90r0Cr02         [24] 1520 	mov	dptr,#_x
      00055D E4               [12] 1521 	clr	a
      00055E F0               [24] 1522 	movx	@dptr,a
      00055F A3               [24] 1523 	inc	dptr
      000560 F0               [24] 1524 	movx	@dptr,a
      000561                       1525 00230$:
                                   1526 ;	life.c:104: for (y = 0; y < H; y++)
      000561 90r0Cr04         [24] 1527 	mov	dptr,#_y
      000564 E4               [12] 1528 	clr	a
      000565 F0               [24] 1529 	movx	@dptr,a
      000566 A3               [24] 1530 	inc	dptr
      000567 F0               [24] 1531 	movx	@dptr,a
      000568                       1532 00225$:
                                   1533 ;	life.c:105: if (u[y][x]) printstr("[]");
      000568 90r0Cr04         [24] 1534 	mov	dptr,#_y
      00056B E0               [24] 1535 	movx	a,@dptr
      00056C FE               [12] 1536 	mov	r6,a
      00056D A3               [24] 1537 	inc	dptr
      00056E E0               [24] 1538 	movx	a,@dptr
      00056F C4               [12] 1539 	swap	a
      000570 23               [12] 1540 	rl	a
      000571 54 E0            [12] 1541 	anl	a,#0xe0
      000573 CE               [12] 1542 	xch	a,r6
      000574 C4               [12] 1543 	swap	a
      000575 23               [12] 1544 	rl	a
      000576 CE               [12] 1545 	xch	a,r6
      000577 6E               [12] 1546 	xrl	a,r6
      000578 CE               [12] 1547 	xch	a,r6
      000579 54 E0            [12] 1548 	anl	a,#0xe0
      00057B CE               [12] 1549 	xch	a,r6
      00057C 6E               [12] 1550 	xrl	a,r6
      00057D FF               [12] 1551 	mov	r7,a
      00057E EE               [12] 1552 	mov	a,r6
      00057F 24r02            [12] 1553 	add	a,#_u
      000581 FE               [12] 1554 	mov	r6,a
      000582 EF               [12] 1555 	mov	a,r7
      000583 34s04            [12] 1556 	addc	a,#(_u >> 8)
      000585 FF               [12] 1557 	mov	r7,a
      000586 90r0Cr02         [24] 1558 	mov	dptr,#_x
      000589 E0               [24] 1559 	movx	a,@dptr
      00058A FC               [12] 1560 	mov	r4,a
      00058B A3               [24] 1561 	inc	dptr
      00058C E0               [24] 1562 	movx	a,@dptr
      00058D FD               [12] 1563 	mov	r5,a
      00058E EC               [12] 1564 	mov	a,r4
      00058F 2E               [12] 1565 	add	a,r6
      000590 FE               [12] 1566 	mov	r6,a
      000591 ED               [12] 1567 	mov	a,r5
      000592 3F               [12] 1568 	addc	a,r7
      000593 FF               [12] 1569 	mov	r7,a
      000594 8E 82            [24] 1570 	mov	dpl,r6
      000596 8F 83            [24] 1571 	mov	dph,r7
      000598 E0               [24] 1572 	movx	a,@dptr
      000599 60 22            [24] 1573 	jz	00159$
      00059B 7Dr1B            [12] 1574 	mov	r5,#___str_2
      00059D 7Es00            [12] 1575 	mov	r6,#(___str_2 >> 8)
      00059F 7F 80            [12] 1576 	mov	r7,#0x80
                                   1577 ;	life.c:47: return;
      0005A1                       1578 00220$:
                                   1579 ;	life.c:45: for (; *s; s++) putchar(*s);
      0005A1 8D 82            [24] 1580 	mov	dpl,r5
      0005A3 8E 83            [24] 1581 	mov	dph,r6
      0005A5 8F F0            [24] 1582 	mov	b,r7
      0005A7 12r00r00         [24] 1583 	lcall	__gptrget
      0005AA FC               [12] 1584 	mov	r4,a
      0005AB 60 32            [24] 1585 	jz	00226$
      0005AD 7B 00            [12] 1586 	mov	r3,#0x00
      0005AF 8C 82            [24] 1587 	mov	dpl,r4
      0005B1 8B 83            [24] 1588 	mov	dph,r3
      0005B3 12r00r00         [24] 1589 	lcall	_putchar
      0005B6 0D               [12] 1590 	inc	r5
                                   1591 ;	life.c:105: if (u[y][x]) printstr("[]");
      0005B7 BD 00 E7         [24] 1592 	cjne	r5,#0x00,00220$
      0005BA 0E               [12] 1593 	inc	r6
      0005BB 80 E4            [24] 1594 	sjmp	00220$
      0005BD                       1595 00159$:
                                   1596 ;	life.c:106: else printstr("##");
      0005BD 7Dr1E            [12] 1597 	mov	r5,#___str_3
      0005BF 7Es00            [12] 1598 	mov	r6,#(___str_3 >> 8)
      0005C1 7F 80            [12] 1599 	mov	r7,#0x80
                                   1600 ;	life.c:47: return;
      0005C3                       1601 00223$:
                                   1602 ;	life.c:45: for (; *s; s++) putchar(*s);
      0005C3 8D 82            [24] 1603 	mov	dpl,r5
      0005C5 8E 83            [24] 1604 	mov	dph,r6
      0005C7 8F F0            [24] 1605 	mov	b,r7
      0005C9 12r00r00         [24] 1606 	lcall	__gptrget
      0005CC FC               [12] 1607 	mov	r4,a
      0005CD 60 10            [24] 1608 	jz	00226$
      0005CF 7B 00            [12] 1609 	mov	r3,#0x00
      0005D1 8C 82            [24] 1610 	mov	dpl,r4
      0005D3 8B 83            [24] 1611 	mov	dph,r3
      0005D5 12r00r00         [24] 1612 	lcall	_putchar
      0005D8 0D               [12] 1613 	inc	r5
                                   1614 ;	life.c:106: else printstr("##");
      0005D9 BD 00 E7         [24] 1615 	cjne	r5,#0x00,00223$
      0005DC 0E               [12] 1616 	inc	r6
      0005DD 80 E4            [24] 1617 	sjmp	00223$
      0005DF                       1618 00226$:
                                   1619 ;	life.c:104: for (y = 0; y < H; y++)
      0005DF 90r0Cr04         [24] 1620 	mov	dptr,#_y
      0005E2 E0               [24] 1621 	movx	a,@dptr
      0005E3 24 01            [12] 1622 	add	a,#0x01
      0005E5 F0               [24] 1623 	movx	@dptr,a
      0005E6 A3               [24] 1624 	inc	dptr
      0005E7 E0               [24] 1625 	movx	a,@dptr
      0005E8 34 00            [12] 1626 	addc	a,#0x00
      0005EA F0               [24] 1627 	movx	@dptr,a
      0005EB 90r0Cr04         [24] 1628 	mov	dptr,#_y
      0005EE E0               [24] 1629 	movx	a,@dptr
      0005EF FE               [12] 1630 	mov	r6,a
      0005F0 A3               [24] 1631 	inc	dptr
      0005F1 E0               [24] 1632 	movx	a,@dptr
      0005F2 FF               [12] 1633 	mov	r7,a
      0005F3 C3               [12] 1634 	clr	c
      0005F4 EE               [12] 1635 	mov	a,r6
      0005F5 94 20            [12] 1636 	subb	a,#0x20
      0005F7 EF               [12] 1637 	mov	a,r7
      0005F8 64 80            [12] 1638 	xrl	a,#0x80
      0005FA 94 80            [12] 1639 	subb	a,#0x80
      0005FC 50 03            [24] 1640 	jnc	00601$
      0005FE 02r05r68         [24] 1641 	ljmp	00225$
      000601                       1642 00601$:
                                   1643 ;	life.c:107: printstr("\r\n");
      000601 7Dr18            [12] 1644 	mov	r5,#___str_1
      000603 7Es00            [12] 1645 	mov	r6,#(___str_1 >> 8)
      000605 7F 80            [12] 1646 	mov	r7,#0x80
                                   1647 ;	life.c:47: return;
      000607                       1648 00228$:
                                   1649 ;	life.c:45: for (; *s; s++) putchar(*s);
      000607 8D 82            [24] 1650 	mov	dpl,r5
      000609 8E 83            [24] 1651 	mov	dph,r6
      00060B 8F F0            [24] 1652 	mov	b,r7
      00060D 12r00r00         [24] 1653 	lcall	__gptrget
      000610 FC               [12] 1654 	mov	r4,a
      000611 60 10            [24] 1655 	jz	00163$
      000613 7B 00            [12] 1656 	mov	r3,#0x00
      000615 8C 82            [24] 1657 	mov	dpl,r4
      000617 8B 83            [24] 1658 	mov	dph,r3
      000619 12r00r00         [24] 1659 	lcall	_putchar
      00061C 0D               [12] 1660 	inc	r5
                                   1661 ;	life.c:107: printstr("\r\n");
      00061D BD 00 E7         [24] 1662 	cjne	r5,#0x00,00228$
      000620 0E               [12] 1663 	inc	r6
      000621 80 E4            [24] 1664 	sjmp	00228$
      000623                       1665 00163$:
                                   1666 ;	life.c:103: for (x = 0; x < W; x++) {
      000623 90r0Cr02         [24] 1667 	mov	dptr,#_x
      000626 E0               [24] 1668 	movx	a,@dptr
      000627 24 01            [12] 1669 	add	a,#0x01
      000629 F0               [24] 1670 	movx	@dptr,a
      00062A A3               [24] 1671 	inc	dptr
      00062B E0               [24] 1672 	movx	a,@dptr
      00062C 34 00            [12] 1673 	addc	a,#0x00
      00062E F0               [24] 1674 	movx	@dptr,a
      00062F 90r0Cr02         [24] 1675 	mov	dptr,#_x
      000632 E0               [24] 1676 	movx	a,@dptr
      000633 FE               [12] 1677 	mov	r6,a
      000634 A3               [24] 1678 	inc	dptr
      000635 E0               [24] 1679 	movx	a,@dptr
      000636 FF               [12] 1680 	mov	r7,a
      000637 C3               [12] 1681 	clr	c
      000638 EE               [12] 1682 	mov	a,r6
      000639 94 20            [12] 1683 	subb	a,#0x20
      00063B EF               [12] 1684 	mov	a,r7
      00063C 64 80            [12] 1685 	xrl	a,#0x80
      00063E 94 80            [12] 1686 	subb	a,#0x80
      000640 50 03            [24] 1687 	jnc	00604$
      000642 02r05r61         [24] 1688 	ljmp	00230$
      000645                       1689 00604$:
                                   1690 ;	life.c:153: fixed = 1;
      000645 90r0Cr13         [24] 1691 	mov	dptr,#_fixed
      000648 74 01            [12] 1692 	mov	a,#0x01
      00064A F0               [24] 1693 	movx	@dptr,a
                                   1694 ;	life.c:154: cycle2 = 1;
      00064B 90r0Cr14         [24] 1695 	mov	dptr,#_cycle2
      00064E F0               [24] 1696 	movx	@dptr,a
                                   1697 ;	life.c:156: for (y = 0; y < H; y++) {
      00064F 90r0Cr04         [24] 1698 	mov	dptr,#_y
      000652 E4               [12] 1699 	clr	a
      000653 F0               [24] 1700 	movx	@dptr,a
      000654 A3               [24] 1701 	inc	dptr
      000655 F0               [24] 1702 	movx	@dptr,a
      000656                       1703 00240$:
                                   1704 ;	life.c:157: for (x = 0; x < W; x++) {
      000656 90r0Cr02         [24] 1705 	mov	dptr,#_x
      000659 E4               [12] 1706 	clr	a
      00065A F0               [24] 1707 	movx	@dptr,a
      00065B A3               [24] 1708 	inc	dptr
      00065C F0               [24] 1709 	movx	@dptr,a
      00065D                       1710 00238$:
                                   1711 ;	life.c:158: n = 0;
      00065D 90r0Cr0A         [24] 1712 	mov	dptr,#_n
      000660 E4               [12] 1713 	clr	a
      000661 F0               [24] 1714 	movx	@dptr,a
                                   1715 ;	life.c:159: for (y1 = y - 1; y1 <= y + 1; y1++)
      000662 90r0Cr04         [24] 1716 	mov	dptr,#_y
      000665 E0               [24] 1717 	movx	a,@dptr
      000666 FE               [12] 1718 	mov	r6,a
      000667 A3               [24] 1719 	inc	dptr
      000668 E0               [24] 1720 	movx	a,@dptr
      000669 FF               [12] 1721 	mov	r7,a
      00066A 1E               [12] 1722 	dec	r6
      00066B BE FF 01         [24] 1723 	cjne	r6,#0xff,00605$
      00066E 1F               [12] 1724 	dec	r7
      00066F                       1725 00605$:
      00066F 90r0Cr08         [24] 1726 	mov	dptr,#_y1
      000672 EE               [12] 1727 	mov	a,r6
      000673 F0               [24] 1728 	movx	@dptr,a
      000674 EF               [12] 1729 	mov	a,r7
      000675 A3               [24] 1730 	inc	dptr
      000676 F0               [24] 1731 	movx	@dptr,a
      000677                       1732 00236$:
      000677 90r0Cr04         [24] 1733 	mov	dptr,#_y
      00067A E0               [24] 1734 	movx	a,@dptr
      00067B FE               [12] 1735 	mov	r6,a
      00067C A3               [24] 1736 	inc	dptr
      00067D E0               [24] 1737 	movx	a,@dptr
      00067E FF               [12] 1738 	mov	r7,a
      00067F 74 01            [12] 1739 	mov	a,#0x01
      000681 2E               [12] 1740 	add	a,r6
      000682 FC               [12] 1741 	mov	r4,a
      000683 E4               [12] 1742 	clr	a
      000684 3F               [12] 1743 	addc	a,r7
      000685 FD               [12] 1744 	mov	r5,a
      000686 90r0Cr08         [24] 1745 	mov	dptr,#_y1
      000689 E0               [24] 1746 	movx	a,@dptr
      00068A FA               [12] 1747 	mov	r2,a
      00068B A3               [24] 1748 	inc	dptr
      00068C E0               [24] 1749 	movx	a,@dptr
      00068D FB               [12] 1750 	mov	r3,a
      00068E C3               [12] 1751 	clr	c
      00068F EC               [12] 1752 	mov	a,r4
      000690 9A               [12] 1753 	subb	a,r2
      000691 ED               [12] 1754 	mov	a,r5
      000692 64 80            [12] 1755 	xrl	a,#0x80
      000694 8B F0            [24] 1756 	mov	b,r3
      000696 63 F0 80         [24] 1757 	xrl	b,#0x80
      000699 95 F0            [12] 1758 	subb	a,b
      00069B 50 03            [24] 1759 	jnc	00606$
      00069D 02r07r78         [24] 1760 	ljmp	00169$
      0006A0                       1761 00606$:
                                   1762 ;	life.c:160: for (x1 = x - 1; x1 <= x + 1; x1++)
      0006A0 90r0Cr02         [24] 1763 	mov	dptr,#_x
      0006A3 E0               [24] 1764 	movx	a,@dptr
      0006A4 FC               [12] 1765 	mov	r4,a
      0006A5 A3               [24] 1766 	inc	dptr
      0006A6 E0               [24] 1767 	movx	a,@dptr
      0006A7 FD               [12] 1768 	mov	r5,a
      0006A8 1C               [12] 1769 	dec	r4
      0006A9 BC FF 01         [24] 1770 	cjne	r4,#0xff,00607$
      0006AC 1D               [12] 1771 	dec	r5
      0006AD                       1772 00607$:
      0006AD 90r0Cr06         [24] 1773 	mov	dptr,#_x1
      0006B0 EC               [12] 1774 	mov	a,r4
      0006B1 F0               [24] 1775 	movx	@dptr,a
      0006B2 ED               [12] 1776 	mov	a,r5
      0006B3 A3               [24] 1777 	inc	dptr
      0006B4 F0               [24] 1778 	movx	@dptr,a
      0006B5                       1779 00233$:
      0006B5 90r0Cr02         [24] 1780 	mov	dptr,#_x
      0006B8 E0               [24] 1781 	movx	a,@dptr
      0006B9 FC               [12] 1782 	mov	r4,a
      0006BA A3               [24] 1783 	inc	dptr
      0006BB E0               [24] 1784 	movx	a,@dptr
      0006BC FD               [12] 1785 	mov	r5,a
      0006BD 0C               [12] 1786 	inc	r4
      0006BE BC 00 01         [24] 1787 	cjne	r4,#0x00,00608$
      0006C1 0D               [12] 1788 	inc	r5
      0006C2                       1789 00608$:
      0006C2 90r0Cr06         [24] 1790 	mov	dptr,#_x1
      0006C5 E0               [24] 1791 	movx	a,@dptr
      0006C6 FA               [12] 1792 	mov	r2,a
      0006C7 A3               [24] 1793 	inc	dptr
      0006C8 E0               [24] 1794 	movx	a,@dptr
      0006C9 FB               [12] 1795 	mov	r3,a
      0006CA C3               [12] 1796 	clr	c
      0006CB EC               [12] 1797 	mov	a,r4
      0006CC 9A               [12] 1798 	subb	a,r2
      0006CD ED               [12] 1799 	mov	a,r5
      0006CE 64 80            [12] 1800 	xrl	a,#0x80
      0006D0 8B F0            [24] 1801 	mov	b,r3
      0006D2 63 F0 80         [24] 1802 	xrl	b,#0x80
      0006D5 95 F0            [12] 1803 	subb	a,b
      0006D7 50 03            [24] 1804 	jnc	00609$
      0006D9 02r07r69         [24] 1805 	ljmp	00237$
      0006DC                       1806 00609$:
                                   1807 ;	life.c:161: if (u[(y1 + H) % H][(x1 + W) % W])
      0006DC 90r0Cr08         [24] 1808 	mov	dptr,#_y1
      0006DF E0               [24] 1809 	movx	a,@dptr
      0006E0 FC               [12] 1810 	mov	r4,a
      0006E1 A3               [24] 1811 	inc	dptr
      0006E2 E0               [24] 1812 	movx	a,@dptr
      0006E3 FD               [12] 1813 	mov	r5,a
      0006E4 74 20            [12] 1814 	mov	a,#0x20
      0006E6 2C               [12] 1815 	add	a,r4
      0006E7 FC               [12] 1816 	mov	r4,a
      0006E8 E4               [12] 1817 	clr	a
      0006E9 3D               [12] 1818 	addc	a,r5
      0006EA FD               [12] 1819 	mov	r5,a
      0006EB C0 03            [24] 1820 	push	ar3
      0006ED C0 02            [24] 1821 	push	ar2
      0006EF 74 20            [12] 1822 	mov	a,#0x20
      0006F1 C0 E0            [24] 1823 	push	acc
      0006F3 E4               [12] 1824 	clr	a
      0006F4 C0 E0            [24] 1825 	push	acc
      0006F6 8C 82            [24] 1826 	mov	dpl,r4
      0006F8 8D 83            [24] 1827 	mov	dph,r5
      0006FA 12r00r00         [24] 1828 	lcall	__modsint
      0006FD AC 82            [24] 1829 	mov	r4,dpl
      0006FF AD 83            [24] 1830 	mov	r5,dph
      000701 15 81            [12] 1831 	dec	sp
      000703 15 81            [12] 1832 	dec	sp
      000705 D0 02            [24] 1833 	pop	ar2
      000707 D0 03            [24] 1834 	pop	ar3
      000709 ED               [12] 1835 	mov	a,r5
      00070A C4               [12] 1836 	swap	a
      00070B 23               [12] 1837 	rl	a
      00070C 54 E0            [12] 1838 	anl	a,#0xe0
      00070E CC               [12] 1839 	xch	a,r4
      00070F C4               [12] 1840 	swap	a
      000710 23               [12] 1841 	rl	a
      000711 CC               [12] 1842 	xch	a,r4
      000712 6C               [12] 1843 	xrl	a,r4
      000713 CC               [12] 1844 	xch	a,r4
      000714 54 E0            [12] 1845 	anl	a,#0xe0
      000716 CC               [12] 1846 	xch	a,r4
      000717 6C               [12] 1847 	xrl	a,r4
      000718 FD               [12] 1848 	mov	r5,a
      000719 EC               [12] 1849 	mov	a,r4
      00071A 24r02            [12] 1850 	add	a,#_u
      00071C FC               [12] 1851 	mov	r4,a
      00071D ED               [12] 1852 	mov	a,r5
      00071E 34s04            [12] 1853 	addc	a,#(_u >> 8)
      000720 FD               [12] 1854 	mov	r5,a
      000721 74 20            [12] 1855 	mov	a,#0x20
      000723 2A               [12] 1856 	add	a,r2
      000724 FA               [12] 1857 	mov	r2,a
      000725 E4               [12] 1858 	clr	a
      000726 3B               [12] 1859 	addc	a,r3
      000727 FB               [12] 1860 	mov	r3,a
      000728 C0 05            [24] 1861 	push	ar5
      00072A C0 04            [24] 1862 	push	ar4
      00072C 74 20            [12] 1863 	mov	a,#0x20
      00072E C0 E0            [24] 1864 	push	acc
      000730 E4               [12] 1865 	clr	a
      000731 C0 E0            [24] 1866 	push	acc
      000733 8A 82            [24] 1867 	mov	dpl,r2
      000735 8B 83            [24] 1868 	mov	dph,r3
      000737 12r00r00         [24] 1869 	lcall	__modsint
      00073A AA 82            [24] 1870 	mov	r2,dpl
      00073C AB 83            [24] 1871 	mov	r3,dph
      00073E 15 81            [12] 1872 	dec	sp
      000740 15 81            [12] 1873 	dec	sp
      000742 D0 04            [24] 1874 	pop	ar4
      000744 D0 05            [24] 1875 	pop	ar5
      000746 EA               [12] 1876 	mov	a,r2
      000747 2C               [12] 1877 	add	a,r4
      000748 FC               [12] 1878 	mov	r4,a
      000749 EB               [12] 1879 	mov	a,r3
      00074A 3D               [12] 1880 	addc	a,r5
      00074B FD               [12] 1881 	mov	r5,a
      00074C 8C 82            [24] 1882 	mov	dpl,r4
      00074E 8D 83            [24] 1883 	mov	dph,r5
      000750 E0               [24] 1884 	movx	a,@dptr
      000751 60 07            [24] 1885 	jz	00234$
                                   1886 ;	life.c:162: n++;
      000753 90r0Cr0A         [24] 1887 	mov	dptr,#_n
      000756 E0               [24] 1888 	movx	a,@dptr
      000757 24 01            [12] 1889 	add	a,#0x01
      000759 F0               [24] 1890 	movx	@dptr,a
      00075A                       1891 00234$:
                                   1892 ;	life.c:160: for (x1 = x - 1; x1 <= x + 1; x1++)
      00075A 90r0Cr06         [24] 1893 	mov	dptr,#_x1
      00075D E0               [24] 1894 	movx	a,@dptr
      00075E 24 01            [12] 1895 	add	a,#0x01
      000760 F0               [24] 1896 	movx	@dptr,a
      000761 A3               [24] 1897 	inc	dptr
      000762 E0               [24] 1898 	movx	a,@dptr
      000763 34 00            [12] 1899 	addc	a,#0x00
      000765 F0               [24] 1900 	movx	@dptr,a
      000766 02r06rB5         [24] 1901 	ljmp	00233$
      000769                       1902 00237$:
                                   1903 ;	life.c:159: for (y1 = y - 1; y1 <= y + 1; y1++)
      000769 90r0Cr08         [24] 1904 	mov	dptr,#_y1
      00076C E0               [24] 1905 	movx	a,@dptr
      00076D 24 01            [12] 1906 	add	a,#0x01
      00076F F0               [24] 1907 	movx	@dptr,a
      000770 A3               [24] 1908 	inc	dptr
      000771 E0               [24] 1909 	movx	a,@dptr
      000772 34 00            [12] 1910 	addc	a,#0x00
      000774 F0               [24] 1911 	movx	@dptr,a
      000775 02r06r77         [24] 1912 	ljmp	00236$
      000778                       1913 00169$:
                                   1914 ;	life.c:164: if (u[y][x]) n--;
      000778 EF               [12] 1915 	mov	a,r7
      000779 C4               [12] 1916 	swap	a
      00077A 23               [12] 1917 	rl	a
      00077B 54 E0            [12] 1918 	anl	a,#0xe0
      00077D CE               [12] 1919 	xch	a,r6
      00077E C4               [12] 1920 	swap	a
      00077F 23               [12] 1921 	rl	a
      000780 CE               [12] 1922 	xch	a,r6
      000781 6E               [12] 1923 	xrl	a,r6
      000782 CE               [12] 1924 	xch	a,r6
      000783 54 E0            [12] 1925 	anl	a,#0xe0
      000785 CE               [12] 1926 	xch	a,r6
      000786 6E               [12] 1927 	xrl	a,r6
      000787 FF               [12] 1928 	mov	r7,a
      000788 EE               [12] 1929 	mov	a,r6
      000789 24r02            [12] 1930 	add	a,#_u
      00078B FE               [12] 1931 	mov	r6,a
      00078C EF               [12] 1932 	mov	a,r7
      00078D 34s04            [12] 1933 	addc	a,#(_u >> 8)
      00078F FF               [12] 1934 	mov	r7,a
      000790 90r0Cr02         [24] 1935 	mov	dptr,#_x
      000793 E0               [24] 1936 	movx	a,@dptr
      000794 FC               [12] 1937 	mov	r4,a
      000795 A3               [24] 1938 	inc	dptr
      000796 E0               [24] 1939 	movx	a,@dptr
      000797 FD               [12] 1940 	mov	r5,a
      000798 EC               [12] 1941 	mov	a,r4
      000799 2E               [12] 1942 	add	a,r6
      00079A FE               [12] 1943 	mov	r6,a
      00079B ED               [12] 1944 	mov	a,r5
      00079C 3F               [12] 1945 	addc	a,r7
      00079D FF               [12] 1946 	mov	r7,a
      00079E 8E 82            [24] 1947 	mov	dpl,r6
      0007A0 8F 83            [24] 1948 	mov	dph,r7
      0007A2 E0               [24] 1949 	movx	a,@dptr
      0007A3 60 06            [24] 1950 	jz	00171$
      0007A5 90r0Cr0A         [24] 1951 	mov	dptr,#_n
      0007A8 E0               [24] 1952 	movx	a,@dptr
      0007A9 14               [12] 1953 	dec	a
      0007AA F0               [24] 1954 	movx	@dptr,a
      0007AB                       1955 00171$:
                                   1956 ;	life.c:165: nu[y][x] = (n == 3 || (n == 2 && u[y][x]));
      0007AB 90r0Cr04         [24] 1957 	mov	dptr,#_y
      0007AE E0               [24] 1958 	movx	a,@dptr
      0007AF FE               [12] 1959 	mov	r6,a
      0007B0 A3               [24] 1960 	inc	dptr
      0007B1 E0               [24] 1961 	movx	a,@dptr
      0007B2 C4               [12] 1962 	swap	a
      0007B3 23               [12] 1963 	rl	a
      0007B4 54 E0            [12] 1964 	anl	a,#0xe0
      0007B6 CE               [12] 1965 	xch	a,r6
      0007B7 C4               [12] 1966 	swap	a
      0007B8 23               [12] 1967 	rl	a
      0007B9 CE               [12] 1968 	xch	a,r6
      0007BA 6E               [12] 1969 	xrl	a,r6
      0007BB CE               [12] 1970 	xch	a,r6
      0007BC 54 E0            [12] 1971 	anl	a,#0xe0
      0007BE CE               [12] 1972 	xch	a,r6
      0007BF 6E               [12] 1973 	xrl	a,r6
      0007C0 FF               [12] 1974 	mov	r7,a
      0007C1 EE               [12] 1975 	mov	a,r6
      0007C2 24r02            [12] 1976 	add	a,#_nu
      0007C4 FC               [12] 1977 	mov	r4,a
      0007C5 EF               [12] 1978 	mov	a,r7
      0007C6 34s08            [12] 1979 	addc	a,#(_nu >> 8)
      0007C8 FD               [12] 1980 	mov	r5,a
      0007C9 90r0Cr02         [24] 1981 	mov	dptr,#_x
      0007CC E0               [24] 1982 	movx	a,@dptr
      0007CD FA               [12] 1983 	mov	r2,a
      0007CE A3               [24] 1984 	inc	dptr
      0007CF E0               [24] 1985 	movx	a,@dptr
      0007D0 FB               [12] 1986 	mov	r3,a
      0007D1 EA               [12] 1987 	mov	a,r2
      0007D2 2C               [12] 1988 	add	a,r4
      0007D3 FC               [12] 1989 	mov	r4,a
      0007D4 EB               [12] 1990 	mov	a,r3
      0007D5 3D               [12] 1991 	addc	a,r5
      0007D6 FD               [12] 1992 	mov	r5,a
      0007D7 90r0Cr0A         [24] 1993 	mov	dptr,#_n
      0007DA A8*00            [24] 1994 	mov	r0,_bp
      0007DC 08               [12] 1995 	inc	r0
      0007DD E0               [24] 1996 	movx	a,@dptr
      0007DE F6               [12] 1997 	mov	@r0,a
      0007DF A8*00            [24] 1998 	mov	r0,_bp
      0007E1 08               [12] 1999 	inc	r0
      0007E2 B6 03 02         [24] 2000 	cjne	@r0,#0x03,00612$
      0007E5 80 1F            [24] 2001 	sjmp	00264$
      0007E7                       2002 00612$:
      0007E7 A8*00            [24] 2003 	mov	r0,_bp
      0007E9 08               [12] 2004 	inc	r0
      0007EA B6 02 15         [24] 2005 	cjne	@r0,#0x02,00263$
      0007ED EE               [12] 2006 	mov	a,r6
      0007EE 24r02            [12] 2007 	add	a,#_u
      0007F0 FE               [12] 2008 	mov	r6,a
      0007F1 EF               [12] 2009 	mov	a,r7
      0007F2 34s04            [12] 2010 	addc	a,#(_u >> 8)
      0007F4 FF               [12] 2011 	mov	r7,a
      0007F5 EA               [12] 2012 	mov	a,r2
      0007F6 2E               [12] 2013 	add	a,r6
      0007F7 FA               [12] 2014 	mov	r2,a
      0007F8 EB               [12] 2015 	mov	a,r3
      0007F9 3F               [12] 2016 	addc	a,r7
      0007FA FB               [12] 2017 	mov	r3,a
      0007FB 8A 82            [24] 2018 	mov	dpl,r2
      0007FD 8B 83            [24] 2019 	mov	dph,r3
      0007FF E0               [24] 2020 	movx	a,@dptr
      000800 70 04            [24] 2021 	jnz	00264$
      000802                       2022 00263$:
                                   2023 ;	assignBit
      000802 C2*00            [12] 2024 	clr	b0
      000804 80 02            [24] 2025 	sjmp	00265$
      000806                       2026 00264$:
                                   2027 ;	assignBit
      000806 D2*00            [12] 2028 	setb	b0
      000808                       2029 00265$:
      000808 A2*00            [12] 2030 	mov	c,b0
      00080A E4               [12] 2031 	clr	a
      00080B 33               [12] 2032 	rlc	a
      00080C 8C 82            [24] 2033 	mov	dpl,r4
      00080E 8D 83            [24] 2034 	mov	dph,r5
      000810 F0               [24] 2035 	movx	@dptr,a
                                   2036 ;	life.c:157: for (x = 0; x < W; x++) {
      000811 90r0Cr02         [24] 2037 	mov	dptr,#_x
      000814 E0               [24] 2038 	movx	a,@dptr
      000815 24 01            [12] 2039 	add	a,#0x01
      000817 F0               [24] 2040 	movx	@dptr,a
      000818 A3               [24] 2041 	inc	dptr
      000819 E0               [24] 2042 	movx	a,@dptr
      00081A 34 00            [12] 2043 	addc	a,#0x00
      00081C F0               [24] 2044 	movx	@dptr,a
      00081D 90r0Cr02         [24] 2045 	mov	dptr,#_x
      000820 E0               [24] 2046 	movx	a,@dptr
      000821 FE               [12] 2047 	mov	r6,a
      000822 A3               [24] 2048 	inc	dptr
      000823 E0               [24] 2049 	movx	a,@dptr
      000824 FF               [12] 2050 	mov	r7,a
      000825 C3               [12] 2051 	clr	c
      000826 EE               [12] 2052 	mov	a,r6
      000827 94 20            [12] 2053 	subb	a,#0x20
      000829 EF               [12] 2054 	mov	a,r7
      00082A 64 80            [12] 2055 	xrl	a,#0x80
      00082C 94 80            [12] 2056 	subb	a,#0x80
      00082E 50 03            [24] 2057 	jnc	00616$
      000830 02r06r5D         [24] 2058 	ljmp	00238$
      000833                       2059 00616$:
                                   2060 ;	life.c:156: for (y = 0; y < H; y++) {
      000833 90r0Cr04         [24] 2061 	mov	dptr,#_y
      000836 E0               [24] 2062 	movx	a,@dptr
      000837 24 01            [12] 2063 	add	a,#0x01
      000839 F0               [24] 2064 	movx	@dptr,a
      00083A A3               [24] 2065 	inc	dptr
      00083B E0               [24] 2066 	movx	a,@dptr
      00083C 34 00            [12] 2067 	addc	a,#0x00
      00083E F0               [24] 2068 	movx	@dptr,a
      00083F 90r0Cr04         [24] 2069 	mov	dptr,#_y
      000842 E0               [24] 2070 	movx	a,@dptr
      000843 FE               [12] 2071 	mov	r6,a
      000844 A3               [24] 2072 	inc	dptr
      000845 E0               [24] 2073 	movx	a,@dptr
      000846 FF               [12] 2074 	mov	r7,a
      000847 C3               [12] 2075 	clr	c
      000848 EE               [12] 2076 	mov	a,r6
      000849 94 20            [12] 2077 	subb	a,#0x20
      00084B EF               [12] 2078 	mov	a,r7
      00084C 64 80            [12] 2079 	xrl	a,#0x80
      00084E 94 80            [12] 2080 	subb	a,#0x80
      000850 50 03            [24] 2081 	jnc	00617$
      000852 02r06r56         [24] 2082 	ljmp	00240$
      000855                       2083 00617$:
                                   2084 ;	life.c:169: for (y = 0; y < H; y++)
      000855 90r0Cr04         [24] 2085 	mov	dptr,#_y
      000858 E4               [12] 2086 	clr	a
      000859 F0               [24] 2087 	movx	@dptr,a
      00085A A3               [24] 2088 	inc	dptr
      00085B F0               [24] 2089 	movx	@dptr,a
      00085C                       2090 00244$:
                                   2091 ;	life.c:170: for (x = 0; x < W; x++) {
      00085C 90r0Cr02         [24] 2092 	mov	dptr,#_x
      00085F E4               [12] 2093 	clr	a
      000860 F0               [24] 2094 	movx	@dptr,a
      000861 A3               [24] 2095 	inc	dptr
      000862 F0               [24] 2096 	movx	@dptr,a
      000863                       2097 00242$:
                                   2098 ;	life.c:171: if (pu[y][x] != nu[y][x]) cycle2 = 0;
      000863 90r0Cr04         [24] 2099 	mov	dptr,#_y
      000866 E0               [24] 2100 	movx	a,@dptr
      000867 FE               [12] 2101 	mov	r6,a
      000868 A3               [24] 2102 	inc	dptr
      000869 E0               [24] 2103 	movx	a,@dptr
      00086A C4               [12] 2104 	swap	a
      00086B 23               [12] 2105 	rl	a
      00086C 54 E0            [12] 2106 	anl	a,#0xe0
      00086E CE               [12] 2107 	xch	a,r6
      00086F C4               [12] 2108 	swap	a
      000870 23               [12] 2109 	rl	a
      000871 CE               [12] 2110 	xch	a,r6
      000872 6E               [12] 2111 	xrl	a,r6
      000873 CE               [12] 2112 	xch	a,r6
      000874 54 E0            [12] 2113 	anl	a,#0xe0
      000876 CE               [12] 2114 	xch	a,r6
      000877 6E               [12] 2115 	xrl	a,r6
      000878 FF               [12] 2116 	mov	r7,a
      000879 EE               [12] 2117 	mov	a,r6
      00087A 24r02            [12] 2118 	add	a,#_pu
      00087C FC               [12] 2119 	mov	r4,a
      00087D EF               [12] 2120 	mov	a,r7
      00087E 34s00            [12] 2121 	addc	a,#(_pu >> 8)
      000880 FD               [12] 2122 	mov	r5,a
      000881 90r0Cr02         [24] 2123 	mov	dptr,#_x
      000884 E0               [24] 2124 	movx	a,@dptr
      000885 FA               [12] 2125 	mov	r2,a
      000886 A3               [24] 2126 	inc	dptr
      000887 E0               [24] 2127 	movx	a,@dptr
      000888 FB               [12] 2128 	mov	r3,a
      000889 EA               [12] 2129 	mov	a,r2
      00088A 2C               [12] 2130 	add	a,r4
      00088B F5 82            [12] 2131 	mov	dpl,a
      00088D EB               [12] 2132 	mov	a,r3
      00088E 3D               [12] 2133 	addc	a,r5
      00088F F5 83            [12] 2134 	mov	dph,a
      000891 EE               [12] 2135 	mov	a,r6
      000892 24r02            [12] 2136 	add	a,#_nu
      000894 FE               [12] 2137 	mov	r6,a
      000895 EF               [12] 2138 	mov	a,r7
      000896 34s08            [12] 2139 	addc	a,#(_nu >> 8)
      000898 FF               [12] 2140 	mov	r7,a
      000899 EA               [12] 2141 	mov	a,r2
      00089A 2E               [12] 2142 	add	a,r6
      00089B FA               [12] 2143 	mov	r2,a
      00089C EB               [12] 2144 	mov	a,r3
      00089D 3F               [12] 2145 	addc	a,r7
      00089E FB               [12] 2146 	mov	r3,a
      00089F E0               [24] 2147 	movx	a,@dptr
      0008A0 FF               [12] 2148 	mov	r7,a
      0008A1 8A 82            [24] 2149 	mov	dpl,r2
      0008A3 8B 83            [24] 2150 	mov	dph,r3
      0008A5 E0               [24] 2151 	movx	a,@dptr
      0008A6 FA               [12] 2152 	mov	r2,a
      0008A7 EF               [12] 2153 	mov	a,r7
      0008A8 B5 02 02         [24] 2154 	cjne	a,ar2,00618$
      0008AB 80 05            [24] 2155 	sjmp	00175$
      0008AD                       2156 00618$:
      0008AD 90r0Cr14         [24] 2157 	mov	dptr,#_cycle2
      0008B0 E4               [12] 2158 	clr	a
      0008B1 F0               [24] 2159 	movx	@dptr,a
      0008B2                       2160 00175$:
                                   2161 ;	life.c:172: if (u[y][x] != nu[y][x]) fixed = 0;
      0008B2 90r0Cr04         [24] 2162 	mov	dptr,#_y
      0008B5 E0               [24] 2163 	movx	a,@dptr
      0008B6 FE               [12] 2164 	mov	r6,a
      0008B7 A3               [24] 2165 	inc	dptr
      0008B8 E0               [24] 2166 	movx	a,@dptr
      0008B9 C4               [12] 2167 	swap	a
      0008BA 23               [12] 2168 	rl	a
      0008BB 54 E0            [12] 2169 	anl	a,#0xe0
      0008BD CE               [12] 2170 	xch	a,r6
      0008BE C4               [12] 2171 	swap	a
      0008BF 23               [12] 2172 	rl	a
      0008C0 CE               [12] 2173 	xch	a,r6
      0008C1 6E               [12] 2174 	xrl	a,r6
      0008C2 CE               [12] 2175 	xch	a,r6
      0008C3 54 E0            [12] 2176 	anl	a,#0xe0
      0008C5 CE               [12] 2177 	xch	a,r6
      0008C6 6E               [12] 2178 	xrl	a,r6
      0008C7 FF               [12] 2179 	mov	r7,a
      0008C8 EE               [12] 2180 	mov	a,r6
      0008C9 24r02            [12] 2181 	add	a,#_u
      0008CB FC               [12] 2182 	mov	r4,a
      0008CC EF               [12] 2183 	mov	a,r7
      0008CD 34s04            [12] 2184 	addc	a,#(_u >> 8)
      0008CF FD               [12] 2185 	mov	r5,a
      0008D0 90r0Cr02         [24] 2186 	mov	dptr,#_x
      0008D3 E0               [24] 2187 	movx	a,@dptr
      0008D4 FA               [12] 2188 	mov	r2,a
      0008D5 A3               [24] 2189 	inc	dptr
      0008D6 E0               [24] 2190 	movx	a,@dptr
      0008D7 FB               [12] 2191 	mov	r3,a
      0008D8 EA               [12] 2192 	mov	a,r2
      0008D9 2C               [12] 2193 	add	a,r4
      0008DA F5 82            [12] 2194 	mov	dpl,a
      0008DC EB               [12] 2195 	mov	a,r3
      0008DD 3D               [12] 2196 	addc	a,r5
      0008DE F5 83            [12] 2197 	mov	dph,a
      0008E0 EE               [12] 2198 	mov	a,r6
      0008E1 24r02            [12] 2199 	add	a,#_nu
      0008E3 FE               [12] 2200 	mov	r6,a
      0008E4 EF               [12] 2201 	mov	a,r7
      0008E5 34s08            [12] 2202 	addc	a,#(_nu >> 8)
      0008E7 FF               [12] 2203 	mov	r7,a
      0008E8 EA               [12] 2204 	mov	a,r2
      0008E9 2E               [12] 2205 	add	a,r6
      0008EA FA               [12] 2206 	mov	r2,a
      0008EB EB               [12] 2207 	mov	a,r3
      0008EC 3F               [12] 2208 	addc	a,r7
      0008ED FB               [12] 2209 	mov	r3,a
      0008EE E0               [24] 2210 	movx	a,@dptr
      0008EF FF               [12] 2211 	mov	r7,a
      0008F0 8A 82            [24] 2212 	mov	dpl,r2
      0008F2 8B 83            [24] 2213 	mov	dph,r3
      0008F4 E0               [24] 2214 	movx	a,@dptr
      0008F5 FA               [12] 2215 	mov	r2,a
      0008F6 EF               [12] 2216 	mov	a,r7
      0008F7 B5 02 02         [24] 2217 	cjne	a,ar2,00619$
      0008FA 80 05            [24] 2218 	sjmp	00177$
      0008FC                       2219 00619$:
      0008FC 90r0Cr13         [24] 2220 	mov	dptr,#_fixed
      0008FF E4               [12] 2221 	clr	a
      000900 F0               [24] 2222 	movx	@dptr,a
      000901                       2223 00177$:
                                   2224 ;	life.c:173: pu[y][x] = u[y][x];
      000901 90r0Cr04         [24] 2225 	mov	dptr,#_y
      000904 E0               [24] 2226 	movx	a,@dptr
      000905 FE               [12] 2227 	mov	r6,a
      000906 A3               [24] 2228 	inc	dptr
      000907 E0               [24] 2229 	movx	a,@dptr
      000908 C4               [12] 2230 	swap	a
      000909 23               [12] 2231 	rl	a
      00090A 54 E0            [12] 2232 	anl	a,#0xe0
      00090C CE               [12] 2233 	xch	a,r6
      00090D C4               [12] 2234 	swap	a
      00090E 23               [12] 2235 	rl	a
      00090F CE               [12] 2236 	xch	a,r6
      000910 6E               [12] 2237 	xrl	a,r6
      000911 CE               [12] 2238 	xch	a,r6
      000912 54 E0            [12] 2239 	anl	a,#0xe0
      000914 CE               [12] 2240 	xch	a,r6
      000915 6E               [12] 2241 	xrl	a,r6
      000916 FF               [12] 2242 	mov	r7,a
      000917 EE               [12] 2243 	mov	a,r6
      000918 24r02            [12] 2244 	add	a,#_pu
      00091A FC               [12] 2245 	mov	r4,a
      00091B EF               [12] 2246 	mov	a,r7
      00091C 34s00            [12] 2247 	addc	a,#(_pu >> 8)
      00091E FD               [12] 2248 	mov	r5,a
      00091F 90r0Cr02         [24] 2249 	mov	dptr,#_x
      000922 E0               [24] 2250 	movx	a,@dptr
      000923 FA               [12] 2251 	mov	r2,a
      000924 A3               [24] 2252 	inc	dptr
      000925 E0               [24] 2253 	movx	a,@dptr
      000926 FB               [12] 2254 	mov	r3,a
      000927 EA               [12] 2255 	mov	a,r2
      000928 2C               [12] 2256 	add	a,r4
      000929 FC               [12] 2257 	mov	r4,a
      00092A EB               [12] 2258 	mov	a,r3
      00092B 3D               [12] 2259 	addc	a,r5
      00092C FD               [12] 2260 	mov	r5,a
      00092D EE               [12] 2261 	mov	a,r6
      00092E 24r02            [12] 2262 	add	a,#_u
      000930 FE               [12] 2263 	mov	r6,a
      000931 EF               [12] 2264 	mov	a,r7
      000932 34s04            [12] 2265 	addc	a,#(_u >> 8)
      000934 FF               [12] 2266 	mov	r7,a
      000935 EA               [12] 2267 	mov	a,r2
      000936 2E               [12] 2268 	add	a,r6
      000937 F5 82            [12] 2269 	mov	dpl,a
      000939 EB               [12] 2270 	mov	a,r3
      00093A 3F               [12] 2271 	addc	a,r7
      00093B F5 83            [12] 2272 	mov	dph,a
      00093D E0               [24] 2273 	movx	a,@dptr
      00093E 8C 82            [24] 2274 	mov	dpl,r4
      000940 8D 83            [24] 2275 	mov	dph,r5
      000942 F0               [24] 2276 	movx	@dptr,a
                                   2277 ;	life.c:174: u[y][x] = nu[y][x];
      000943 90r0Cr04         [24] 2278 	mov	dptr,#_y
      000946 E0               [24] 2279 	movx	a,@dptr
      000947 FE               [12] 2280 	mov	r6,a
      000948 A3               [24] 2281 	inc	dptr
      000949 E0               [24] 2282 	movx	a,@dptr
      00094A C4               [12] 2283 	swap	a
      00094B 23               [12] 2284 	rl	a
      00094C 54 E0            [12] 2285 	anl	a,#0xe0
      00094E CE               [12] 2286 	xch	a,r6
      00094F C4               [12] 2287 	swap	a
      000950 23               [12] 2288 	rl	a
      000951 CE               [12] 2289 	xch	a,r6
      000952 6E               [12] 2290 	xrl	a,r6
      000953 CE               [12] 2291 	xch	a,r6
      000954 54 E0            [12] 2292 	anl	a,#0xe0
      000956 CE               [12] 2293 	xch	a,r6
      000957 6E               [12] 2294 	xrl	a,r6
      000958 FF               [12] 2295 	mov	r7,a
      000959 EE               [12] 2296 	mov	a,r6
      00095A 24r02            [12] 2297 	add	a,#_u
      00095C FC               [12] 2298 	mov	r4,a
      00095D EF               [12] 2299 	mov	a,r7
      00095E 34s04            [12] 2300 	addc	a,#(_u >> 8)
      000960 FD               [12] 2301 	mov	r5,a
      000961 90r0Cr02         [24] 2302 	mov	dptr,#_x
      000964 E0               [24] 2303 	movx	a,@dptr
      000965 FA               [12] 2304 	mov	r2,a
      000966 A3               [24] 2305 	inc	dptr
      000967 E0               [24] 2306 	movx	a,@dptr
      000968 FB               [12] 2307 	mov	r3,a
      000969 EA               [12] 2308 	mov	a,r2
      00096A 2C               [12] 2309 	add	a,r4
      00096B FC               [12] 2310 	mov	r4,a
      00096C EB               [12] 2311 	mov	a,r3
      00096D 3D               [12] 2312 	addc	a,r5
      00096E FD               [12] 2313 	mov	r5,a
      00096F EE               [12] 2314 	mov	a,r6
      000970 24r02            [12] 2315 	add	a,#_nu
      000972 FE               [12] 2316 	mov	r6,a
      000973 EF               [12] 2317 	mov	a,r7
      000974 34s08            [12] 2318 	addc	a,#(_nu >> 8)
      000976 FF               [12] 2319 	mov	r7,a
      000977 EA               [12] 2320 	mov	a,r2
      000978 2E               [12] 2321 	add	a,r6
      000979 F5 82            [12] 2322 	mov	dpl,a
      00097B EB               [12] 2323 	mov	a,r3
      00097C 3F               [12] 2324 	addc	a,r7
      00097D F5 83            [12] 2325 	mov	dph,a
      00097F E0               [24] 2326 	movx	a,@dptr
      000980 8C 82            [24] 2327 	mov	dpl,r4
      000982 8D 83            [24] 2328 	mov	dph,r5
      000984 F0               [24] 2329 	movx	@dptr,a
                                   2330 ;	life.c:170: for (x = 0; x < W; x++) {
      000985 90r0Cr02         [24] 2331 	mov	dptr,#_x
      000988 E0               [24] 2332 	movx	a,@dptr
      000989 24 01            [12] 2333 	add	a,#0x01
      00098B F0               [24] 2334 	movx	@dptr,a
      00098C A3               [24] 2335 	inc	dptr
      00098D E0               [24] 2336 	movx	a,@dptr
      00098E 34 00            [12] 2337 	addc	a,#0x00
      000990 F0               [24] 2338 	movx	@dptr,a
      000991 90r0Cr02         [24] 2339 	mov	dptr,#_x
      000994 E0               [24] 2340 	movx	a,@dptr
      000995 FE               [12] 2341 	mov	r6,a
      000996 A3               [24] 2342 	inc	dptr
      000997 E0               [24] 2343 	movx	a,@dptr
      000998 FF               [12] 2344 	mov	r7,a
      000999 C3               [12] 2345 	clr	c
      00099A EE               [12] 2346 	mov	a,r6
      00099B 94 20            [12] 2347 	subb	a,#0x20
      00099D EF               [12] 2348 	mov	a,r7
      00099E 64 80            [12] 2349 	xrl	a,#0x80
      0009A0 94 80            [12] 2350 	subb	a,#0x80
      0009A2 50 03            [24] 2351 	jnc	00620$
      0009A4 02r08r63         [24] 2352 	ljmp	00242$
      0009A7                       2353 00620$:
                                   2354 ;	life.c:169: for (y = 0; y < H; y++)
      0009A7 90r0Cr04         [24] 2355 	mov	dptr,#_y
      0009AA E0               [24] 2356 	movx	a,@dptr
      0009AB 24 01            [12] 2357 	add	a,#0x01
      0009AD F0               [24] 2358 	movx	@dptr,a
      0009AE A3               [24] 2359 	inc	dptr
      0009AF E0               [24] 2360 	movx	a,@dptr
      0009B0 34 00            [12] 2361 	addc	a,#0x00
      0009B2 F0               [24] 2362 	movx	@dptr,a
      0009B3 90r0Cr04         [24] 2363 	mov	dptr,#_y
      0009B6 E0               [24] 2364 	movx	a,@dptr
      0009B7 FE               [12] 2365 	mov	r6,a
      0009B8 A3               [24] 2366 	inc	dptr
      0009B9 E0               [24] 2367 	movx	a,@dptr
      0009BA FF               [12] 2368 	mov	r7,a
      0009BB C3               [12] 2369 	clr	c
      0009BC EE               [12] 2370 	mov	a,r6
      0009BD 94 20            [12] 2371 	subb	a,#0x20
      0009BF EF               [12] 2372 	mov	a,r7
      0009C0 64 80            [12] 2373 	xrl	a,#0x80
      0009C2 94 80            [12] 2374 	subb	a,#0x80
      0009C4 50 03            [24] 2375 	jnc	00621$
      0009C6 02r08r5C         [24] 2376 	ljmp	00244$
      0009C9                       2377 00621$:
                                   2378 ;	life.c:205: if (fixed || cycle2) {
      0009C9 90r0Cr13         [24] 2379 	mov	dptr,#_fixed
      0009CC E0               [24] 2380 	movx	a,@dptr
      0009CD 70 09            [24] 2381 	jnz	00101$
      0009CF 90r0Cr14         [24] 2382 	mov	dptr,#_cycle2
      0009D2 E0               [24] 2383 	movx	a,@dptr
      0009D3 70 03            [24] 2384 	jnz	00623$
      0009D5 02r03r91         [24] 2385 	ljmp	00251$
      0009D8                       2386 00623$:
      0009D8                       2387 00101$:
                                   2388 ;	life.c:206: printstr("DONE\r\n");
      0009D8 7Dr40            [12] 2389 	mov	r5,#___str_8
      0009DA 7Es00            [12] 2390 	mov	r6,#(___str_8 >> 8)
      0009DC 7F 80            [12] 2391 	mov	r7,#0x80
                                   2392 ;	life.c:47: return;
      0009DE                       2393 00247$:
                                   2394 ;	life.c:45: for (; *s; s++) putchar(*s);
      0009DE 8D 82            [24] 2395 	mov	dpl,r5
      0009E0 8E 83            [24] 2396 	mov	dph,r6
      0009E2 8F F0            [24] 2397 	mov	b,r7
      0009E4 12r00r00         [24] 2398 	lcall	__gptrget
      0009E7 FC               [12] 2399 	mov	r4,a
      0009E8 60 10            [24] 2400 	jz	00182$
      0009EA 7B 00            [12] 2401 	mov	r3,#0x00
      0009EC 8C 82            [24] 2402 	mov	dpl,r4
      0009EE 8B 83            [24] 2403 	mov	dph,r3
      0009F0 12r00r00         [24] 2404 	lcall	_putchar
      0009F3 0D               [12] 2405 	inc	r5
                                   2406 ;	life.c:206: printstr("DONE\r\n");
      0009F4 BD 00 E7         [24] 2407 	cjne	r5,#0x00,00247$
      0009F7 0E               [12] 2408 	inc	r6
      0009F8 80 E4            [24] 2409 	sjmp	00247$
      0009FA                       2410 00182$:
                                   2411 ;	life.c:207: (void)getchar();
      0009FA 12r00r05         [24] 2412 	lcall	_getchar
                                   2413 ;	life.c:208: break;
      0009FD                       2414 00104$:
                                   2415 ;	life.c:212: if (i1) {
      0009FD 90r00r01         [24] 2416 	mov	dptr,#_i1
      000A00 E0               [24] 2417 	movx	a,@dptr
      000A01 60 25            [24] 2418 	jz	00257$
                                   2419 ;	life.c:213: printstr("BREAK\r\n");
      000A03 7Dr47            [12] 2420 	mov	r5,#___str_9
      000A05 7Es00            [12] 2421 	mov	r6,#(___str_9 >> 8)
      000A07 7F 80            [12] 2422 	mov	r7,#0x80
                                   2423 ;	life.c:47: return;
      000A09                       2424 00254$:
                                   2425 ;	life.c:45: for (; *s; s++) putchar(*s);
      000A09 8D 82            [24] 2426 	mov	dpl,r5
      000A0B 8E 83            [24] 2427 	mov	dph,r6
      000A0D 8F F0            [24] 2428 	mov	b,r7
      000A0F 12r00r00         [24] 2429 	lcall	__gptrget
      000A12 FC               [12] 2430 	mov	r4,a
      000A13 60 10            [24] 2431 	jz	00184$
      000A15 7B 00            [12] 2432 	mov	r3,#0x00
      000A17 8C 82            [24] 2433 	mov	dpl,r4
      000A19 8B 83            [24] 2434 	mov	dph,r3
      000A1B 12r00r00         [24] 2435 	lcall	_putchar
      000A1E 0D               [12] 2436 	inc	r5
                                   2437 ;	life.c:213: printstr("BREAK\r\n");
      000A1F BD 00 E7         [24] 2438 	cjne	r5,#0x00,00254$
      000A22 0E               [12] 2439 	inc	r6
      000A23 80 E4            [24] 2440 	sjmp	00254$
      000A25                       2441 00184$:
                                   2442 ;	life.c:214: (void)getchar();
      000A25 12r00r05         [24] 2443 	lcall	_getchar
      000A28                       2444 00257$:
                                   2445 ;	life.c:187: for (i0 = 0; !i0; ) {
      000A28 90r00r00         [24] 2446 	mov	dptr,#_i0
      000A2B E0               [24] 2447 	movx	a,@dptr
      000A2C 70 03            [24] 2448 	jnz	00629$
      000A2E 02r00r4E         [24] 2449 	ljmp	00256$
      000A31                       2450 00629$:
                                   2451 ;	life.c:218: EA = 0;
                                   2452 ;	assignBit
      000A31 C2 AF            [12] 2453 	clr	_EA
                                   2454 ;	life.c:220: printstr("TERM\r\n");
      000A33 7Dr4F            [12] 2455 	mov	r5,#___str_10
      000A35 7Es00            [12] 2456 	mov	r6,#(___str_10 >> 8)
      000A37 7F 80            [12] 2457 	mov	r7,#0x80
                                   2458 ;	life.c:47: return;
      000A39                       2459 00259$:
                                   2460 ;	life.c:45: for (; *s; s++) putchar(*s);
      000A39 8D 82            [24] 2461 	mov	dpl,r5
      000A3B 8E 83            [24] 2462 	mov	dph,r6
      000A3D 8F F0            [24] 2463 	mov	b,r7
      000A3F 12r00r00         [24] 2464 	lcall	__gptrget
      000A42 FC               [12] 2465 	mov	r4,a
      000A43 60 10            [24] 2466 	jz	00186$
      000A45 7B 00            [12] 2467 	mov	r3,#0x00
      000A47 8C 82            [24] 2468 	mov	dpl,r4
      000A49 8B 83            [24] 2469 	mov	dph,r3
      000A4B 12r00r00         [24] 2470 	lcall	_putchar
      000A4E 0D               [12] 2471 	inc	r5
                                   2472 ;	life.c:220: printstr("TERM\r\n");
      000A4F BD 00 E7         [24] 2473 	cjne	r5,#0x00,00259$
      000A52 0E               [12] 2474 	inc	r6
      000A53 80 E4            [24] 2475 	sjmp	00259$
      000A55                       2476 00186$:
                                   2477 ;	life.c:221: (void)getchar();
      000A55 12r00r05         [24] 2478 	lcall	_getchar
                                   2479 ;	life.c:225: __endasm;
      000A58 02 00 00         [24] 2480 	ljmp	0
                                   2481 ;	life.c:226: }
      000A5B 15 81            [12] 2482 	dec	sp
      000A5D D0*00            [24] 2483 	pop	_bp
      000A5F 22               [24] 2484 	ret
                                   2485 	.area CSEG    (CODE)
                                   2486 	.area CONST   (CODE)
      000000                       2487 _digits:
      000000 30                    2488 	.db #0x30	; 48	'0'
      000001 31                    2489 	.db #0x31	; 49	'1'
      000002 32                    2490 	.db #0x32	; 50	'2'
      000003 33                    2491 	.db #0x33	; 51	'3'
      000004 34                    2492 	.db #0x34	; 52	'4'
      000005 35                    2493 	.db #0x35	; 53	'5'
      000006 36                    2494 	.db #0x36	; 54	'6'
      000007 37                    2495 	.db #0x37	; 55	'7'
      000008 38                    2496 	.db #0x38	; 56	'8'
      000009 39                    2497 	.db #0x39	; 57	'9'
      00000A 61                    2498 	.db #0x61	; 97	'a'
      00000B 62                    2499 	.db #0x62	; 98	'b'
      00000C 63                    2500 	.db #0x63	; 99	'c'
      00000D 64                    2501 	.db #0x64	; 100	'd'
      00000E 65                    2502 	.db #0x65	; 101	'e'
      00000F 66                    2503 	.db #0x66	; 102	'f'
                                   2504 	.area CONST   (CODE)
      000010                       2505 ___str_0:
      000010 1B                    2506 	.db 0x1b
      000011 5B 32 4A              2507 	.ascii "[2J"
      000014 1B                    2508 	.db 0x1b
      000015 5B 6D                 2509 	.ascii "[m"
      000017 00                    2510 	.db 0x00
                                   2511 	.area CSEG    (CODE)
                                   2512 	.area CONST   (CODE)
      000018                       2513 ___str_1:
      000018 0D                    2514 	.db 0x0d
      000019 0A                    2515 	.db 0x0a
      00001A 00                    2516 	.db 0x00
                                   2517 	.area CSEG    (CODE)
                                   2518 	.area CONST   (CODE)
      00001B                       2519 ___str_2:
      00001B 5B 5D                 2520 	.ascii "[]"
      00001D 00                    2521 	.db 0x00
                                   2522 	.area CSEG    (CODE)
                                   2523 	.area CONST   (CODE)
      00001E                       2524 ___str_3:
      00001E 23 23                 2525 	.ascii "##"
      000020 00                    2526 	.db 0x00
                                   2527 	.area CSEG    (CODE)
                                   2528 	.area CONST   (CODE)
      000021                       2529 ___str_4:
      000021 3E                    2530 	.ascii ">"
      000022 0D                    2531 	.db 0x0d
      000023 0A                    2532 	.db 0x0a
      000024 00                    2533 	.db 0x00
                                   2534 	.area CSEG    (CODE)
                                   2535 	.area CONST   (CODE)
      000025                       2536 ___str_5:
      000025 1B                    2537 	.db 0x1b
      000026 5B 32 4A              2538 	.ascii "[2J"
      000029 1B                    2539 	.db 0x1b
      00002A 5B 6D 49 4E 49 54     2540 	.ascii "[mINIT"
      000030 0D                    2541 	.db 0x0d
      000031 0A                    2542 	.db 0x0a
      000032 00                    2543 	.db 0x00
                                   2544 	.area CSEG    (CODE)
                                   2545 	.area CONST   (CODE)
      000033                       2546 ___str_6:
      000033 4C 4F 41 44           2547 	.ascii "LOAD"
      000037 0D                    2548 	.db 0x0d
      000038 0A                    2549 	.db 0x0a
      000039 00                    2550 	.db 0x00
                                   2551 	.area CSEG    (CODE)
                                   2552 	.area CONST   (CODE)
      00003A                       2553 ___str_7:
      00003A 52 44 59              2554 	.ascii "RDY"
      00003D 0D                    2555 	.db 0x0d
      00003E 0A                    2556 	.db 0x0a
      00003F 00                    2557 	.db 0x00
                                   2558 	.area CSEG    (CODE)
                                   2559 	.area CONST   (CODE)
      000040                       2560 ___str_8:
      000040 44 4F 4E 45           2561 	.ascii "DONE"
      000044 0D                    2562 	.db 0x0d
      000045 0A                    2563 	.db 0x0a
      000046 00                    2564 	.db 0x00
                                   2565 	.area CSEG    (CODE)
                                   2566 	.area CONST   (CODE)
      000047                       2567 ___str_9:
      000047 42 52 45 41 4B        2568 	.ascii "BREAK"
      00004C 0D                    2569 	.db 0x0d
      00004D 0A                    2570 	.db 0x0a
      00004E 00                    2571 	.db 0x00
                                   2572 	.area CSEG    (CODE)
                                   2573 	.area CONST   (CODE)
      00004F                       2574 ___str_10:
      00004F 54 45 52 4D           2575 	.ascii "TERM"
      000053 0D                    2576 	.db 0x0d
      000054 0A                    2577 	.db 0x0a
      000055 00                    2578 	.db 0x00
                                   2579 	.area CSEG    (CODE)
                                   2580 	.area XINIT   (CODE)
                                   2581 	.area CABS    (ABS,CODE)
