                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module life
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _int1
                                     13 	.globl _int0
                                     14 	.globl _printf
                                     15 	.globl _CY
                                     16 	.globl _AC
                                     17 	.globl _F0
                                     18 	.globl _RS1
                                     19 	.globl _RS0
                                     20 	.globl _OV
                                     21 	.globl _FL
                                     22 	.globl _P
                                     23 	.globl _TF2
                                     24 	.globl _EXF2
                                     25 	.globl _RCLK
                                     26 	.globl _TCLK
                                     27 	.globl _EXEN2
                                     28 	.globl _TR2
                                     29 	.globl _C_T2
                                     30 	.globl _CP_RL2
                                     31 	.globl _T2CON_7
                                     32 	.globl _T2CON_6
                                     33 	.globl _T2CON_5
                                     34 	.globl _T2CON_4
                                     35 	.globl _T2CON_3
                                     36 	.globl _T2CON_2
                                     37 	.globl _T2CON_1
                                     38 	.globl _T2CON_0
                                     39 	.globl _PT2
                                     40 	.globl _PS
                                     41 	.globl _PT1
                                     42 	.globl _PX1
                                     43 	.globl _PT0
                                     44 	.globl _PX0
                                     45 	.globl _RD
                                     46 	.globl _WR
                                     47 	.globl _T1
                                     48 	.globl _T0
                                     49 	.globl _INT1
                                     50 	.globl _INT0
                                     51 	.globl _TXD
                                     52 	.globl _RXD
                                     53 	.globl _P3_7
                                     54 	.globl _P3_6
                                     55 	.globl _P3_5
                                     56 	.globl _P3_4
                                     57 	.globl _P3_3
                                     58 	.globl _P3_2
                                     59 	.globl _P3_1
                                     60 	.globl _P3_0
                                     61 	.globl _EA
                                     62 	.globl _ET2
                                     63 	.globl _ES
                                     64 	.globl _ET1
                                     65 	.globl _EX1
                                     66 	.globl _ET0
                                     67 	.globl _EX0
                                     68 	.globl _P2_7
                                     69 	.globl _P2_6
                                     70 	.globl _P2_5
                                     71 	.globl _P2_4
                                     72 	.globl _P2_3
                                     73 	.globl _P2_2
                                     74 	.globl _P2_1
                                     75 	.globl _P2_0
                                     76 	.globl _SM0
                                     77 	.globl _SM1
                                     78 	.globl _SM2
                                     79 	.globl _REN
                                     80 	.globl _TB8
                                     81 	.globl _RB8
                                     82 	.globl _TI
                                     83 	.globl _RI
                                     84 	.globl _T2EX
                                     85 	.globl _T2
                                     86 	.globl _P1_7
                                     87 	.globl _P1_6
                                     88 	.globl _P1_5
                                     89 	.globl _P1_4
                                     90 	.globl _P1_3
                                     91 	.globl _P1_2
                                     92 	.globl _P1_1
                                     93 	.globl _P1_0
                                     94 	.globl _TF1
                                     95 	.globl _TR1
                                     96 	.globl _TF0
                                     97 	.globl _TR0
                                     98 	.globl _IE1
                                     99 	.globl _IT1
                                    100 	.globl _IE0
                                    101 	.globl _IT0
                                    102 	.globl _P0_7
                                    103 	.globl _P0_6
                                    104 	.globl _P0_5
                                    105 	.globl _P0_4
                                    106 	.globl _P0_3
                                    107 	.globl _P0_2
                                    108 	.globl _P0_1
                                    109 	.globl _P0_0
                                    110 	.globl _B
                                    111 	.globl _A
                                    112 	.globl _ACC
                                    113 	.globl _PSW
                                    114 	.globl _TH2
                                    115 	.globl _TL2
                                    116 	.globl _RCAP2H
                                    117 	.globl _RCAP2L
                                    118 	.globl _T2MOD
                                    119 	.globl _T2CON
                                    120 	.globl _IP
                                    121 	.globl _P3
                                    122 	.globl _IE
                                    123 	.globl _P2
                                    124 	.globl _SBUF
                                    125 	.globl _SCON
                                    126 	.globl _P1
                                    127 	.globl _TH1
                                    128 	.globl _TH0
                                    129 	.globl _TL1
                                    130 	.globl _TL0
                                    131 	.globl _TMOD
                                    132 	.globl _TCON
                                    133 	.globl _PCON
                                    134 	.globl _DPH
                                    135 	.globl _DPL
                                    136 	.globl _SP
                                    137 	.globl _P0
                                    138 	.globl _c
                                    139 	.globl _cycle2
                                    140 	.globl _fixed
                                    141 	.globl _j
                                    142 	.globl _generation
                                    143 	.globl _n
                                    144 	.globl _y1
                                    145 	.globl _x1
                                    146 	.globl _y
                                    147 	.globl _x
                                    148 	.globl _nu
                                    149 	.globl _u
                                    150 	.globl _pu
                                    151 	.globl _i1
                                    152 	.globl _i0
                                    153 	.globl _putchar
                                    154 	.globl _getchar
                                    155 ;--------------------------------------------------------
                                    156 ; special function registers
                                    157 ;--------------------------------------------------------
                                    158 	.area RSEG    (ABS,DATA)
      000000                        159 	.org 0x0000
                           000080   160 _P0	=	0x0080
                           000081   161 _SP	=	0x0081
                           000082   162 _DPL	=	0x0082
                           000083   163 _DPH	=	0x0083
                           000087   164 _PCON	=	0x0087
                           000088   165 _TCON	=	0x0088
                           000089   166 _TMOD	=	0x0089
                           00008A   167 _TL0	=	0x008a
                           00008B   168 _TL1	=	0x008b
                           00008C   169 _TH0	=	0x008c
                           00008D   170 _TH1	=	0x008d
                           000090   171 _P1	=	0x0090
                           000098   172 _SCON	=	0x0098
                           000099   173 _SBUF	=	0x0099
                           0000A0   174 _P2	=	0x00a0
                           0000A8   175 _IE	=	0x00a8
                           0000B0   176 _P3	=	0x00b0
                           0000B8   177 _IP	=	0x00b8
                           0000C8   178 _T2CON	=	0x00c8
                           0000C9   179 _T2MOD	=	0x00c9
                           0000CA   180 _RCAP2L	=	0x00ca
                           0000CB   181 _RCAP2H	=	0x00cb
                           0000CC   182 _TL2	=	0x00cc
                           0000CD   183 _TH2	=	0x00cd
                           0000D0   184 _PSW	=	0x00d0
                           0000E0   185 _ACC	=	0x00e0
                           0000E0   186 _A	=	0x00e0
                           0000F0   187 _B	=	0x00f0
                                    188 ;--------------------------------------------------------
                                    189 ; special function bits
                                    190 ;--------------------------------------------------------
                                    191 	.area RSEG    (ABS,DATA)
      000000                        192 	.org 0x0000
                           000080   193 _P0_0	=	0x0080
                           000081   194 _P0_1	=	0x0081
                           000082   195 _P0_2	=	0x0082
                           000083   196 _P0_3	=	0x0083
                           000084   197 _P0_4	=	0x0084
                           000085   198 _P0_5	=	0x0085
                           000086   199 _P0_6	=	0x0086
                           000087   200 _P0_7	=	0x0087
                           000088   201 _IT0	=	0x0088
                           000089   202 _IE0	=	0x0089
                           00008A   203 _IT1	=	0x008a
                           00008B   204 _IE1	=	0x008b
                           00008C   205 _TR0	=	0x008c
                           00008D   206 _TF0	=	0x008d
                           00008E   207 _TR1	=	0x008e
                           00008F   208 _TF1	=	0x008f
                           000090   209 _P1_0	=	0x0090
                           000091   210 _P1_1	=	0x0091
                           000092   211 _P1_2	=	0x0092
                           000093   212 _P1_3	=	0x0093
                           000094   213 _P1_4	=	0x0094
                           000095   214 _P1_5	=	0x0095
                           000096   215 _P1_6	=	0x0096
                           000097   216 _P1_7	=	0x0097
                           000090   217 _T2	=	0x0090
                           000091   218 _T2EX	=	0x0091
                           000098   219 _RI	=	0x0098
                           000099   220 _TI	=	0x0099
                           00009A   221 _RB8	=	0x009a
                           00009B   222 _TB8	=	0x009b
                           00009C   223 _REN	=	0x009c
                           00009D   224 _SM2	=	0x009d
                           00009E   225 _SM1	=	0x009e
                           00009F   226 _SM0	=	0x009f
                           0000A0   227 _P2_0	=	0x00a0
                           0000A1   228 _P2_1	=	0x00a1
                           0000A2   229 _P2_2	=	0x00a2
                           0000A3   230 _P2_3	=	0x00a3
                           0000A4   231 _P2_4	=	0x00a4
                           0000A5   232 _P2_5	=	0x00a5
                           0000A6   233 _P2_6	=	0x00a6
                           0000A7   234 _P2_7	=	0x00a7
                           0000A8   235 _EX0	=	0x00a8
                           0000A9   236 _ET0	=	0x00a9
                           0000AA   237 _EX1	=	0x00aa
                           0000AB   238 _ET1	=	0x00ab
                           0000AC   239 _ES	=	0x00ac
                           0000AD   240 _ET2	=	0x00ad
                           0000AF   241 _EA	=	0x00af
                           0000B0   242 _P3_0	=	0x00b0
                           0000B1   243 _P3_1	=	0x00b1
                           0000B2   244 _P3_2	=	0x00b2
                           0000B3   245 _P3_3	=	0x00b3
                           0000B4   246 _P3_4	=	0x00b4
                           0000B5   247 _P3_5	=	0x00b5
                           0000B6   248 _P3_6	=	0x00b6
                           0000B7   249 _P3_7	=	0x00b7
                           0000B0   250 _RXD	=	0x00b0
                           0000B1   251 _TXD	=	0x00b1
                           0000B2   252 _INT0	=	0x00b2
                           0000B3   253 _INT1	=	0x00b3
                           0000B4   254 _T0	=	0x00b4
                           0000B5   255 _T1	=	0x00b5
                           0000B6   256 _WR	=	0x00b6
                           0000B7   257 _RD	=	0x00b7
                           0000B8   258 _PX0	=	0x00b8
                           0000B9   259 _PT0	=	0x00b9
                           0000BA   260 _PX1	=	0x00ba
                           0000BB   261 _PT1	=	0x00bb
                           0000BC   262 _PS	=	0x00bc
                           0000BD   263 _PT2	=	0x00bd
                           0000C8   264 _T2CON_0	=	0x00c8
                           0000C9   265 _T2CON_1	=	0x00c9
                           0000CA   266 _T2CON_2	=	0x00ca
                           0000CB   267 _T2CON_3	=	0x00cb
                           0000CC   268 _T2CON_4	=	0x00cc
                           0000CD   269 _T2CON_5	=	0x00cd
                           0000CE   270 _T2CON_6	=	0x00ce
                           0000CF   271 _T2CON_7	=	0x00cf
                           0000C8   272 _CP_RL2	=	0x00c8
                           0000C9   273 _C_T2	=	0x00c9
                           0000CA   274 _TR2	=	0x00ca
                           0000CB   275 _EXEN2	=	0x00cb
                           0000CC   276 _TCLK	=	0x00cc
                           0000CD   277 _RCLK	=	0x00cd
                           0000CE   278 _EXF2	=	0x00ce
                           0000CF   279 _TF2	=	0x00cf
                           0000D0   280 _P	=	0x00d0
                           0000D1   281 _FL	=	0x00d1
                           0000D2   282 _OV	=	0x00d2
                           0000D3   283 _RS0	=	0x00d3
                           0000D4   284 _RS1	=	0x00d4
                           0000D5   285 _F0	=	0x00d5
                           0000D6   286 _AC	=	0x00d6
                           0000D7   287 _CY	=	0x00d7
                                    288 ;--------------------------------------------------------
                                    289 ; overlayable register banks
                                    290 ;--------------------------------------------------------
                                    291 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        292 	.ds 8
                                    293 	.area REG_BANK_1	(REL,OVR,DATA)
      000000                        294 	.ds 8
                                    295 ;--------------------------------------------------------
                                    296 ; overlayable bit register bank
                                    297 ;--------------------------------------------------------
                                    298 	.area BIT_BANK	(REL,OVR,DATA)
      000000                        299 bits:
      000000                        300 	.ds 1
                           008000   301 	b0 = bits[0]
                           008100   302 	b1 = bits[1]
                           008200   303 	b2 = bits[2]
                           008300   304 	b3 = bits[3]
                           008400   305 	b4 = bits[4]
                           008500   306 	b5 = bits[5]
                           008600   307 	b6 = bits[6]
                           008700   308 	b7 = bits[7]
                                    309 ;--------------------------------------------------------
                                    310 ; internal ram data
                                    311 ;--------------------------------------------------------
                                    312 	.area DSEG    (DATA)
                                    313 ;--------------------------------------------------------
                                    314 ; overlayable items in internal ram 
                                    315 ;--------------------------------------------------------
                                    316 ;--------------------------------------------------------
                                    317 ; Stack segment in internal ram 
                                    318 ;--------------------------------------------------------
                                    319 	.area	SSEG
      000000                        320 __start__stack:
      000000                        321 	.ds	1
                                    322 
                                    323 ;--------------------------------------------------------
                                    324 ; indirectly addressable internal ram data
                                    325 ;--------------------------------------------------------
                                    326 	.area ISEG    (DATA)
                                    327 ;--------------------------------------------------------
                                    328 ; absolute internal ram data
                                    329 ;--------------------------------------------------------
                                    330 	.area IABS    (ABS,DATA)
                                    331 	.area IABS    (ABS,DATA)
                                    332 ;--------------------------------------------------------
                                    333 ; bit data
                                    334 ;--------------------------------------------------------
                                    335 	.area BSEG    (BIT)
                                    336 ;--------------------------------------------------------
                                    337 ; paged external ram data
                                    338 ;--------------------------------------------------------
                                    339 	.area PSEG    (PAG,XDATA)
                                    340 ;--------------------------------------------------------
                                    341 ; external ram data
                                    342 ;--------------------------------------------------------
                                    343 	.area XSEG    (XDATA)
      000000                        344 _i0::
      000000                        345 	.ds 2
      000002                        346 _i1::
      000002                        347 	.ds 2
      000004                        348 _pu::
      000004                        349 	.ds 1024
      000404                        350 _u::
      000404                        351 	.ds 1024
      000804                        352 _nu::
      000804                        353 	.ds 1024
      000C04                        354 _x::
      000C04                        355 	.ds 2
      000C06                        356 _y::
      000C06                        357 	.ds 2
      000C08                        358 _x1::
      000C08                        359 	.ds 2
      000C0A                        360 _y1::
      000C0A                        361 	.ds 2
      000C0C                        362 _n::
      000C0C                        363 	.ds 2
      000C0E                        364 _generation::
      000C0E                        365 	.ds 8
      000C16                        366 _j::
      000C16                        367 	.ds 2
      000C18                        368 _fixed::
      000C18                        369 	.ds 2
      000C1A                        370 _cycle2::
      000C1A                        371 	.ds 2
      000C1C                        372 _c::
      000C1C                        373 	.ds 2
                                    374 ;--------------------------------------------------------
                                    375 ; absolute external ram data
                                    376 ;--------------------------------------------------------
                                    377 	.area XABS    (ABS,XDATA)
                                    378 ;--------------------------------------------------------
                                    379 ; external initialized ram data
                                    380 ;--------------------------------------------------------
                                    381 	.area XISEG   (XDATA)
                                    382 	.area HOME    (CODE)
                                    383 	.area GSINIT0 (CODE)
                                    384 	.area GSINIT1 (CODE)
                                    385 	.area GSINIT2 (CODE)
                                    386 	.area GSINIT3 (CODE)
                                    387 	.area GSINIT4 (CODE)
                                    388 	.area GSINIT5 (CODE)
                                    389 	.area GSINIT  (CODE)
                                    390 	.area GSFINAL (CODE)
                                    391 	.area CSEG    (CODE)
                                    392 ;--------------------------------------------------------
                                    393 ; interrupt vector 
                                    394 ;--------------------------------------------------------
                                    395 	.area HOME    (CODE)
      000000                        396 __interrupt_vect:
      000000 02r00r00         [24]  397 	ljmp	__sdcc_gsinit_startup
      000003 02r00r0D         [24]  398 	ljmp	_int0
      000006                        399 	.ds	5
      00000B 32               [24]  400 	reti
      00000C                        401 	.ds	7
      000013 02r00r23         [24]  402 	ljmp	_int1
                                    403 ;--------------------------------------------------------
                                    404 ; global & static initialisations
                                    405 ;--------------------------------------------------------
                                    406 	.area HOME    (CODE)
                                    407 	.area GSINIT  (CODE)
                                    408 	.area GSFINAL (CODE)
                                    409 	.area GSINIT  (CODE)
                                    410 	.globl __sdcc_gsinit_startup
                                    411 	.globl __sdcc_program_startup
                                    412 	.globl __start__stack
                                    413 	.globl __mcs51_genXINIT
                                    414 	.globl __mcs51_genXRAMCLEAR
                                    415 	.globl __mcs51_genRAMCLEAR
                                    416 	.area GSFINAL (CODE)
      000000 02r00r16         [24]  417 	ljmp	__sdcc_program_startup
                                    418 ;--------------------------------------------------------
                                    419 ; Home
                                    420 ;--------------------------------------------------------
                                    421 	.area HOME    (CODE)
                                    422 	.area HOME    (CODE)
      000016                        423 __sdcc_program_startup:
      000016 02r00r39         [24]  424 	ljmp	_main
                                    425 ;	return from main will return to caller
                                    426 ;--------------------------------------------------------
                                    427 ; code
                                    428 ;--------------------------------------------------------
                                    429 	.area CSEG    (CODE)
                                    430 ;------------------------------------------------------------
                                    431 ;Allocation info for local variables in function 'putchar'
                                    432 ;------------------------------------------------------------
                                    433 ;c                         Allocated to registers 
                                    434 ;------------------------------------------------------------
                                    435 ;	life.c:7: int putchar(int c) __naked {
                                    436 ;	-----------------------------------------
                                    437 ;	 function putchar
                                    438 ;	-----------------------------------------
      000000                        439 _putchar:
                                    440 ;	naked function: no prologue.
                                    441 ;	life.c:12: __endasm;
      000000 E5 82            [12]  442 	mov	a, dpl
      000002 02 00 30         [24]  443 	ljmp	0x0030
                                    444 ;	life.c:13: }
                                    445 ;	naked function: no epilogue.
                                    446 ;------------------------------------------------------------
                                    447 ;Allocation info for local variables in function 'getchar'
                                    448 ;------------------------------------------------------------
                                    449 ;	life.c:15: int getchar(void) {
                                    450 ;	-----------------------------------------
                                    451 ;	 function getchar
                                    452 ;	-----------------------------------------
      000005                        453 _getchar:
                           000007   454 	ar7 = 0x07
                           000006   455 	ar6 = 0x06
                           000005   456 	ar5 = 0x05
                           000004   457 	ar4 = 0x04
                           000003   458 	ar3 = 0x03
                           000002   459 	ar2 = 0x02
                           000001   460 	ar1 = 0x01
                           000000   461 	ar0 = 0x00
                                    462 ;	life.c:20: __endasm;
      000005 12 00 32         [24]  463 	lcall	0x0032
      000008 C2 83            [12]  464 	clr	dph
      00000A F5 82            [12]  465 	mov	dpl, a
                                    466 ;	life.c:21: }
      00000C 22               [24]  467 	ret
                                    468 ;------------------------------------------------------------
                                    469 ;Allocation info for local variables in function 'int0'
                                    470 ;------------------------------------------------------------
                                    471 ;	life.c:32: void int0(void) __interrupt 0 __using 1 {
                                    472 ;	-----------------------------------------
                                    473 ;	 function int0
                                    474 ;	-----------------------------------------
      00000D                        475 _int0:
                           00000F   476 	ar7 = 0x0f
                           00000E   477 	ar6 = 0x0e
                           00000D   478 	ar5 = 0x0d
                           00000C   479 	ar4 = 0x0c
                           00000B   480 	ar3 = 0x0b
                           00000A   481 	ar2 = 0x0a
                           000009   482 	ar1 = 0x09
                           000008   483 	ar0 = 0x08
      00000D C0 E0            [24]  484 	push	acc
      00000F C0 82            [24]  485 	push	dpl
      000011 C0 83            [24]  486 	push	dph
                                    487 ;	life.c:33: i0 = 1;
      000013 90r00r00         [24]  488 	mov	dptr,#_i0
      000016 74 01            [12]  489 	mov	a,#0x01
      000018 F0               [24]  490 	movx	@dptr,a
      000019 E4               [12]  491 	clr	a
      00001A A3               [24]  492 	inc	dptr
      00001B F0               [24]  493 	movx	@dptr,a
                                    494 ;	life.c:34: }
      00001C D0 83            [24]  495 	pop	dph
      00001E D0 82            [24]  496 	pop	dpl
      000020 D0 E0            [24]  497 	pop	acc
      000022 32               [24]  498 	reti
                                    499 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    500 ;	eliminated unneeded push/pop psw
                                    501 ;	eliminated unneeded push/pop b
                                    502 ;------------------------------------------------------------
                                    503 ;Allocation info for local variables in function 'int1'
                                    504 ;------------------------------------------------------------
                                    505 ;	life.c:37: void int1(void) __interrupt 2 __using 1 {
                                    506 ;	-----------------------------------------
                                    507 ;	 function int1
                                    508 ;	-----------------------------------------
      000023                        509 _int1:
      000023 C0 E0            [24]  510 	push	acc
      000025 C0 82            [24]  511 	push	dpl
      000027 C0 83            [24]  512 	push	dph
                                    513 ;	life.c:38: i1 = 1;
      000029 90r00r02         [24]  514 	mov	dptr,#_i1
      00002C 74 01            [12]  515 	mov	a,#0x01
      00002E F0               [24]  516 	movx	@dptr,a
      00002F E4               [12]  517 	clr	a
      000030 A3               [24]  518 	inc	dptr
      000031 F0               [24]  519 	movx	@dptr,a
                                    520 ;	life.c:39: }
      000032 D0 83            [24]  521 	pop	dph
      000034 D0 82            [24]  522 	pop	dpl
      000036 D0 E0            [24]  523 	pop	acc
      000038 32               [24]  524 	reti
                                    525 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    526 ;	eliminated unneeded push/pop psw
                                    527 ;	eliminated unneeded push/pop b
                                    528 ;------------------------------------------------------------
                                    529 ;Allocation info for local variables in function 'main'
                                    530 ;------------------------------------------------------------
                                    531 ;	life.c:110: void main(void) {
                                    532 ;	-----------------------------------------
                                    533 ;	 function main
                                    534 ;	-----------------------------------------
      000039                        535 _main:
                           000007   536 	ar7 = 0x07
                           000006   537 	ar6 = 0x06
                           000005   538 	ar5 = 0x05
                           000004   539 	ar4 = 0x04
                           000003   540 	ar3 = 0x03
                           000002   541 	ar2 = 0x02
                           000001   542 	ar1 = 0x01
                           000000   543 	ar0 = 0x00
                                    544 ;	life.c:111: i0 = i1 = 0;
      000039 90r00r02         [24]  545 	mov	dptr,#_i1
      00003C E4               [12]  546 	clr	a
      00003D F0               [24]  547 	movx	@dptr,a
      00003E A3               [24]  548 	inc	dptr
      00003F F0               [24]  549 	movx	@dptr,a
      000040 90r00r00         [24]  550 	mov	dptr,#_i0
      000043 F0               [24]  551 	movx	@dptr,a
      000044 A3               [24]  552 	inc	dptr
      000045 F0               [24]  553 	movx	@dptr,a
                                    554 ;	life.c:113: IT0 = 1;
                                    555 ;	assignBit
      000046 D2 88            [12]  556 	setb	_IT0
                                    557 ;	life.c:114: IT1 = 1;
                                    558 ;	assignBit
      000048 D2 8A            [12]  559 	setb	_IT1
                                    560 ;	life.c:115: EX0 = 1;
                                    561 ;	assignBit
      00004A D2 A8            [12]  562 	setb	_EX0
                                    563 ;	life.c:116: EX1 = 1;
                                    564 ;	assignBit
      00004C D2 AA            [12]  565 	setb	_EX1
                                    566 ;	life.c:117: EA = 1;
                                    567 ;	assignBit
      00004E D2 AF            [12]  568 	setb	_EA
                                    569 ;	life.c:119: while (!i0) {
      000050                        570 00114$:
      000050 90r00r00         [24]  571 	mov	dptr,#_i0
      000053 E0               [24]  572 	movx	a,@dptr
      000054 F5 F0            [12]  573 	mov	b,a
      000056 A3               [24]  574 	inc	dptr
      000057 E0               [24]  575 	movx	a,@dptr
      000058 45 F0            [12]  576 	orl	a,b
      00005A 60 03            [24]  577 	jz	00368$
      00005C 02r07rF3         [24]  578 	ljmp	00116$
      00005F                        579 00368$:
                                    580 ;	life.c:120: for (y = 0; y < H; y++)
      00005F 90r0Cr06         [24]  581 	mov	dptr,#_y
      000062 E4               [12]  582 	clr	a
      000063 F0               [24]  583 	movx	@dptr,a
      000064 A3               [24]  584 	inc	dptr
      000065 F0               [24]  585 	movx	@dptr,a
      000066                        586 00150$:
                                    587 ;	life.c:121: for (x = 0; x < W; x++)
      000066 90r0Cr04         [24]  588 	mov	dptr,#_x
      000069 E4               [12]  589 	clr	a
      00006A F0               [24]  590 	movx	@dptr,a
      00006B A3               [24]  591 	inc	dptr
      00006C F0               [24]  592 	movx	@dptr,a
      00006D                        593 00148$:
                                    594 ;	life.c:122: pu[y][x] = 0;
      00006D 90r0Cr06         [24]  595 	mov	dptr,#_y
      000070 E0               [24]  596 	movx	a,@dptr
      000071 FE               [12]  597 	mov	r6,a
      000072 A3               [24]  598 	inc	dptr
      000073 E0               [24]  599 	movx	a,@dptr
      000074 C4               [12]  600 	swap	a
      000075 23               [12]  601 	rl	a
      000076 54 E0            [12]  602 	anl	a,#0xe0
      000078 CE               [12]  603 	xch	a,r6
      000079 C4               [12]  604 	swap	a
      00007A 23               [12]  605 	rl	a
      00007B CE               [12]  606 	xch	a,r6
      00007C 6E               [12]  607 	xrl	a,r6
      00007D CE               [12]  608 	xch	a,r6
      00007E 54 E0            [12]  609 	anl	a,#0xe0
      000080 CE               [12]  610 	xch	a,r6
      000081 6E               [12]  611 	xrl	a,r6
      000082 FF               [12]  612 	mov	r7,a
      000083 EE               [12]  613 	mov	a,r6
      000084 24r04            [12]  614 	add	a,#_pu
      000086 FE               [12]  615 	mov	r6,a
      000087 EF               [12]  616 	mov	a,r7
      000088 34s00            [12]  617 	addc	a,#(_pu >> 8)
      00008A FF               [12]  618 	mov	r7,a
      00008B 90r0Cr04         [24]  619 	mov	dptr,#_x
      00008E E0               [24]  620 	movx	a,@dptr
      00008F FC               [12]  621 	mov	r4,a
      000090 A3               [24]  622 	inc	dptr
      000091 E0               [24]  623 	movx	a,@dptr
      000092 FD               [12]  624 	mov	r5,a
      000093 EC               [12]  625 	mov	a,r4
      000094 2E               [12]  626 	add	a,r6
      000095 F5 82            [12]  627 	mov	dpl,a
      000097 ED               [12]  628 	mov	a,r5
      000098 3F               [12]  629 	addc	a,r7
      000099 F5 83            [12]  630 	mov	dph,a
      00009B E4               [12]  631 	clr	a
      00009C F0               [24]  632 	movx	@dptr,a
                                    633 ;	life.c:121: for (x = 0; x < W; x++)
      00009D 90r0Cr04         [24]  634 	mov	dptr,#_x
      0000A0 E0               [24]  635 	movx	a,@dptr
      0000A1 24 01            [12]  636 	add	a,#0x01
      0000A3 F0               [24]  637 	movx	@dptr,a
      0000A4 A3               [24]  638 	inc	dptr
      0000A5 E0               [24]  639 	movx	a,@dptr
      0000A6 34 00            [12]  640 	addc	a,#0x00
      0000A8 F0               [24]  641 	movx	@dptr,a
      0000A9 90r0Cr04         [24]  642 	mov	dptr,#_x
      0000AC E0               [24]  643 	movx	a,@dptr
      0000AD FE               [12]  644 	mov	r6,a
      0000AE A3               [24]  645 	inc	dptr
      0000AF E0               [24]  646 	movx	a,@dptr
      0000B0 FF               [12]  647 	mov	r7,a
      0000B1 C3               [12]  648 	clr	c
      0000B2 EE               [12]  649 	mov	a,r6
      0000B3 94 20            [12]  650 	subb	a,#0x20
      0000B5 EF               [12]  651 	mov	a,r7
      0000B6 64 80            [12]  652 	xrl	a,#0x80
      0000B8 94 80            [12]  653 	subb	a,#0x80
      0000BA 40 B1            [24]  654 	jc	00148$
                                    655 ;	life.c:120: for (y = 0; y < H; y++)
      0000BC 90r0Cr06         [24]  656 	mov	dptr,#_y
      0000BF E0               [24]  657 	movx	a,@dptr
      0000C0 24 01            [12]  658 	add	a,#0x01
      0000C2 F0               [24]  659 	movx	@dptr,a
      0000C3 A3               [24]  660 	inc	dptr
      0000C4 E0               [24]  661 	movx	a,@dptr
      0000C5 34 00            [12]  662 	addc	a,#0x00
      0000C7 F0               [24]  663 	movx	@dptr,a
      0000C8 90r0Cr06         [24]  664 	mov	dptr,#_y
      0000CB E0               [24]  665 	movx	a,@dptr
      0000CC FE               [12]  666 	mov	r6,a
      0000CD A3               [24]  667 	inc	dptr
      0000CE E0               [24]  668 	movx	a,@dptr
      0000CF FF               [12]  669 	mov	r7,a
      0000D0 C3               [12]  670 	clr	c
      0000D1 EE               [12]  671 	mov	a,r6
      0000D2 94 20            [12]  672 	subb	a,#0x20
      0000D4 EF               [12]  673 	mov	a,r7
      0000D5 64 80            [12]  674 	xrl	a,#0x80
      0000D7 94 80            [12]  675 	subb	a,#0x80
      0000D9 40 8B            [24]  676 	jc	00150$
                                    677 ;	life.c:123: printf("\033[2J\033[mINIT\n\r");
      0000DB 74r1E            [12]  678 	mov	a,#___str_5
      0000DD C0 E0            [24]  679 	push	acc
      0000DF 74s00            [12]  680 	mov	a,#(___str_5 >> 8)
      0000E1 C0 E0            [24]  681 	push	acc
      0000E3 74 80            [12]  682 	mov	a,#0x80
      0000E5 C0 E0            [24]  683 	push	acc
      0000E7 12r00r00         [24]  684 	lcall	_printf
      0000EA 15 81            [12]  685 	dec	sp
      0000EC 15 81            [12]  686 	dec	sp
      0000EE 15 81            [12]  687 	dec	sp
                                    688 ;	life.c:124: for (y = 0; y < H; y++)
      0000F0 90r0Cr06         [24]  689 	mov	dptr,#_y
      0000F3 E4               [12]  690 	clr	a
      0000F4 F0               [24]  691 	movx	@dptr,a
      0000F5 A3               [24]  692 	inc	dptr
      0000F6 F0               [24]  693 	movx	@dptr,a
      0000F7                        694 00154$:
                                    695 ;	life.c:125: for (x = 0; x < W; x++) {
      0000F7 90r0Cr04         [24]  696 	mov	dptr,#_x
      0000FA E4               [12]  697 	clr	a
      0000FB F0               [24]  698 	movx	@dptr,a
      0000FC A3               [24]  699 	inc	dptr
      0000FD F0               [24]  700 	movx	@dptr,a
      0000FE                        701 00152$:
                                    702 ;	life.c:126: c = getchar();
      0000FE 12r00r05         [24]  703 	lcall	_getchar
      000101 AE 82            [24]  704 	mov	r6,dpl
      000103 AF 83            [24]  705 	mov	r7,dph
      000105 90r0Cr1C         [24]  706 	mov	dptr,#_c
      000108 EE               [12]  707 	mov	a,r6
      000109 F0               [24]  708 	movx	@dptr,a
      00010A EF               [12]  709 	mov	a,r7
      00010B A3               [24]  710 	inc	dptr
      00010C F0               [24]  711 	movx	@dptr,a
                                    712 ;	life.c:127: u[y][x] = c & 1;
      00010D 90r0Cr06         [24]  713 	mov	dptr,#_y
      000110 E0               [24]  714 	movx	a,@dptr
      000111 FC               [12]  715 	mov	r4,a
      000112 A3               [24]  716 	inc	dptr
      000113 E0               [24]  717 	movx	a,@dptr
      000114 C4               [12]  718 	swap	a
      000115 23               [12]  719 	rl	a
      000116 54 E0            [12]  720 	anl	a,#0xe0
      000118 CC               [12]  721 	xch	a,r4
      000119 C4               [12]  722 	swap	a
      00011A 23               [12]  723 	rl	a
      00011B CC               [12]  724 	xch	a,r4
      00011C 6C               [12]  725 	xrl	a,r4
      00011D CC               [12]  726 	xch	a,r4
      00011E 54 E0            [12]  727 	anl	a,#0xe0
      000120 CC               [12]  728 	xch	a,r4
      000121 6C               [12]  729 	xrl	a,r4
      000122 FD               [12]  730 	mov	r5,a
      000123 EC               [12]  731 	mov	a,r4
      000124 24r04            [12]  732 	add	a,#_u
      000126 FC               [12]  733 	mov	r4,a
      000127 ED               [12]  734 	mov	a,r5
      000128 34s04            [12]  735 	addc	a,#(_u >> 8)
      00012A FD               [12]  736 	mov	r5,a
      00012B 90r0Cr04         [24]  737 	mov	dptr,#_x
      00012E E0               [24]  738 	movx	a,@dptr
      00012F FA               [12]  739 	mov	r2,a
      000130 A3               [24]  740 	inc	dptr
      000131 E0               [24]  741 	movx	a,@dptr
      000132 FB               [12]  742 	mov	r3,a
      000133 EA               [12]  743 	mov	a,r2
      000134 2C               [12]  744 	add	a,r4
      000135 F5 82            [12]  745 	mov	dpl,a
      000137 EB               [12]  746 	mov	a,r3
      000138 3D               [12]  747 	addc	a,r5
      000139 F5 83            [12]  748 	mov	dph,a
      00013B 53 06 01         [24]  749 	anl	ar6,#0x01
      00013E EE               [12]  750 	mov	a,r6
      00013F F0               [24]  751 	movx	@dptr,a
                                    752 ;	life.c:125: for (x = 0; x < W; x++) {
      000140 90r0Cr04         [24]  753 	mov	dptr,#_x
      000143 E0               [24]  754 	movx	a,@dptr
      000144 24 01            [12]  755 	add	a,#0x01
      000146 F0               [24]  756 	movx	@dptr,a
      000147 A3               [24]  757 	inc	dptr
      000148 E0               [24]  758 	movx	a,@dptr
      000149 34 00            [12]  759 	addc	a,#0x00
      00014B F0               [24]  760 	movx	@dptr,a
      00014C 90r0Cr04         [24]  761 	mov	dptr,#_x
      00014F E0               [24]  762 	movx	a,@dptr
      000150 FE               [12]  763 	mov	r6,a
      000151 A3               [24]  764 	inc	dptr
      000152 E0               [24]  765 	movx	a,@dptr
      000153 FF               [12]  766 	mov	r7,a
      000154 C3               [12]  767 	clr	c
      000155 EE               [12]  768 	mov	a,r6
      000156 94 20            [12]  769 	subb	a,#0x20
      000158 EF               [12]  770 	mov	a,r7
      000159 64 80            [12]  771 	xrl	a,#0x80
      00015B 94 80            [12]  772 	subb	a,#0x80
      00015D 40 9F            [24]  773 	jc	00152$
                                    774 ;	life.c:124: for (y = 0; y < H; y++)
      00015F 90r0Cr06         [24]  775 	mov	dptr,#_y
      000162 E0               [24]  776 	movx	a,@dptr
      000163 24 01            [12]  777 	add	a,#0x01
      000165 F0               [24]  778 	movx	@dptr,a
      000166 A3               [24]  779 	inc	dptr
      000167 E0               [24]  780 	movx	a,@dptr
      000168 34 00            [12]  781 	addc	a,#0x00
      00016A F0               [24]  782 	movx	@dptr,a
      00016B 90r0Cr06         [24]  783 	mov	dptr,#_y
      00016E E0               [24]  784 	movx	a,@dptr
      00016F FE               [12]  785 	mov	r6,a
      000170 A3               [24]  786 	inc	dptr
      000171 E0               [24]  787 	movx	a,@dptr
      000172 FF               [12]  788 	mov	r7,a
      000173 C3               [12]  789 	clr	c
      000174 EE               [12]  790 	mov	a,r6
      000175 94 20            [12]  791 	subb	a,#0x20
      000177 EF               [12]  792 	mov	a,r7
      000178 64 80            [12]  793 	xrl	a,#0x80
      00017A 94 80            [12]  794 	subb	a,#0x80
      00017C 50 03            [24]  795 	jnc	00372$
      00017E 02r00rF7         [24]  796 	ljmp	00154$
      000181                        797 00372$:
                                    798 ;	life.c:129: printf("RDY\n\r");
      000181 74r2C            [12]  799 	mov	a,#___str_6
      000183 C0 E0            [24]  800 	push	acc
      000185 74s00            [12]  801 	mov	a,#(___str_6 >> 8)
      000187 C0 E0            [24]  802 	push	acc
      000189 74 80            [12]  803 	mov	a,#0x80
      00018B C0 E0            [24]  804 	push	acc
      00018D 12r00r00         [24]  805 	lcall	_printf
      000190 15 81            [12]  806 	dec	sp
      000192 15 81            [12]  807 	dec	sp
      000194 15 81            [12]  808 	dec	sp
                                    809 ;	life.c:130: (void)getchar();
      000196 12r00r05         [24]  810 	lcall	_getchar
                                    811 ;	life.c:42: for (j = 0; j < 4; j++)
      000199 90r0Cr16         [24]  812 	mov	dptr,#_j
      00019C E4               [12]  813 	clr	a
      00019D F0               [24]  814 	movx	@dptr,a
      00019E A3               [24]  815 	inc	dptr
      00019F F0               [24]  816 	movx	@dptr,a
      0001A0                        817 00156$:
                                    818 ;	life.c:43: generation[j] = 0;
      0001A0 90r0Cr16         [24]  819 	mov	dptr,#_j
      0001A3 E0               [24]  820 	movx	a,@dptr
      0001A4 FE               [12]  821 	mov	r6,a
      0001A5 A3               [24]  822 	inc	dptr
      0001A6 E0               [24]  823 	movx	a,@dptr
      0001A7 FF               [12]  824 	mov	r7,a
      0001A8 EE               [12]  825 	mov	a,r6
      0001A9 2E               [12]  826 	add	a,r6
      0001AA FE               [12]  827 	mov	r6,a
      0001AB EF               [12]  828 	mov	a,r7
      0001AC 33               [12]  829 	rlc	a
      0001AD FF               [12]  830 	mov	r7,a
      0001AE EE               [12]  831 	mov	a,r6
      0001AF 24r0E            [12]  832 	add	a,#_generation
      0001B1 F5 82            [12]  833 	mov	dpl,a
      0001B3 EF               [12]  834 	mov	a,r7
      0001B4 34s0C            [12]  835 	addc	a,#(_generation >> 8)
      0001B6 F5 83            [12]  836 	mov	dph,a
      0001B8 E4               [12]  837 	clr	a
      0001B9 F0               [24]  838 	movx	@dptr,a
      0001BA A3               [24]  839 	inc	dptr
      0001BB F0               [24]  840 	movx	@dptr,a
                                    841 ;	life.c:42: for (j = 0; j < 4; j++)
      0001BC 90r0Cr16         [24]  842 	mov	dptr,#_j
      0001BF E0               [24]  843 	movx	a,@dptr
      0001C0 24 01            [12]  844 	add	a,#0x01
      0001C2 F0               [24]  845 	movx	@dptr,a
      0001C3 A3               [24]  846 	inc	dptr
      0001C4 E0               [24]  847 	movx	a,@dptr
      0001C5 34 00            [12]  848 	addc	a,#0x00
      0001C7 F0               [24]  849 	movx	@dptr,a
      0001C8 90r0Cr16         [24]  850 	mov	dptr,#_j
      0001CB E0               [24]  851 	movx	a,@dptr
      0001CC FE               [12]  852 	mov	r6,a
      0001CD A3               [24]  853 	inc	dptr
      0001CE E0               [24]  854 	movx	a,@dptr
      0001CF FF               [12]  855 	mov	r7,a
      0001D0 C3               [12]  856 	clr	c
      0001D1 EE               [12]  857 	mov	a,r6
      0001D2 94 04            [12]  858 	subb	a,#0x04
      0001D4 EF               [12]  859 	mov	a,r7
      0001D5 64 80            [12]  860 	xrl	a,#0x80
      0001D7 94 80            [12]  861 	subb	a,#0x80
      0001D9 40 C5            [24]  862 	jc	00156$
                                    863 ;	life.c:134: i1 = 0;
      0001DB 90r00r02         [24]  864 	mov	dptr,#_i1
      0001DE E4               [12]  865 	clr	a
      0001DF F0               [24]  866 	movx	@dptr,a
      0001E0 A3               [24]  867 	inc	dptr
      0001E1 F0               [24]  868 	movx	@dptr,a
                                    869 ;	life.c:135: while (!i0 && !i1) {
      0001E2                        870 00109$:
      0001E2 90r00r00         [24]  871 	mov	dptr,#_i0
      0001E5 E0               [24]  872 	movx	a,@dptr
      0001E6 F5 F0            [12]  873 	mov	b,a
      0001E8 A3               [24]  874 	inc	dptr
      0001E9 E0               [24]  875 	movx	a,@dptr
      0001EA 45 F0            [12]  876 	orl	a,b
      0001EC 60 03            [24]  877 	jz	00374$
      0001EE 02r07rC9         [24]  878 	ljmp	00111$
      0001F1                        879 00374$:
      0001F1 90r00r02         [24]  880 	mov	dptr,#_i1
      0001F4 E0               [24]  881 	movx	a,@dptr
      0001F5 F5 F0            [12]  882 	mov	b,a
      0001F7 A3               [24]  883 	inc	dptr
      0001F8 E0               [24]  884 	movx	a,@dptr
      0001F9 45 F0            [12]  885 	orl	a,b
      0001FB 60 03            [24]  886 	jz	00375$
      0001FD 02r07rC9         [24]  887 	ljmp	00111$
      000200                        888 00375$:
                                    889 ;	life.c:67: printf("\033[2J\033[m");
      000200 74r05            [12]  890 	mov	a,#___str_1
      000202 C0 E0            [24]  891 	push	acc
      000204 74s00            [12]  892 	mov	a,#(___str_1 >> 8)
      000206 C0 E0            [24]  893 	push	acc
      000208 74 80            [12]  894 	mov	a,#0x80
      00020A C0 E0            [24]  895 	push	acc
      00020C 12r00r00         [24]  896 	lcall	_printf
      00020F 15 81            [12]  897 	dec	sp
      000211 15 81            [12]  898 	dec	sp
      000213 15 81            [12]  899 	dec	sp
                                    900 ;	life.c:58: for (j = 0; j < 4; j++) {
      000215 90r0Cr16         [24]  901 	mov	dptr,#_j
      000218 E4               [12]  902 	clr	a
      000219 F0               [24]  903 	movx	@dptr,a
      00021A A3               [24]  904 	inc	dptr
      00021B F0               [24]  905 	movx	@dptr,a
      00021C                        906 00158$:
                                    907 ;	life.c:59: printf("%04x", generation[3 - j]);
      00021C 90r0Cr16         [24]  908 	mov	dptr,#_j
      00021F E0               [24]  909 	movx	a,@dptr
      000220 FE               [12]  910 	mov	r6,a
      000221 A3               [24]  911 	inc	dptr
      000222 E0               [24]  912 	movx	a,@dptr
      000223 74 03            [12]  913 	mov	a,#0x03
      000225 C3               [12]  914 	clr	c
      000226 9E               [12]  915 	subb	a,r6
      000227 FE               [12]  916 	mov	r6,a
      000228 C2 D5            [12]  917 	clr	F0
      00022A 75 F0 02         [24]  918 	mov	b,#0x02
      00022D EE               [12]  919 	mov	a,r6
      00022E 30 E7 04         [24]  920 	jnb	acc.7,00376$
      000231 B2 D5            [12]  921 	cpl	F0
      000233 F4               [12]  922 	cpl	a
      000234 04               [12]  923 	inc	a
      000235                        924 00376$:
      000235 A4               [48]  925 	mul	ab
      000236 30 D5 0A         [24]  926 	jnb	F0,00377$
      000239 F4               [12]  927 	cpl	a
      00023A 24 01            [12]  928 	add	a,#0x01
      00023C C5 F0            [12]  929 	xch	a,b
      00023E F4               [12]  930 	cpl	a
      00023F 34 00            [12]  931 	addc	a,#0x00
      000241 C5 F0            [12]  932 	xch	a,b
      000243                        933 00377$:
      000243 24r0E            [12]  934 	add	a,#_generation
      000245 F5 82            [12]  935 	mov	dpl,a
      000247 74s0C            [12]  936 	mov	a,#(_generation >> 8)
      000249 35 F0            [12]  937 	addc	a,b
      00024B F5 83            [12]  938 	mov	dph,a
      00024D E0               [24]  939 	movx	a,@dptr
      00024E FE               [12]  940 	mov	r6,a
      00024F A3               [24]  941 	inc	dptr
      000250 E0               [24]  942 	movx	a,@dptr
      000251 FF               [12]  943 	mov	r7,a
      000252 C0 06            [24]  944 	push	ar6
      000254 C0 07            [24]  945 	push	ar7
      000256 74r00            [12]  946 	mov	a,#___str_0
      000258 C0 E0            [24]  947 	push	acc
      00025A 74s00            [12]  948 	mov	a,#(___str_0 >> 8)
      00025C C0 E0            [24]  949 	push	acc
      00025E 74 80            [12]  950 	mov	a,#0x80
      000260 C0 E0            [24]  951 	push	acc
      000262 12r00r00         [24]  952 	lcall	_printf
      000265 E5 81            [12]  953 	mov	a,sp
      000267 24 FB            [12]  954 	add	a,#0xfb
      000269 F5 81            [12]  955 	mov	sp,a
                                    956 ;	life.c:60: if (j < 3) putchar(' ');
      00026B 90r0Cr16         [24]  957 	mov	dptr,#_j
      00026E E0               [24]  958 	movx	a,@dptr
      00026F FE               [12]  959 	mov	r6,a
      000270 A3               [24]  960 	inc	dptr
      000271 E0               [24]  961 	movx	a,@dptr
      000272 FF               [12]  962 	mov	r7,a
      000273 C3               [12]  963 	clr	c
      000274 EE               [12]  964 	mov	a,r6
      000275 94 03            [12]  965 	subb	a,#0x03
      000277 EF               [12]  966 	mov	a,r7
      000278 64 80            [12]  967 	xrl	a,#0x80
      00027A 94 80            [12]  968 	subb	a,#0x80
      00027C 50 06            [24]  969 	jnc	00159$
      00027E 90 00 20         [24]  970 	mov	dptr,#0x0020
      000281 12r00r00         [24]  971 	lcall	_putchar
      000284                        972 00159$:
                                    973 ;	life.c:58: for (j = 0; j < 4; j++) {
      000284 90r0Cr16         [24]  974 	mov	dptr,#_j
      000287 E0               [24]  975 	movx	a,@dptr
      000288 24 01            [12]  976 	add	a,#0x01
      00028A F0               [24]  977 	movx	@dptr,a
      00028B A3               [24]  978 	inc	dptr
      00028C E0               [24]  979 	movx	a,@dptr
      00028D 34 00            [12]  980 	addc	a,#0x00
      00028F F0               [24]  981 	movx	@dptr,a
      000290 90r0Cr16         [24]  982 	mov	dptr,#_j
      000293 E0               [24]  983 	movx	a,@dptr
      000294 FE               [12]  984 	mov	r6,a
      000295 A3               [24]  985 	inc	dptr
      000296 E0               [24]  986 	movx	a,@dptr
      000297 FF               [12]  987 	mov	r7,a
      000298 C3               [12]  988 	clr	c
      000299 EE               [12]  989 	mov	a,r6
      00029A 94 04            [12]  990 	subb	a,#0x04
      00029C EF               [12]  991 	mov	a,r7
      00029D 64 80            [12]  992 	xrl	a,#0x80
      00029F 94 80            [12]  993 	subb	a,#0x80
      0002A1 50 03            [24]  994 	jnc	00379$
      0002A3 02r02r1C         [24]  995 	ljmp	00158$
      0002A6                        996 00379$:
                                    997 ;	life.c:69: printf("\r\n");
      0002A6 74r0D            [12]  998 	mov	a,#___str_2
      0002A8 C0 E0            [24]  999 	push	acc
      0002AA 74s00            [12] 1000 	mov	a,#(___str_2 >> 8)
      0002AC C0 E0            [24] 1001 	push	acc
      0002AE 74 80            [12] 1002 	mov	a,#0x80
      0002B0 C0 E0            [24] 1003 	push	acc
      0002B2 12r00r00         [24] 1004 	lcall	_printf
      0002B5 15 81            [12] 1005 	dec	sp
      0002B7 15 81            [12] 1006 	dec	sp
      0002B9 15 81            [12] 1007 	dec	sp
                                   1008 ;	life.c:49: for (j = 0; j < 4; j++) {
      0002BB 90r0Cr16         [24] 1009 	mov	dptr,#_j
      0002BE E4               [12] 1010 	clr	a
      0002BF F0               [24] 1011 	movx	@dptr,a
      0002C0 A3               [24] 1012 	inc	dptr
      0002C1 F0               [24] 1013 	movx	@dptr,a
      0002C2                       1014 00160$:
                                   1015 ;	life.c:50: generation[j]++;
      0002C2 90r0Cr16         [24] 1016 	mov	dptr,#_j
      0002C5 E0               [24] 1017 	movx	a,@dptr
      0002C6 FE               [12] 1018 	mov	r6,a
      0002C7 A3               [24] 1019 	inc	dptr
      0002C8 E0               [24] 1020 	movx	a,@dptr
      0002C9 FF               [12] 1021 	mov	r7,a
      0002CA EE               [12] 1022 	mov	a,r6
      0002CB 2E               [12] 1023 	add	a,r6
      0002CC FE               [12] 1024 	mov	r6,a
      0002CD EF               [12] 1025 	mov	a,r7
      0002CE 33               [12] 1026 	rlc	a
      0002CF FF               [12] 1027 	mov	r7,a
      0002D0 EE               [12] 1028 	mov	a,r6
      0002D1 24r0E            [12] 1029 	add	a,#_generation
      0002D3 FE               [12] 1030 	mov	r6,a
      0002D4 EF               [12] 1031 	mov	a,r7
      0002D5 34s0C            [12] 1032 	addc	a,#(_generation >> 8)
      0002D7 FF               [12] 1033 	mov	r7,a
      0002D8 8E 82            [24] 1034 	mov	dpl,r6
      0002DA 8F 83            [24] 1035 	mov	dph,r7
      0002DC E0               [24] 1036 	movx	a,@dptr
      0002DD FC               [12] 1037 	mov	r4,a
      0002DE A3               [24] 1038 	inc	dptr
      0002DF E0               [24] 1039 	movx	a,@dptr
      0002E0 FD               [12] 1040 	mov	r5,a
      0002E1 0C               [12] 1041 	inc	r4
      0002E2 BC 00 01         [24] 1042 	cjne	r4,#0x00,00380$
      0002E5 0D               [12] 1043 	inc	r5
      0002E6                       1044 00380$:
      0002E6 8E 82            [24] 1045 	mov	dpl,r6
      0002E8 8F 83            [24] 1046 	mov	dph,r7
      0002EA EC               [12] 1047 	mov	a,r4
      0002EB F0               [24] 1048 	movx	@dptr,a
      0002EC ED               [12] 1049 	mov	a,r5
      0002ED A3               [24] 1050 	inc	dptr
      0002EE F0               [24] 1051 	movx	@dptr,a
                                   1052 ;	life.c:51: if (generation[j]) break;
      0002EF 90r0Cr16         [24] 1053 	mov	dptr,#_j
      0002F2 E0               [24] 1054 	movx	a,@dptr
      0002F3 FE               [12] 1055 	mov	r6,a
      0002F4 A3               [24] 1056 	inc	dptr
      0002F5 E0               [24] 1057 	movx	a,@dptr
      0002F6 FF               [12] 1058 	mov	r7,a
      0002F7 EE               [12] 1059 	mov	a,r6
      0002F8 2E               [12] 1060 	add	a,r6
      0002F9 FC               [12] 1061 	mov	r4,a
      0002FA EF               [12] 1062 	mov	a,r7
      0002FB 33               [12] 1063 	rlc	a
      0002FC FD               [12] 1064 	mov	r5,a
      0002FD EC               [12] 1065 	mov	a,r4
      0002FE 24r0E            [12] 1066 	add	a,#_generation
      000300 F5 82            [12] 1067 	mov	dpl,a
      000302 ED               [12] 1068 	mov	a,r5
      000303 34s0C            [12] 1069 	addc	a,#(_generation >> 8)
      000305 F5 83            [12] 1070 	mov	dph,a
      000307 E0               [24] 1071 	movx	a,@dptr
      000308 FC               [12] 1072 	mov	r4,a
      000309 A3               [24] 1073 	inc	dptr
      00030A E0               [24] 1074 	movx	a,@dptr
      00030B FD               [12] 1075 	mov	r5,a
      00030C 4C               [12] 1076 	orl	a,r4
      00030D 70 1E            [24] 1077 	jnz	00126$
                                   1078 ;	life.c:49: for (j = 0; j < 4; j++) {
      00030F 90r0Cr16         [24] 1079 	mov	dptr,#_j
      000312 74 01            [12] 1080 	mov	a,#0x01
      000314 2E               [12] 1081 	add	a,r6
      000315 F0               [24] 1082 	movx	@dptr,a
      000316 E4               [12] 1083 	clr	a
      000317 3F               [12] 1084 	addc	a,r7
      000318 A3               [24] 1085 	inc	dptr
      000319 F0               [24] 1086 	movx	@dptr,a
      00031A 90r0Cr16         [24] 1087 	mov	dptr,#_j
      00031D E0               [24] 1088 	movx	a,@dptr
      00031E FE               [12] 1089 	mov	r6,a
      00031F A3               [24] 1090 	inc	dptr
      000320 E0               [24] 1091 	movx	a,@dptr
      000321 FF               [12] 1092 	mov	r7,a
      000322 C3               [12] 1093 	clr	c
      000323 EE               [12] 1094 	mov	a,r6
      000324 94 04            [12] 1095 	subb	a,#0x04
      000326 EF               [12] 1096 	mov	a,r7
      000327 64 80            [12] 1097 	xrl	a,#0x80
      000329 94 80            [12] 1098 	subb	a,#0x80
      00032B 40 95            [24] 1099 	jc	00160$
                                   1100 ;	life.c:70: updategen();
      00032D                       1101 00126$:
                                   1102 ;	life.c:72: for (x = 0; x < W; x++) {
      00032D 90r0Cr04         [24] 1103 	mov	dptr,#_x
      000330 E4               [12] 1104 	clr	a
      000331 F0               [24] 1105 	movx	@dptr,a
      000332 A3               [24] 1106 	inc	dptr
      000333 F0               [24] 1107 	movx	@dptr,a
      000334                       1108 00164$:
                                   1109 ;	life.c:73: for (y = 0; y < H; y++)
      000334 90r0Cr06         [24] 1110 	mov	dptr,#_y
      000337 E4               [12] 1111 	clr	a
      000338 F0               [24] 1112 	movx	@dptr,a
      000339 A3               [24] 1113 	inc	dptr
      00033A F0               [24] 1114 	movx	@dptr,a
      00033B                       1115 00162$:
                                   1116 ;	life.c:74: if (u[y][x]) printf("\033[01m[]\033[m");
      00033B 90r0Cr06         [24] 1117 	mov	dptr,#_y
      00033E E0               [24] 1118 	movx	a,@dptr
      00033F FE               [12] 1119 	mov	r6,a
      000340 A3               [24] 1120 	inc	dptr
      000341 E0               [24] 1121 	movx	a,@dptr
      000342 C4               [12] 1122 	swap	a
      000343 23               [12] 1123 	rl	a
      000344 54 E0            [12] 1124 	anl	a,#0xe0
      000346 CE               [12] 1125 	xch	a,r6
      000347 C4               [12] 1126 	swap	a
      000348 23               [12] 1127 	rl	a
      000349 CE               [12] 1128 	xch	a,r6
      00034A 6E               [12] 1129 	xrl	a,r6
      00034B CE               [12] 1130 	xch	a,r6
      00034C 54 E0            [12] 1131 	anl	a,#0xe0
      00034E CE               [12] 1132 	xch	a,r6
      00034F 6E               [12] 1133 	xrl	a,r6
      000350 FF               [12] 1134 	mov	r7,a
      000351 EE               [12] 1135 	mov	a,r6
      000352 24r04            [12] 1136 	add	a,#_u
      000354 FE               [12] 1137 	mov	r6,a
      000355 EF               [12] 1138 	mov	a,r7
      000356 34s04            [12] 1139 	addc	a,#(_u >> 8)
      000358 FF               [12] 1140 	mov	r7,a
      000359 90r0Cr04         [24] 1141 	mov	dptr,#_x
      00035C E0               [24] 1142 	movx	a,@dptr
      00035D FC               [12] 1143 	mov	r4,a
      00035E A3               [24] 1144 	inc	dptr
      00035F E0               [24] 1145 	movx	a,@dptr
      000360 FD               [12] 1146 	mov	r5,a
      000361 EC               [12] 1147 	mov	a,r4
      000362 2E               [12] 1148 	add	a,r6
      000363 FE               [12] 1149 	mov	r6,a
      000364 ED               [12] 1150 	mov	a,r5
      000365 3F               [12] 1151 	addc	a,r7
      000366 FF               [12] 1152 	mov	r7,a
      000367 8E 82            [24] 1153 	mov	dpl,r6
      000369 8F 83            [24] 1154 	mov	dph,r7
      00036B E0               [24] 1155 	movx	a,@dptr
      00036C 60 17            [24] 1156 	jz	00128$
      00036E 74r10            [12] 1157 	mov	a,#___str_3
      000370 C0 E0            [24] 1158 	push	acc
      000372 74s00            [12] 1159 	mov	a,#(___str_3 >> 8)
      000374 C0 E0            [24] 1160 	push	acc
      000376 74 80            [12] 1161 	mov	a,#0x80
      000378 C0 E0            [24] 1162 	push	acc
      00037A 12r00r00         [24] 1163 	lcall	_printf
      00037D 15 81            [12] 1164 	dec	sp
      00037F 15 81            [12] 1165 	dec	sp
      000381 15 81            [12] 1166 	dec	sp
      000383 80 15            [24] 1167 	sjmp	00163$
      000385                       1168 00128$:
                                   1169 ;	life.c:75: else printf("--");
      000385 74r1B            [12] 1170 	mov	a,#___str_4
      000387 C0 E0            [24] 1171 	push	acc
      000389 74s00            [12] 1172 	mov	a,#(___str_4 >> 8)
      00038B C0 E0            [24] 1173 	push	acc
      00038D 74 80            [12] 1174 	mov	a,#0x80
      00038F C0 E0            [24] 1175 	push	acc
      000391 12r00r00         [24] 1176 	lcall	_printf
      000394 15 81            [12] 1177 	dec	sp
      000396 15 81            [12] 1178 	dec	sp
      000398 15 81            [12] 1179 	dec	sp
      00039A                       1180 00163$:
                                   1181 ;	life.c:73: for (y = 0; y < H; y++)
      00039A 90r0Cr06         [24] 1182 	mov	dptr,#_y
      00039D E0               [24] 1183 	movx	a,@dptr
      00039E 24 01            [12] 1184 	add	a,#0x01
      0003A0 F0               [24] 1185 	movx	@dptr,a
      0003A1 A3               [24] 1186 	inc	dptr
      0003A2 E0               [24] 1187 	movx	a,@dptr
      0003A3 34 00            [12] 1188 	addc	a,#0x00
      0003A5 F0               [24] 1189 	movx	@dptr,a
      0003A6 90r0Cr06         [24] 1190 	mov	dptr,#_y
      0003A9 E0               [24] 1191 	movx	a,@dptr
      0003AA FE               [12] 1192 	mov	r6,a
      0003AB A3               [24] 1193 	inc	dptr
      0003AC E0               [24] 1194 	movx	a,@dptr
      0003AD FF               [12] 1195 	mov	r7,a
      0003AE C3               [12] 1196 	clr	c
      0003AF EE               [12] 1197 	mov	a,r6
      0003B0 94 20            [12] 1198 	subb	a,#0x20
      0003B2 EF               [12] 1199 	mov	a,r7
      0003B3 64 80            [12] 1200 	xrl	a,#0x80
      0003B5 94 80            [12] 1201 	subb	a,#0x80
      0003B7 50 03            [24] 1202 	jnc	00384$
      0003B9 02r03r3B         [24] 1203 	ljmp	00162$
      0003BC                       1204 00384$:
                                   1205 ;	life.c:76: printf("\r\n");
      0003BC 74r0D            [12] 1206 	mov	a,#___str_2
      0003BE C0 E0            [24] 1207 	push	acc
      0003C0 74s00            [12] 1208 	mov	a,#(___str_2 >> 8)
      0003C2 C0 E0            [24] 1209 	push	acc
      0003C4 74 80            [12] 1210 	mov	a,#0x80
      0003C6 C0 E0            [24] 1211 	push	acc
      0003C8 12r00r00         [24] 1212 	lcall	_printf
      0003CB 15 81            [12] 1213 	dec	sp
      0003CD 15 81            [12] 1214 	dec	sp
      0003CF 15 81            [12] 1215 	dec	sp
                                   1216 ;	life.c:72: for (x = 0; x < W; x++) {
      0003D1 90r0Cr04         [24] 1217 	mov	dptr,#_x
      0003D4 E0               [24] 1218 	movx	a,@dptr
      0003D5 24 01            [12] 1219 	add	a,#0x01
      0003D7 F0               [24] 1220 	movx	@dptr,a
      0003D8 A3               [24] 1221 	inc	dptr
      0003D9 E0               [24] 1222 	movx	a,@dptr
      0003DA 34 00            [12] 1223 	addc	a,#0x00
      0003DC F0               [24] 1224 	movx	@dptr,a
      0003DD 90r0Cr04         [24] 1225 	mov	dptr,#_x
      0003E0 E0               [24] 1226 	movx	a,@dptr
      0003E1 FE               [12] 1227 	mov	r6,a
      0003E2 A3               [24] 1228 	inc	dptr
      0003E3 E0               [24] 1229 	movx	a,@dptr
      0003E4 FF               [12] 1230 	mov	r7,a
      0003E5 C3               [12] 1231 	clr	c
      0003E6 EE               [12] 1232 	mov	a,r6
      0003E7 94 20            [12] 1233 	subb	a,#0x20
      0003E9 EF               [12] 1234 	mov	a,r7
      0003EA 64 80            [12] 1235 	xrl	a,#0x80
      0003EC 94 80            [12] 1236 	subb	a,#0x80
      0003EE 50 03            [24] 1237 	jnc	00385$
      0003F0 02r03r34         [24] 1238 	ljmp	00164$
      0003F3                       1239 00385$:
                                   1240 ;	life.c:83: fixed = 1;
      0003F3 90r0Cr18         [24] 1241 	mov	dptr,#_fixed
      0003F6 74 01            [12] 1242 	mov	a,#0x01
      0003F8 F0               [24] 1243 	movx	@dptr,a
      0003F9 E4               [12] 1244 	clr	a
      0003FA A3               [24] 1245 	inc	dptr
      0003FB F0               [24] 1246 	movx	@dptr,a
                                   1247 ;	life.c:84: cycle2 = 1;
      0003FC 90r0Cr1A         [24] 1248 	mov	dptr,#_cycle2
      0003FF 04               [12] 1249 	inc	a
      000400 F0               [24] 1250 	movx	@dptr,a
      000401 E4               [12] 1251 	clr	a
      000402 A3               [24] 1252 	inc	dptr
      000403 F0               [24] 1253 	movx	@dptr,a
                                   1254 ;	life.c:86: for (y = 0; y < H; y++) {
      000404 90r0Cr06         [24] 1255 	mov	dptr,#_y
      000407 F0               [24] 1256 	movx	@dptr,a
      000408 A3               [24] 1257 	inc	dptr
      000409 F0               [24] 1258 	movx	@dptr,a
      00040A                       1259 00174$:
                                   1260 ;	life.c:87: for (x = 0; x < W; x++) {
      00040A 90r0Cr04         [24] 1261 	mov	dptr,#_x
      00040D E4               [12] 1262 	clr	a
      00040E F0               [24] 1263 	movx	@dptr,a
      00040F A3               [24] 1264 	inc	dptr
      000410 F0               [24] 1265 	movx	@dptr,a
      000411                       1266 00172$:
                                   1267 ;	life.c:88: n = 0;
      000411 90r0Cr0C         [24] 1268 	mov	dptr,#_n
      000414 E4               [12] 1269 	clr	a
      000415 F0               [24] 1270 	movx	@dptr,a
      000416 A3               [24] 1271 	inc	dptr
      000417 F0               [24] 1272 	movx	@dptr,a
                                   1273 ;	life.c:89: for (y1 = y - 1; y1 <= y + 1; y1++)
      000418 90r0Cr06         [24] 1274 	mov	dptr,#_y
      00041B E0               [24] 1275 	movx	a,@dptr
      00041C FE               [12] 1276 	mov	r6,a
      00041D A3               [24] 1277 	inc	dptr
      00041E E0               [24] 1278 	movx	a,@dptr
      00041F FF               [12] 1279 	mov	r7,a
      000420 1E               [12] 1280 	dec	r6
      000421 BE FF 01         [24] 1281 	cjne	r6,#0xff,00386$
      000424 1F               [12] 1282 	dec	r7
      000425                       1283 00386$:
      000425 90r0Cr0A         [24] 1284 	mov	dptr,#_y1
      000428 EE               [12] 1285 	mov	a,r6
      000429 F0               [24] 1286 	movx	@dptr,a
      00042A EF               [12] 1287 	mov	a,r7
      00042B A3               [24] 1288 	inc	dptr
      00042C F0               [24] 1289 	movx	@dptr,a
      00042D                       1290 00170$:
      00042D 90r0Cr06         [24] 1291 	mov	dptr,#_y
      000430 E0               [24] 1292 	movx	a,@dptr
      000431 FE               [12] 1293 	mov	r6,a
      000432 A3               [24] 1294 	inc	dptr
      000433 E0               [24] 1295 	movx	a,@dptr
      000434 FF               [12] 1296 	mov	r7,a
      000435 74 01            [12] 1297 	mov	a,#0x01
      000437 2E               [12] 1298 	add	a,r6
      000438 FC               [12] 1299 	mov	r4,a
      000439 E4               [12] 1300 	clr	a
      00043A 3F               [12] 1301 	addc	a,r7
      00043B FD               [12] 1302 	mov	r5,a
      00043C 90r0Cr0A         [24] 1303 	mov	dptr,#_y1
      00043F E0               [24] 1304 	movx	a,@dptr
      000440 FA               [12] 1305 	mov	r2,a
      000441 A3               [24] 1306 	inc	dptr
      000442 E0               [24] 1307 	movx	a,@dptr
      000443 FB               [12] 1308 	mov	r3,a
      000444 C3               [12] 1309 	clr	c
      000445 EC               [12] 1310 	mov	a,r4
      000446 9A               [12] 1311 	subb	a,r2
      000447 ED               [12] 1312 	mov	a,r5
      000448 64 80            [12] 1313 	xrl	a,#0x80
      00044A 8B F0            [24] 1314 	mov	b,r3
      00044C 63 F0 80         [24] 1315 	xrl	b,#0x80
      00044F 95 F0            [12] 1316 	subb	a,b
      000451 50 03            [24] 1317 	jnc	00387$
      000453 02r05r33         [24] 1318 	ljmp	00136$
      000456                       1319 00387$:
                                   1320 ;	life.c:90: for (x1 = x - 1; x1 <= x + 1; x1++)
      000456 90r0Cr04         [24] 1321 	mov	dptr,#_x
      000459 E0               [24] 1322 	movx	a,@dptr
      00045A FC               [12] 1323 	mov	r4,a
      00045B A3               [24] 1324 	inc	dptr
      00045C E0               [24] 1325 	movx	a,@dptr
      00045D FD               [12] 1326 	mov	r5,a
      00045E 1C               [12] 1327 	dec	r4
      00045F BC FF 01         [24] 1328 	cjne	r4,#0xff,00388$
      000462 1D               [12] 1329 	dec	r5
      000463                       1330 00388$:
      000463 90r0Cr08         [24] 1331 	mov	dptr,#_x1
      000466 EC               [12] 1332 	mov	a,r4
      000467 F0               [24] 1333 	movx	@dptr,a
      000468 ED               [12] 1334 	mov	a,r5
      000469 A3               [24] 1335 	inc	dptr
      00046A F0               [24] 1336 	movx	@dptr,a
      00046B                       1337 00167$:
      00046B 90r0Cr04         [24] 1338 	mov	dptr,#_x
      00046E E0               [24] 1339 	movx	a,@dptr
      00046F FC               [12] 1340 	mov	r4,a
      000470 A3               [24] 1341 	inc	dptr
      000471 E0               [24] 1342 	movx	a,@dptr
      000472 FD               [12] 1343 	mov	r5,a
      000473 0C               [12] 1344 	inc	r4
      000474 BC 00 01         [24] 1345 	cjne	r4,#0x00,00389$
      000477 0D               [12] 1346 	inc	r5
      000478                       1347 00389$:
      000478 90r0Cr08         [24] 1348 	mov	dptr,#_x1
      00047B E0               [24] 1349 	movx	a,@dptr
      00047C FA               [12] 1350 	mov	r2,a
      00047D A3               [24] 1351 	inc	dptr
      00047E E0               [24] 1352 	movx	a,@dptr
      00047F FB               [12] 1353 	mov	r3,a
      000480 C3               [12] 1354 	clr	c
      000481 EC               [12] 1355 	mov	a,r4
      000482 9A               [12] 1356 	subb	a,r2
      000483 ED               [12] 1357 	mov	a,r5
      000484 64 80            [12] 1358 	xrl	a,#0x80
      000486 8B F0            [24] 1359 	mov	b,r3
      000488 63 F0 80         [24] 1360 	xrl	b,#0x80
      00048B 95 F0            [12] 1361 	subb	a,b
      00048D 50 03            [24] 1362 	jnc	00390$
      00048F 02r05r24         [24] 1363 	ljmp	00171$
      000492                       1364 00390$:
                                   1365 ;	life.c:91: if (u[(y1 + H) % H][(x1 + W) % W])
      000492 90r0Cr0A         [24] 1366 	mov	dptr,#_y1
      000495 E0               [24] 1367 	movx	a,@dptr
      000496 FC               [12] 1368 	mov	r4,a
      000497 A3               [24] 1369 	inc	dptr
      000498 E0               [24] 1370 	movx	a,@dptr
      000499 FD               [12] 1371 	mov	r5,a
      00049A 74 20            [12] 1372 	mov	a,#0x20
      00049C 2C               [12] 1373 	add	a,r4
      00049D FC               [12] 1374 	mov	r4,a
      00049E E4               [12] 1375 	clr	a
      00049F 3D               [12] 1376 	addc	a,r5
      0004A0 FD               [12] 1377 	mov	r5,a
      0004A1 C0 03            [24] 1378 	push	ar3
      0004A3 C0 02            [24] 1379 	push	ar2
      0004A5 74 20            [12] 1380 	mov	a,#0x20
      0004A7 C0 E0            [24] 1381 	push	acc
      0004A9 E4               [12] 1382 	clr	a
      0004AA C0 E0            [24] 1383 	push	acc
      0004AC 8C 82            [24] 1384 	mov	dpl,r4
      0004AE 8D 83            [24] 1385 	mov	dph,r5
      0004B0 12r00r00         [24] 1386 	lcall	__modsint
      0004B3 AC 82            [24] 1387 	mov	r4,dpl
      0004B5 AD 83            [24] 1388 	mov	r5,dph
      0004B7 15 81            [12] 1389 	dec	sp
      0004B9 15 81            [12] 1390 	dec	sp
      0004BB D0 02            [24] 1391 	pop	ar2
      0004BD D0 03            [24] 1392 	pop	ar3
      0004BF ED               [12] 1393 	mov	a,r5
      0004C0 C4               [12] 1394 	swap	a
      0004C1 23               [12] 1395 	rl	a
      0004C2 54 E0            [12] 1396 	anl	a,#0xe0
      0004C4 CC               [12] 1397 	xch	a,r4
      0004C5 C4               [12] 1398 	swap	a
      0004C6 23               [12] 1399 	rl	a
      0004C7 CC               [12] 1400 	xch	a,r4
      0004C8 6C               [12] 1401 	xrl	a,r4
      0004C9 CC               [12] 1402 	xch	a,r4
      0004CA 54 E0            [12] 1403 	anl	a,#0xe0
      0004CC CC               [12] 1404 	xch	a,r4
      0004CD 6C               [12] 1405 	xrl	a,r4
      0004CE FD               [12] 1406 	mov	r5,a
      0004CF EC               [12] 1407 	mov	a,r4
      0004D0 24r04            [12] 1408 	add	a,#_u
      0004D2 FC               [12] 1409 	mov	r4,a
      0004D3 ED               [12] 1410 	mov	a,r5
      0004D4 34s04            [12] 1411 	addc	a,#(_u >> 8)
      0004D6 FD               [12] 1412 	mov	r5,a
      0004D7 74 20            [12] 1413 	mov	a,#0x20
      0004D9 2A               [12] 1414 	add	a,r2
      0004DA FA               [12] 1415 	mov	r2,a
      0004DB E4               [12] 1416 	clr	a
      0004DC 3B               [12] 1417 	addc	a,r3
      0004DD FB               [12] 1418 	mov	r3,a
      0004DE C0 05            [24] 1419 	push	ar5
      0004E0 C0 04            [24] 1420 	push	ar4
      0004E2 74 20            [12] 1421 	mov	a,#0x20
      0004E4 C0 E0            [24] 1422 	push	acc
      0004E6 E4               [12] 1423 	clr	a
      0004E7 C0 E0            [24] 1424 	push	acc
      0004E9 8A 82            [24] 1425 	mov	dpl,r2
      0004EB 8B 83            [24] 1426 	mov	dph,r3
      0004ED 12r00r00         [24] 1427 	lcall	__modsint
      0004F0 AA 82            [24] 1428 	mov	r2,dpl
      0004F2 AB 83            [24] 1429 	mov	r3,dph
      0004F4 15 81            [12] 1430 	dec	sp
      0004F6 15 81            [12] 1431 	dec	sp
      0004F8 D0 04            [24] 1432 	pop	ar4
      0004FA D0 05            [24] 1433 	pop	ar5
      0004FC EA               [12] 1434 	mov	a,r2
      0004FD 2C               [12] 1435 	add	a,r4
      0004FE FC               [12] 1436 	mov	r4,a
      0004FF EB               [12] 1437 	mov	a,r3
      000500 3D               [12] 1438 	addc	a,r5
      000501 FD               [12] 1439 	mov	r5,a
      000502 8C 82            [24] 1440 	mov	dpl,r4
      000504 8D 83            [24] 1441 	mov	dph,r5
      000506 E0               [24] 1442 	movx	a,@dptr
      000507 60 0C            [24] 1443 	jz	00168$
                                   1444 ;	life.c:92: n++;
      000509 90r0Cr0C         [24] 1445 	mov	dptr,#_n
      00050C E0               [24] 1446 	movx	a,@dptr
      00050D 24 01            [12] 1447 	add	a,#0x01
      00050F F0               [24] 1448 	movx	@dptr,a
      000510 A3               [24] 1449 	inc	dptr
      000511 E0               [24] 1450 	movx	a,@dptr
      000512 34 00            [12] 1451 	addc	a,#0x00
      000514 F0               [24] 1452 	movx	@dptr,a
      000515                       1453 00168$:
                                   1454 ;	life.c:90: for (x1 = x - 1; x1 <= x + 1; x1++)
      000515 90r0Cr08         [24] 1455 	mov	dptr,#_x1
      000518 E0               [24] 1456 	movx	a,@dptr
      000519 24 01            [12] 1457 	add	a,#0x01
      00051B F0               [24] 1458 	movx	@dptr,a
      00051C A3               [24] 1459 	inc	dptr
      00051D E0               [24] 1460 	movx	a,@dptr
      00051E 34 00            [12] 1461 	addc	a,#0x00
      000520 F0               [24] 1462 	movx	@dptr,a
      000521 02r04r6B         [24] 1463 	ljmp	00167$
      000524                       1464 00171$:
                                   1465 ;	life.c:89: for (y1 = y - 1; y1 <= y + 1; y1++)
      000524 90r0Cr0A         [24] 1466 	mov	dptr,#_y1
      000527 E0               [24] 1467 	movx	a,@dptr
      000528 24 01            [12] 1468 	add	a,#0x01
      00052A F0               [24] 1469 	movx	@dptr,a
      00052B A3               [24] 1470 	inc	dptr
      00052C E0               [24] 1471 	movx	a,@dptr
      00052D 34 00            [12] 1472 	addc	a,#0x00
      00052F F0               [24] 1473 	movx	@dptr,a
      000530 02r04r2D         [24] 1474 	ljmp	00170$
      000533                       1475 00136$:
                                   1476 ;	life.c:94: if (u[y][x]) n--;
      000533 EF               [12] 1477 	mov	a,r7
      000534 C4               [12] 1478 	swap	a
      000535 23               [12] 1479 	rl	a
      000536 54 E0            [12] 1480 	anl	a,#0xe0
      000538 CE               [12] 1481 	xch	a,r6
      000539 C4               [12] 1482 	swap	a
      00053A 23               [12] 1483 	rl	a
      00053B CE               [12] 1484 	xch	a,r6
      00053C 6E               [12] 1485 	xrl	a,r6
      00053D CE               [12] 1486 	xch	a,r6
      00053E 54 E0            [12] 1487 	anl	a,#0xe0
      000540 CE               [12] 1488 	xch	a,r6
      000541 6E               [12] 1489 	xrl	a,r6
      000542 FF               [12] 1490 	mov	r7,a
      000543 EE               [12] 1491 	mov	a,r6
      000544 24r04            [12] 1492 	add	a,#_u
      000546 FE               [12] 1493 	mov	r6,a
      000547 EF               [12] 1494 	mov	a,r7
      000548 34s04            [12] 1495 	addc	a,#(_u >> 8)
      00054A FF               [12] 1496 	mov	r7,a
      00054B 90r0Cr04         [24] 1497 	mov	dptr,#_x
      00054E E0               [24] 1498 	movx	a,@dptr
      00054F FC               [12] 1499 	mov	r4,a
      000550 A3               [24] 1500 	inc	dptr
      000551 E0               [24] 1501 	movx	a,@dptr
      000552 FD               [12] 1502 	mov	r5,a
      000553 EC               [12] 1503 	mov	a,r4
      000554 2E               [12] 1504 	add	a,r6
      000555 FE               [12] 1505 	mov	r6,a
      000556 ED               [12] 1506 	mov	a,r5
      000557 3F               [12] 1507 	addc	a,r7
      000558 FF               [12] 1508 	mov	r7,a
      000559 8E 82            [24] 1509 	mov	dpl,r6
      00055B 8F 83            [24] 1510 	mov	dph,r7
      00055D E0               [24] 1511 	movx	a,@dptr
      00055E 60 14            [24] 1512 	jz	00138$
      000560 90r0Cr0C         [24] 1513 	mov	dptr,#_n
      000563 E0               [24] 1514 	movx	a,@dptr
      000564 24 FF            [12] 1515 	add	a,#0xff
      000566 FE               [12] 1516 	mov	r6,a
      000567 A3               [24] 1517 	inc	dptr
      000568 E0               [24] 1518 	movx	a,@dptr
      000569 34 FF            [12] 1519 	addc	a,#0xff
      00056B FF               [12] 1520 	mov	r7,a
      00056C 90r0Cr0C         [24] 1521 	mov	dptr,#_n
      00056F EE               [12] 1522 	mov	a,r6
      000570 F0               [24] 1523 	movx	@dptr,a
      000571 EF               [12] 1524 	mov	a,r7
      000572 A3               [24] 1525 	inc	dptr
      000573 F0               [24] 1526 	movx	@dptr,a
      000574                       1527 00138$:
                                   1528 ;	life.c:95: nu[y][x] = (n == 3 || (n == 2 && u[y][x]));
      000574 90r0Cr06         [24] 1529 	mov	dptr,#_y
      000577 E0               [24] 1530 	movx	a,@dptr
      000578 FE               [12] 1531 	mov	r6,a
      000579 A3               [24] 1532 	inc	dptr
      00057A E0               [24] 1533 	movx	a,@dptr
      00057B C4               [12] 1534 	swap	a
      00057C 23               [12] 1535 	rl	a
      00057D 54 E0            [12] 1536 	anl	a,#0xe0
      00057F CE               [12] 1537 	xch	a,r6
      000580 C4               [12] 1538 	swap	a
      000581 23               [12] 1539 	rl	a
      000582 CE               [12] 1540 	xch	a,r6
      000583 6E               [12] 1541 	xrl	a,r6
      000584 CE               [12] 1542 	xch	a,r6
      000585 54 E0            [12] 1543 	anl	a,#0xe0
      000587 CE               [12] 1544 	xch	a,r6
      000588 6E               [12] 1545 	xrl	a,r6
      000589 FF               [12] 1546 	mov	r7,a
      00058A EE               [12] 1547 	mov	a,r6
      00058B 24r04            [12] 1548 	add	a,#_nu
      00058D FC               [12] 1549 	mov	r4,a
      00058E EF               [12] 1550 	mov	a,r7
      00058F 34s08            [12] 1551 	addc	a,#(_nu >> 8)
      000591 FD               [12] 1552 	mov	r5,a
      000592 90r0Cr04         [24] 1553 	mov	dptr,#_x
      000595 E0               [24] 1554 	movx	a,@dptr
      000596 FA               [12] 1555 	mov	r2,a
      000597 A3               [24] 1556 	inc	dptr
      000598 E0               [24] 1557 	movx	a,@dptr
      000599 FB               [12] 1558 	mov	r3,a
      00059A EA               [12] 1559 	mov	a,r2
      00059B 2C               [12] 1560 	add	a,r4
      00059C FC               [12] 1561 	mov	r4,a
      00059D EB               [12] 1562 	mov	a,r3
      00059E 3D               [12] 1563 	addc	a,r5
      00059F FD               [12] 1564 	mov	r5,a
      0005A0 90r0Cr0C         [24] 1565 	mov	dptr,#_n
      0005A3 E0               [24] 1566 	movx	a,@dptr
      0005A4 F8               [12] 1567 	mov	r0,a
      0005A5 A3               [24] 1568 	inc	dptr
      0005A6 E0               [24] 1569 	movx	a,@dptr
      0005A7 F9               [12] 1570 	mov	r1,a
      0005A8 B8 03 05         [24] 1571 	cjne	r0,#0x03,00393$
      0005AB B9 00 02         [24] 1572 	cjne	r1,#0x00,00393$
      0005AE 80 1F            [24] 1573 	sjmp	00183$
      0005B0                       1574 00393$:
      0005B0 B8 02 18         [24] 1575 	cjne	r0,#0x02,00182$
      0005B3 B9 00 15         [24] 1576 	cjne	r1,#0x00,00182$
      0005B6 EE               [12] 1577 	mov	a,r6
      0005B7 24r04            [12] 1578 	add	a,#_u
      0005B9 FE               [12] 1579 	mov	r6,a
      0005BA EF               [12] 1580 	mov	a,r7
      0005BB 34s04            [12] 1581 	addc	a,#(_u >> 8)
      0005BD FF               [12] 1582 	mov	r7,a
      0005BE EA               [12] 1583 	mov	a,r2
      0005BF 2E               [12] 1584 	add	a,r6
      0005C0 FA               [12] 1585 	mov	r2,a
      0005C1 EB               [12] 1586 	mov	a,r3
      0005C2 3F               [12] 1587 	addc	a,r7
      0005C3 FB               [12] 1588 	mov	r3,a
      0005C4 8A 82            [24] 1589 	mov	dpl,r2
      0005C6 8B 83            [24] 1590 	mov	dph,r3
      0005C8 E0               [24] 1591 	movx	a,@dptr
      0005C9 70 04            [24] 1592 	jnz	00183$
      0005CB                       1593 00182$:
                                   1594 ;	assignBit
      0005CB C2*00            [12] 1595 	clr	b0
      0005CD 80 02            [24] 1596 	sjmp	00184$
      0005CF                       1597 00183$:
                                   1598 ;	assignBit
      0005CF D2*00            [12] 1599 	setb	b0
      0005D1                       1600 00184$:
      0005D1 A2*00            [12] 1601 	mov	c,b0
      0005D3 E4               [12] 1602 	clr	a
      0005D4 33               [12] 1603 	rlc	a
      0005D5 8C 82            [24] 1604 	mov	dpl,r4
      0005D7 8D 83            [24] 1605 	mov	dph,r5
      0005D9 F0               [24] 1606 	movx	@dptr,a
                                   1607 ;	life.c:87: for (x = 0; x < W; x++) {
      0005DA 90r0Cr04         [24] 1608 	mov	dptr,#_x
      0005DD E0               [24] 1609 	movx	a,@dptr
      0005DE 24 01            [12] 1610 	add	a,#0x01
      0005E0 F0               [24] 1611 	movx	@dptr,a
      0005E1 A3               [24] 1612 	inc	dptr
      0005E2 E0               [24] 1613 	movx	a,@dptr
      0005E3 34 00            [12] 1614 	addc	a,#0x00
      0005E5 F0               [24] 1615 	movx	@dptr,a
      0005E6 90r0Cr04         [24] 1616 	mov	dptr,#_x
      0005E9 E0               [24] 1617 	movx	a,@dptr
      0005EA FE               [12] 1618 	mov	r6,a
      0005EB A3               [24] 1619 	inc	dptr
      0005EC E0               [24] 1620 	movx	a,@dptr
      0005ED FF               [12] 1621 	mov	r7,a
      0005EE C3               [12] 1622 	clr	c
      0005EF EE               [12] 1623 	mov	a,r6
      0005F0 94 20            [12] 1624 	subb	a,#0x20
      0005F2 EF               [12] 1625 	mov	a,r7
      0005F3 64 80            [12] 1626 	xrl	a,#0x80
      0005F5 94 80            [12] 1627 	subb	a,#0x80
      0005F7 50 03            [24] 1628 	jnc	00397$
      0005F9 02r04r11         [24] 1629 	ljmp	00172$
      0005FC                       1630 00397$:
                                   1631 ;	life.c:86: for (y = 0; y < H; y++) {
      0005FC 90r0Cr06         [24] 1632 	mov	dptr,#_y
      0005FF E0               [24] 1633 	movx	a,@dptr
      000600 24 01            [12] 1634 	add	a,#0x01
      000602 F0               [24] 1635 	movx	@dptr,a
      000603 A3               [24] 1636 	inc	dptr
      000604 E0               [24] 1637 	movx	a,@dptr
      000605 34 00            [12] 1638 	addc	a,#0x00
      000607 F0               [24] 1639 	movx	@dptr,a
      000608 90r0Cr06         [24] 1640 	mov	dptr,#_y
      00060B E0               [24] 1641 	movx	a,@dptr
      00060C FE               [12] 1642 	mov	r6,a
      00060D A3               [24] 1643 	inc	dptr
      00060E E0               [24] 1644 	movx	a,@dptr
      00060F FF               [12] 1645 	mov	r7,a
      000610 C3               [12] 1646 	clr	c
      000611 EE               [12] 1647 	mov	a,r6
      000612 94 20            [12] 1648 	subb	a,#0x20
      000614 EF               [12] 1649 	mov	a,r7
      000615 64 80            [12] 1650 	xrl	a,#0x80
      000617 94 80            [12] 1651 	subb	a,#0x80
      000619 50 03            [24] 1652 	jnc	00398$
      00061B 02r04r0A         [24] 1653 	ljmp	00174$
      00061E                       1654 00398$:
                                   1655 ;	life.c:99: for (y = 0; y < H; y++)
      00061E 90r0Cr06         [24] 1656 	mov	dptr,#_y
      000621 E4               [12] 1657 	clr	a
      000622 F0               [24] 1658 	movx	@dptr,a
      000623 A3               [24] 1659 	inc	dptr
      000624 F0               [24] 1660 	movx	@dptr,a
      000625                       1661 00178$:
                                   1662 ;	life.c:100: for (x = 0; x < W; x++) {
      000625 90r0Cr04         [24] 1663 	mov	dptr,#_x
      000628 E4               [12] 1664 	clr	a
      000629 F0               [24] 1665 	movx	@dptr,a
      00062A A3               [24] 1666 	inc	dptr
      00062B F0               [24] 1667 	movx	@dptr,a
      00062C                       1668 00176$:
                                   1669 ;	life.c:101: if (pu[y][x] != nu[y][x]) cycle2 = 0;
      00062C 90r0Cr06         [24] 1670 	mov	dptr,#_y
      00062F E0               [24] 1671 	movx	a,@dptr
      000630 FE               [12] 1672 	mov	r6,a
      000631 A3               [24] 1673 	inc	dptr
      000632 E0               [24] 1674 	movx	a,@dptr
      000633 C4               [12] 1675 	swap	a
      000634 23               [12] 1676 	rl	a
      000635 54 E0            [12] 1677 	anl	a,#0xe0
      000637 CE               [12] 1678 	xch	a,r6
      000638 C4               [12] 1679 	swap	a
      000639 23               [12] 1680 	rl	a
      00063A CE               [12] 1681 	xch	a,r6
      00063B 6E               [12] 1682 	xrl	a,r6
      00063C CE               [12] 1683 	xch	a,r6
      00063D 54 E0            [12] 1684 	anl	a,#0xe0
      00063F CE               [12] 1685 	xch	a,r6
      000640 6E               [12] 1686 	xrl	a,r6
      000641 FF               [12] 1687 	mov	r7,a
      000642 EE               [12] 1688 	mov	a,r6
      000643 24r04            [12] 1689 	add	a,#_pu
      000645 FC               [12] 1690 	mov	r4,a
      000646 EF               [12] 1691 	mov	a,r7
      000647 34s00            [12] 1692 	addc	a,#(_pu >> 8)
      000649 FD               [12] 1693 	mov	r5,a
      00064A 90r0Cr04         [24] 1694 	mov	dptr,#_x
      00064D E0               [24] 1695 	movx	a,@dptr
      00064E FA               [12] 1696 	mov	r2,a
      00064F A3               [24] 1697 	inc	dptr
      000650 E0               [24] 1698 	movx	a,@dptr
      000651 FB               [12] 1699 	mov	r3,a
      000652 EA               [12] 1700 	mov	a,r2
      000653 2C               [12] 1701 	add	a,r4
      000654 F5 82            [12] 1702 	mov	dpl,a
      000656 EB               [12] 1703 	mov	a,r3
      000657 3D               [12] 1704 	addc	a,r5
      000658 F5 83            [12] 1705 	mov	dph,a
      00065A EE               [12] 1706 	mov	a,r6
      00065B 24r04            [12] 1707 	add	a,#_nu
      00065D FE               [12] 1708 	mov	r6,a
      00065E EF               [12] 1709 	mov	a,r7
      00065F 34s08            [12] 1710 	addc	a,#(_nu >> 8)
      000661 FF               [12] 1711 	mov	r7,a
      000662 EA               [12] 1712 	mov	a,r2
      000663 2E               [12] 1713 	add	a,r6
      000664 FA               [12] 1714 	mov	r2,a
      000665 EB               [12] 1715 	mov	a,r3
      000666 3F               [12] 1716 	addc	a,r7
      000667 FB               [12] 1717 	mov	r3,a
      000668 E0               [24] 1718 	movx	a,@dptr
      000669 FF               [12] 1719 	mov	r7,a
      00066A 8A 82            [24] 1720 	mov	dpl,r2
      00066C 8B 83            [24] 1721 	mov	dph,r3
      00066E E0               [24] 1722 	movx	a,@dptr
      00066F FA               [12] 1723 	mov	r2,a
      000670 EF               [12] 1724 	mov	a,r7
      000671 B5 02 02         [24] 1725 	cjne	a,ar2,00399$
      000674 80 07            [24] 1726 	sjmp	00142$
      000676                       1727 00399$:
      000676 90r0Cr1A         [24] 1728 	mov	dptr,#_cycle2
      000679 E4               [12] 1729 	clr	a
      00067A F0               [24] 1730 	movx	@dptr,a
      00067B A3               [24] 1731 	inc	dptr
      00067C F0               [24] 1732 	movx	@dptr,a
      00067D                       1733 00142$:
                                   1734 ;	life.c:102: if (u[y][x] != nu[y][x]) fixed = 0;
      00067D 90r0Cr06         [24] 1735 	mov	dptr,#_y
      000680 E0               [24] 1736 	movx	a,@dptr
      000681 FE               [12] 1737 	mov	r6,a
      000682 A3               [24] 1738 	inc	dptr
      000683 E0               [24] 1739 	movx	a,@dptr
      000684 C4               [12] 1740 	swap	a
      000685 23               [12] 1741 	rl	a
      000686 54 E0            [12] 1742 	anl	a,#0xe0
      000688 CE               [12] 1743 	xch	a,r6
      000689 C4               [12] 1744 	swap	a
      00068A 23               [12] 1745 	rl	a
      00068B CE               [12] 1746 	xch	a,r6
      00068C 6E               [12] 1747 	xrl	a,r6
      00068D CE               [12] 1748 	xch	a,r6
      00068E 54 E0            [12] 1749 	anl	a,#0xe0
      000690 CE               [12] 1750 	xch	a,r6
      000691 6E               [12] 1751 	xrl	a,r6
      000692 FF               [12] 1752 	mov	r7,a
      000693 EE               [12] 1753 	mov	a,r6
      000694 24r04            [12] 1754 	add	a,#_u
      000696 FC               [12] 1755 	mov	r4,a
      000697 EF               [12] 1756 	mov	a,r7
      000698 34s04            [12] 1757 	addc	a,#(_u >> 8)
      00069A FD               [12] 1758 	mov	r5,a
      00069B 90r0Cr04         [24] 1759 	mov	dptr,#_x
      00069E E0               [24] 1760 	movx	a,@dptr
      00069F FA               [12] 1761 	mov	r2,a
      0006A0 A3               [24] 1762 	inc	dptr
      0006A1 E0               [24] 1763 	movx	a,@dptr
      0006A2 FB               [12] 1764 	mov	r3,a
      0006A3 EA               [12] 1765 	mov	a,r2
      0006A4 2C               [12] 1766 	add	a,r4
      0006A5 F5 82            [12] 1767 	mov	dpl,a
      0006A7 EB               [12] 1768 	mov	a,r3
      0006A8 3D               [12] 1769 	addc	a,r5
      0006A9 F5 83            [12] 1770 	mov	dph,a
      0006AB EE               [12] 1771 	mov	a,r6
      0006AC 24r04            [12] 1772 	add	a,#_nu
      0006AE FE               [12] 1773 	mov	r6,a
      0006AF EF               [12] 1774 	mov	a,r7
      0006B0 34s08            [12] 1775 	addc	a,#(_nu >> 8)
      0006B2 FF               [12] 1776 	mov	r7,a
      0006B3 EA               [12] 1777 	mov	a,r2
      0006B4 2E               [12] 1778 	add	a,r6
      0006B5 FA               [12] 1779 	mov	r2,a
      0006B6 EB               [12] 1780 	mov	a,r3
      0006B7 3F               [12] 1781 	addc	a,r7
      0006B8 FB               [12] 1782 	mov	r3,a
      0006B9 E0               [24] 1783 	movx	a,@dptr
      0006BA FF               [12] 1784 	mov	r7,a
      0006BB 8A 82            [24] 1785 	mov	dpl,r2
      0006BD 8B 83            [24] 1786 	mov	dph,r3
      0006BF E0               [24] 1787 	movx	a,@dptr
      0006C0 FA               [12] 1788 	mov	r2,a
      0006C1 EF               [12] 1789 	mov	a,r7
      0006C2 B5 02 02         [24] 1790 	cjne	a,ar2,00400$
      0006C5 80 07            [24] 1791 	sjmp	00144$
      0006C7                       1792 00400$:
      0006C7 90r0Cr18         [24] 1793 	mov	dptr,#_fixed
      0006CA E4               [12] 1794 	clr	a
      0006CB F0               [24] 1795 	movx	@dptr,a
      0006CC A3               [24] 1796 	inc	dptr
      0006CD F0               [24] 1797 	movx	@dptr,a
      0006CE                       1798 00144$:
                                   1799 ;	life.c:103: pu[y][x] = u[y][x];
      0006CE 90r0Cr06         [24] 1800 	mov	dptr,#_y
      0006D1 E0               [24] 1801 	movx	a,@dptr
      0006D2 FE               [12] 1802 	mov	r6,a
      0006D3 A3               [24] 1803 	inc	dptr
      0006D4 E0               [24] 1804 	movx	a,@dptr
      0006D5 C4               [12] 1805 	swap	a
      0006D6 23               [12] 1806 	rl	a
      0006D7 54 E0            [12] 1807 	anl	a,#0xe0
      0006D9 CE               [12] 1808 	xch	a,r6
      0006DA C4               [12] 1809 	swap	a
      0006DB 23               [12] 1810 	rl	a
      0006DC CE               [12] 1811 	xch	a,r6
      0006DD 6E               [12] 1812 	xrl	a,r6
      0006DE CE               [12] 1813 	xch	a,r6
      0006DF 54 E0            [12] 1814 	anl	a,#0xe0
      0006E1 CE               [12] 1815 	xch	a,r6
      0006E2 6E               [12] 1816 	xrl	a,r6
      0006E3 FF               [12] 1817 	mov	r7,a
      0006E4 EE               [12] 1818 	mov	a,r6
      0006E5 24r04            [12] 1819 	add	a,#_pu
      0006E7 FC               [12] 1820 	mov	r4,a
      0006E8 EF               [12] 1821 	mov	a,r7
      0006E9 34s00            [12] 1822 	addc	a,#(_pu >> 8)
      0006EB FD               [12] 1823 	mov	r5,a
      0006EC 90r0Cr04         [24] 1824 	mov	dptr,#_x
      0006EF E0               [24] 1825 	movx	a,@dptr
      0006F0 FA               [12] 1826 	mov	r2,a
      0006F1 A3               [24] 1827 	inc	dptr
      0006F2 E0               [24] 1828 	movx	a,@dptr
      0006F3 FB               [12] 1829 	mov	r3,a
      0006F4 EA               [12] 1830 	mov	a,r2
      0006F5 2C               [12] 1831 	add	a,r4
      0006F6 FC               [12] 1832 	mov	r4,a
      0006F7 EB               [12] 1833 	mov	a,r3
      0006F8 3D               [12] 1834 	addc	a,r5
      0006F9 FD               [12] 1835 	mov	r5,a
      0006FA EE               [12] 1836 	mov	a,r6
      0006FB 24r04            [12] 1837 	add	a,#_u
      0006FD FE               [12] 1838 	mov	r6,a
      0006FE EF               [12] 1839 	mov	a,r7
      0006FF 34s04            [12] 1840 	addc	a,#(_u >> 8)
      000701 FF               [12] 1841 	mov	r7,a
      000702 EA               [12] 1842 	mov	a,r2
      000703 2E               [12] 1843 	add	a,r6
      000704 F5 82            [12] 1844 	mov	dpl,a
      000706 EB               [12] 1845 	mov	a,r3
      000707 3F               [12] 1846 	addc	a,r7
      000708 F5 83            [12] 1847 	mov	dph,a
      00070A E0               [24] 1848 	movx	a,@dptr
      00070B 8C 82            [24] 1849 	mov	dpl,r4
      00070D 8D 83            [24] 1850 	mov	dph,r5
      00070F F0               [24] 1851 	movx	@dptr,a
                                   1852 ;	life.c:104: u[y][x] = nu[y][x];
      000710 90r0Cr06         [24] 1853 	mov	dptr,#_y
      000713 E0               [24] 1854 	movx	a,@dptr
      000714 FE               [12] 1855 	mov	r6,a
      000715 A3               [24] 1856 	inc	dptr
      000716 E0               [24] 1857 	movx	a,@dptr
      000717 C4               [12] 1858 	swap	a
      000718 23               [12] 1859 	rl	a
      000719 54 E0            [12] 1860 	anl	a,#0xe0
      00071B CE               [12] 1861 	xch	a,r6
      00071C C4               [12] 1862 	swap	a
      00071D 23               [12] 1863 	rl	a
      00071E CE               [12] 1864 	xch	a,r6
      00071F 6E               [12] 1865 	xrl	a,r6
      000720 CE               [12] 1866 	xch	a,r6
      000721 54 E0            [12] 1867 	anl	a,#0xe0
      000723 CE               [12] 1868 	xch	a,r6
      000724 6E               [12] 1869 	xrl	a,r6
      000725 FF               [12] 1870 	mov	r7,a
      000726 EE               [12] 1871 	mov	a,r6
      000727 24r04            [12] 1872 	add	a,#_u
      000729 FC               [12] 1873 	mov	r4,a
      00072A EF               [12] 1874 	mov	a,r7
      00072B 34s04            [12] 1875 	addc	a,#(_u >> 8)
      00072D FD               [12] 1876 	mov	r5,a
      00072E 90r0Cr04         [24] 1877 	mov	dptr,#_x
      000731 E0               [24] 1878 	movx	a,@dptr
      000732 FA               [12] 1879 	mov	r2,a
      000733 A3               [24] 1880 	inc	dptr
      000734 E0               [24] 1881 	movx	a,@dptr
      000735 FB               [12] 1882 	mov	r3,a
      000736 EA               [12] 1883 	mov	a,r2
      000737 2C               [12] 1884 	add	a,r4
      000738 FC               [12] 1885 	mov	r4,a
      000739 EB               [12] 1886 	mov	a,r3
      00073A 3D               [12] 1887 	addc	a,r5
      00073B FD               [12] 1888 	mov	r5,a
      00073C EE               [12] 1889 	mov	a,r6
      00073D 24r04            [12] 1890 	add	a,#_nu
      00073F FE               [12] 1891 	mov	r6,a
      000740 EF               [12] 1892 	mov	a,r7
      000741 34s08            [12] 1893 	addc	a,#(_nu >> 8)
      000743 FF               [12] 1894 	mov	r7,a
      000744 EA               [12] 1895 	mov	a,r2
      000745 2E               [12] 1896 	add	a,r6
      000746 F5 82            [12] 1897 	mov	dpl,a
      000748 EB               [12] 1898 	mov	a,r3
      000749 3F               [12] 1899 	addc	a,r7
      00074A F5 83            [12] 1900 	mov	dph,a
      00074C E0               [24] 1901 	movx	a,@dptr
      00074D 8C 82            [24] 1902 	mov	dpl,r4
      00074F 8D 83            [24] 1903 	mov	dph,r5
      000751 F0               [24] 1904 	movx	@dptr,a
                                   1905 ;	life.c:100: for (x = 0; x < W; x++) {
      000752 90r0Cr04         [24] 1906 	mov	dptr,#_x
      000755 E0               [24] 1907 	movx	a,@dptr
      000756 24 01            [12] 1908 	add	a,#0x01
      000758 F0               [24] 1909 	movx	@dptr,a
      000759 A3               [24] 1910 	inc	dptr
      00075A E0               [24] 1911 	movx	a,@dptr
      00075B 34 00            [12] 1912 	addc	a,#0x00
      00075D F0               [24] 1913 	movx	@dptr,a
      00075E 90r0Cr04         [24] 1914 	mov	dptr,#_x
      000761 E0               [24] 1915 	movx	a,@dptr
      000762 FE               [12] 1916 	mov	r6,a
      000763 A3               [24] 1917 	inc	dptr
      000764 E0               [24] 1918 	movx	a,@dptr
      000765 FF               [12] 1919 	mov	r7,a
      000766 C3               [12] 1920 	clr	c
      000767 EE               [12] 1921 	mov	a,r6
      000768 94 20            [12] 1922 	subb	a,#0x20
      00076A EF               [12] 1923 	mov	a,r7
      00076B 64 80            [12] 1924 	xrl	a,#0x80
      00076D 94 80            [12] 1925 	subb	a,#0x80
      00076F 50 03            [24] 1926 	jnc	00401$
      000771 02r06r2C         [24] 1927 	ljmp	00176$
      000774                       1928 00401$:
                                   1929 ;	life.c:99: for (y = 0; y < H; y++)
      000774 90r0Cr06         [24] 1930 	mov	dptr,#_y
      000777 E0               [24] 1931 	movx	a,@dptr
      000778 24 01            [12] 1932 	add	a,#0x01
      00077A F0               [24] 1933 	movx	@dptr,a
      00077B A3               [24] 1934 	inc	dptr
      00077C E0               [24] 1935 	movx	a,@dptr
      00077D 34 00            [12] 1936 	addc	a,#0x00
      00077F F0               [24] 1937 	movx	@dptr,a
      000780 90r0Cr06         [24] 1938 	mov	dptr,#_y
      000783 E0               [24] 1939 	movx	a,@dptr
      000784 FE               [12] 1940 	mov	r6,a
      000785 A3               [24] 1941 	inc	dptr
      000786 E0               [24] 1942 	movx	a,@dptr
      000787 FF               [12] 1943 	mov	r7,a
      000788 C3               [12] 1944 	clr	c
      000789 EE               [12] 1945 	mov	a,r6
      00078A 94 20            [12] 1946 	subb	a,#0x20
      00078C EF               [12] 1947 	mov	a,r7
      00078D 64 80            [12] 1948 	xrl	a,#0x80
      00078F 94 80            [12] 1949 	subb	a,#0x80
      000791 50 03            [24] 1950 	jnc	00402$
      000793 02r06r25         [24] 1951 	ljmp	00178$
      000796                       1952 00402$:
                                   1953 ;	life.c:138: if (fixed || cycle2) {
      000796 90r0Cr18         [24] 1954 	mov	dptr,#_fixed
      000799 E0               [24] 1955 	movx	a,@dptr
      00079A F5 F0            [12] 1956 	mov	b,a
      00079C A3               [24] 1957 	inc	dptr
      00079D E0               [24] 1958 	movx	a,@dptr
      00079E 45 F0            [12] 1959 	orl	a,b
      0007A0 70 0F            [24] 1960 	jnz	00105$
      0007A2 90r0Cr1A         [24] 1961 	mov	dptr,#_cycle2
      0007A5 E0               [24] 1962 	movx	a,@dptr
      0007A6 F5 F0            [12] 1963 	mov	b,a
      0007A8 A3               [24] 1964 	inc	dptr
      0007A9 E0               [24] 1965 	movx	a,@dptr
      0007AA 45 F0            [12] 1966 	orl	a,b
      0007AC 70 03            [24] 1967 	jnz	00404$
      0007AE 02r01rE2         [24] 1968 	ljmp	00109$
      0007B1                       1969 00404$:
      0007B1                       1970 00105$:
                                   1971 ;	life.c:139: printf("DONE\n\r");
      0007B1 74r32            [12] 1972 	mov	a,#___str_7
      0007B3 C0 E0            [24] 1973 	push	acc
      0007B5 74s00            [12] 1974 	mov	a,#(___str_7 >> 8)
      0007B7 C0 E0            [24] 1975 	push	acc
      0007B9 74 80            [12] 1976 	mov	a,#0x80
      0007BB C0 E0            [24] 1977 	push	acc
      0007BD 12r00r00         [24] 1978 	lcall	_printf
      0007C0 15 81            [12] 1979 	dec	sp
      0007C2 15 81            [12] 1980 	dec	sp
      0007C4 15 81            [12] 1981 	dec	sp
                                   1982 ;	life.c:140: (void)getchar();
      0007C6 12r00r05         [24] 1983 	lcall	_getchar
                                   1984 ;	life.c:141: break;
      0007C9                       1985 00111$:
                                   1986 ;	life.c:144: if (i1) {
      0007C9 90r00r02         [24] 1987 	mov	dptr,#_i1
      0007CC E0               [24] 1988 	movx	a,@dptr
      0007CD F5 F0            [12] 1989 	mov	b,a
      0007CF A3               [24] 1990 	inc	dptr
      0007D0 E0               [24] 1991 	movx	a,@dptr
      0007D1 45 F0            [12] 1992 	orl	a,b
      0007D3 70 03            [24] 1993 	jnz	00405$
      0007D5 02r00r50         [24] 1994 	ljmp	00114$
      0007D8                       1995 00405$:
                                   1996 ;	life.c:145: printf("BREAK\n\r");
      0007D8 74r39            [12] 1997 	mov	a,#___str_8
      0007DA C0 E0            [24] 1998 	push	acc
      0007DC 74s00            [12] 1999 	mov	a,#(___str_8 >> 8)
      0007DE C0 E0            [24] 2000 	push	acc
      0007E0 74 80            [12] 2001 	mov	a,#0x80
      0007E2 C0 E0            [24] 2002 	push	acc
      0007E4 12r00r00         [24] 2003 	lcall	_printf
      0007E7 15 81            [12] 2004 	dec	sp
      0007E9 15 81            [12] 2005 	dec	sp
      0007EB 15 81            [12] 2006 	dec	sp
                                   2007 ;	life.c:146: (void)getchar();
      0007ED 12r00r05         [24] 2008 	lcall	_getchar
      0007F0 02r00r50         [24] 2009 	ljmp	00114$
      0007F3                       2010 00116$:
                                   2011 ;	life.c:150: EA = 0;
                                   2012 ;	assignBit
      0007F3 C2 AF            [12] 2013 	clr	_EA
                                   2014 ;	life.c:152: printf("TERM\n\r");
      0007F5 74r41            [12] 2015 	mov	a,#___str_9
      0007F7 C0 E0            [24] 2016 	push	acc
      0007F9 74s00            [12] 2017 	mov	a,#(___str_9 >> 8)
      0007FB C0 E0            [24] 2018 	push	acc
      0007FD 74 80            [12] 2019 	mov	a,#0x80
      0007FF C0 E0            [24] 2020 	push	acc
      000801 12r00r00         [24] 2021 	lcall	_printf
      000804 15 81            [12] 2022 	dec	sp
      000806 15 81            [12] 2023 	dec	sp
      000808 15 81            [12] 2024 	dec	sp
                                   2025 ;	life.c:153: (void)getchar();
      00080A 12r00r05         [24] 2026 	lcall	_getchar
                                   2027 ;	life.c:157: __endasm;
      00080D 02 00 00         [24] 2028 	ljmp	0
                                   2029 ;	life.c:158: }
      000810 22               [24] 2030 	ret
                                   2031 	.area CSEG    (CODE)
                                   2032 	.area CONST   (CODE)
                                   2033 	.area CONST   (CODE)
      000000                       2034 ___str_0:
      000000 25 30 34 78           2035 	.ascii "%04x"
      000004 00                    2036 	.db 0x00
                                   2037 	.area CSEG    (CODE)
                                   2038 	.area CONST   (CODE)
      000005                       2039 ___str_1:
      000005 1B                    2040 	.db 0x1b
      000006 5B 32 4A              2041 	.ascii "[2J"
      000009 1B                    2042 	.db 0x1b
      00000A 5B 6D                 2043 	.ascii "[m"
      00000C 00                    2044 	.db 0x00
                                   2045 	.area CSEG    (CODE)
                                   2046 	.area CONST   (CODE)
      00000D                       2047 ___str_2:
      00000D 0D                    2048 	.db 0x0d
      00000E 0A                    2049 	.db 0x0a
      00000F 00                    2050 	.db 0x00
                                   2051 	.area CSEG    (CODE)
                                   2052 	.area CONST   (CODE)
      000010                       2053 ___str_3:
      000010 1B                    2054 	.db 0x1b
      000011 5B 30 31 6D 5B 5D     2055 	.ascii "[01m[]"
      000017 1B                    2056 	.db 0x1b
      000018 5B 6D                 2057 	.ascii "[m"
      00001A 00                    2058 	.db 0x00
                                   2059 	.area CSEG    (CODE)
                                   2060 	.area CONST   (CODE)
      00001B                       2061 ___str_4:
      00001B 2D 2D                 2062 	.ascii "--"
      00001D 00                    2063 	.db 0x00
                                   2064 	.area CSEG    (CODE)
                                   2065 	.area CONST   (CODE)
      00001E                       2066 ___str_5:
      00001E 1B                    2067 	.db 0x1b
      00001F 5B 32 4A              2068 	.ascii "[2J"
      000022 1B                    2069 	.db 0x1b
      000023 5B 6D 49 4E 49 54     2070 	.ascii "[mINIT"
      000029 0A                    2071 	.db 0x0a
      00002A 0D                    2072 	.db 0x0d
      00002B 00                    2073 	.db 0x00
                                   2074 	.area CSEG    (CODE)
                                   2075 	.area CONST   (CODE)
      00002C                       2076 ___str_6:
      00002C 52 44 59              2077 	.ascii "RDY"
      00002F 0A                    2078 	.db 0x0a
      000030 0D                    2079 	.db 0x0d
      000031 00                    2080 	.db 0x00
                                   2081 	.area CSEG    (CODE)
                                   2082 	.area CONST   (CODE)
      000032                       2083 ___str_7:
      000032 44 4F 4E 45           2084 	.ascii "DONE"
      000036 0A                    2085 	.db 0x0a
      000037 0D                    2086 	.db 0x0d
      000038 00                    2087 	.db 0x00
                                   2088 	.area CSEG    (CODE)
                                   2089 	.area CONST   (CODE)
      000039                       2090 ___str_8:
      000039 42 52 45 41 4B        2091 	.ascii "BREAK"
      00003E 0A                    2092 	.db 0x0a
      00003F 0D                    2093 	.db 0x0d
      000040 00                    2094 	.db 0x00
                                   2095 	.area CSEG    (CODE)
                                   2096 	.area CONST   (CODE)
      000041                       2097 ___str_9:
      000041 54 45 52 4D           2098 	.ascii "TERM"
      000045 0A                    2099 	.db 0x0a
      000046 0D                    2100 	.db 0x0d
      000047 00                    2101 	.db 0x00
                                   2102 	.area CSEG    (CODE)
                                   2103 	.area XINIT   (CODE)
                                   2104 	.area CABS    (ABS,CODE)
