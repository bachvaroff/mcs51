                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module gen
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _puts
                                     13 	.globl _CY
                                     14 	.globl _AC
                                     15 	.globl _F0
                                     16 	.globl _RS1
                                     17 	.globl _RS0
                                     18 	.globl _OV
                                     19 	.globl _FL
                                     20 	.globl _P
                                     21 	.globl _TF2
                                     22 	.globl _EXF2
                                     23 	.globl _RCLK
                                     24 	.globl _TCLK
                                     25 	.globl _EXEN2
                                     26 	.globl _TR2
                                     27 	.globl _C_T2
                                     28 	.globl _CP_RL2
                                     29 	.globl _T2CON_7
                                     30 	.globl _T2CON_6
                                     31 	.globl _T2CON_5
                                     32 	.globl _T2CON_4
                                     33 	.globl _T2CON_3
                                     34 	.globl _T2CON_2
                                     35 	.globl _T2CON_1
                                     36 	.globl _T2CON_0
                                     37 	.globl _PT2
                                     38 	.globl _PS
                                     39 	.globl _PT1
                                     40 	.globl _PX1
                                     41 	.globl _PT0
                                     42 	.globl _PX0
                                     43 	.globl _RD
                                     44 	.globl _WR
                                     45 	.globl _T1
                                     46 	.globl _T0
                                     47 	.globl _INT1
                                     48 	.globl _INT0
                                     49 	.globl _TXD
                                     50 	.globl _RXD
                                     51 	.globl _P3_7
                                     52 	.globl _P3_6
                                     53 	.globl _P3_5
                                     54 	.globl _P3_4
                                     55 	.globl _P3_3
                                     56 	.globl _P3_2
                                     57 	.globl _P3_1
                                     58 	.globl _P3_0
                                     59 	.globl _EA
                                     60 	.globl _ET2
                                     61 	.globl _ES
                                     62 	.globl _ET1
                                     63 	.globl _EX1
                                     64 	.globl _ET0
                                     65 	.globl _EX0
                                     66 	.globl _P2_7
                                     67 	.globl _P2_6
                                     68 	.globl _P2_5
                                     69 	.globl _P2_4
                                     70 	.globl _P2_3
                                     71 	.globl _P2_2
                                     72 	.globl _P2_1
                                     73 	.globl _P2_0
                                     74 	.globl _SM0
                                     75 	.globl _SM1
                                     76 	.globl _SM2
                                     77 	.globl _REN
                                     78 	.globl _TB8
                                     79 	.globl _RB8
                                     80 	.globl _TI
                                     81 	.globl _RI
                                     82 	.globl _T2EX
                                     83 	.globl _T2
                                     84 	.globl _P1_7
                                     85 	.globl _P1_6
                                     86 	.globl _P1_5
                                     87 	.globl _P1_4
                                     88 	.globl _P1_3
                                     89 	.globl _P1_2
                                     90 	.globl _P1_1
                                     91 	.globl _P1_0
                                     92 	.globl _TF1
                                     93 	.globl _TR1
                                     94 	.globl _TF0
                                     95 	.globl _TR0
                                     96 	.globl _IE1
                                     97 	.globl _IT1
                                     98 	.globl _IE0
                                     99 	.globl _IT0
                                    100 	.globl _P0_7
                                    101 	.globl _P0_6
                                    102 	.globl _P0_5
                                    103 	.globl _P0_4
                                    104 	.globl _P0_3
                                    105 	.globl _P0_2
                                    106 	.globl _P0_1
                                    107 	.globl _P0_0
                                    108 	.globl _B
                                    109 	.globl _A
                                    110 	.globl _ACC
                                    111 	.globl _PSW
                                    112 	.globl _TH2
                                    113 	.globl _TL2
                                    114 	.globl _RCAP2H
                                    115 	.globl _RCAP2L
                                    116 	.globl _T2MOD
                                    117 	.globl _T2CON
                                    118 	.globl _IP
                                    119 	.globl _P3
                                    120 	.globl _IE
                                    121 	.globl _P2
                                    122 	.globl _SBUF
                                    123 	.globl _SCON
                                    124 	.globl _P1
                                    125 	.globl _TH1
                                    126 	.globl _TH0
                                    127 	.globl _TL1
                                    128 	.globl _TL0
                                    129 	.globl _TMOD
                                    130 	.globl _TCON
                                    131 	.globl _PCON
                                    132 	.globl _DPH
                                    133 	.globl _DPL
                                    134 	.globl _SP
                                    135 	.globl _P0
                                    136 	.globl _putchar
                                    137 	.globl _getchar
                                    138 ;--------------------------------------------------------
                                    139 ; special function registers
                                    140 ;--------------------------------------------------------
                                    141 	.area RSEG    (ABS,DATA)
      000000                        142 	.org 0x0000
                           000080   143 _P0	=	0x0080
                           000081   144 _SP	=	0x0081
                           000082   145 _DPL	=	0x0082
                           000083   146 _DPH	=	0x0083
                           000087   147 _PCON	=	0x0087
                           000088   148 _TCON	=	0x0088
                           000089   149 _TMOD	=	0x0089
                           00008A   150 _TL0	=	0x008a
                           00008B   151 _TL1	=	0x008b
                           00008C   152 _TH0	=	0x008c
                           00008D   153 _TH1	=	0x008d
                           000090   154 _P1	=	0x0090
                           000098   155 _SCON	=	0x0098
                           000099   156 _SBUF	=	0x0099
                           0000A0   157 _P2	=	0x00a0
                           0000A8   158 _IE	=	0x00a8
                           0000B0   159 _P3	=	0x00b0
                           0000B8   160 _IP	=	0x00b8
                           0000C8   161 _T2CON	=	0x00c8
                           0000C9   162 _T2MOD	=	0x00c9
                           0000CA   163 _RCAP2L	=	0x00ca
                           0000CB   164 _RCAP2H	=	0x00cb
                           0000CC   165 _TL2	=	0x00cc
                           0000CD   166 _TH2	=	0x00cd
                           0000D0   167 _PSW	=	0x00d0
                           0000E0   168 _ACC	=	0x00e0
                           0000E0   169 _A	=	0x00e0
                           0000F0   170 _B	=	0x00f0
                                    171 ;--------------------------------------------------------
                                    172 ; special function bits
                                    173 ;--------------------------------------------------------
                                    174 	.area RSEG    (ABS,DATA)
      000000                        175 	.org 0x0000
                           000080   176 _P0_0	=	0x0080
                           000081   177 _P0_1	=	0x0081
                           000082   178 _P0_2	=	0x0082
                           000083   179 _P0_3	=	0x0083
                           000084   180 _P0_4	=	0x0084
                           000085   181 _P0_5	=	0x0085
                           000086   182 _P0_6	=	0x0086
                           000087   183 _P0_7	=	0x0087
                           000088   184 _IT0	=	0x0088
                           000089   185 _IE0	=	0x0089
                           00008A   186 _IT1	=	0x008a
                           00008B   187 _IE1	=	0x008b
                           00008C   188 _TR0	=	0x008c
                           00008D   189 _TF0	=	0x008d
                           00008E   190 _TR1	=	0x008e
                           00008F   191 _TF1	=	0x008f
                           000090   192 _P1_0	=	0x0090
                           000091   193 _P1_1	=	0x0091
                           000092   194 _P1_2	=	0x0092
                           000093   195 _P1_3	=	0x0093
                           000094   196 _P1_4	=	0x0094
                           000095   197 _P1_5	=	0x0095
                           000096   198 _P1_6	=	0x0096
                           000097   199 _P1_7	=	0x0097
                           000090   200 _T2	=	0x0090
                           000091   201 _T2EX	=	0x0091
                           000098   202 _RI	=	0x0098
                           000099   203 _TI	=	0x0099
                           00009A   204 _RB8	=	0x009a
                           00009B   205 _TB8	=	0x009b
                           00009C   206 _REN	=	0x009c
                           00009D   207 _SM2	=	0x009d
                           00009E   208 _SM1	=	0x009e
                           00009F   209 _SM0	=	0x009f
                           0000A0   210 _P2_0	=	0x00a0
                           0000A1   211 _P2_1	=	0x00a1
                           0000A2   212 _P2_2	=	0x00a2
                           0000A3   213 _P2_3	=	0x00a3
                           0000A4   214 _P2_4	=	0x00a4
                           0000A5   215 _P2_5	=	0x00a5
                           0000A6   216 _P2_6	=	0x00a6
                           0000A7   217 _P2_7	=	0x00a7
                           0000A8   218 _EX0	=	0x00a8
                           0000A9   219 _ET0	=	0x00a9
                           0000AA   220 _EX1	=	0x00aa
                           0000AB   221 _ET1	=	0x00ab
                           0000AC   222 _ES	=	0x00ac
                           0000AD   223 _ET2	=	0x00ad
                           0000AF   224 _EA	=	0x00af
                           0000B0   225 _P3_0	=	0x00b0
                           0000B1   226 _P3_1	=	0x00b1
                           0000B2   227 _P3_2	=	0x00b2
                           0000B3   228 _P3_3	=	0x00b3
                           0000B4   229 _P3_4	=	0x00b4
                           0000B5   230 _P3_5	=	0x00b5
                           0000B6   231 _P3_6	=	0x00b6
                           0000B7   232 _P3_7	=	0x00b7
                           0000B0   233 _RXD	=	0x00b0
                           0000B1   234 _TXD	=	0x00b1
                           0000B2   235 _INT0	=	0x00b2
                           0000B3   236 _INT1	=	0x00b3
                           0000B4   237 _T0	=	0x00b4
                           0000B5   238 _T1	=	0x00b5
                           0000B6   239 _WR	=	0x00b6
                           0000B7   240 _RD	=	0x00b7
                           0000B8   241 _PX0	=	0x00b8
                           0000B9   242 _PT0	=	0x00b9
                           0000BA   243 _PX1	=	0x00ba
                           0000BB   244 _PT1	=	0x00bb
                           0000BC   245 _PS	=	0x00bc
                           0000BD   246 _PT2	=	0x00bd
                           0000C8   247 _T2CON_0	=	0x00c8
                           0000C9   248 _T2CON_1	=	0x00c9
                           0000CA   249 _T2CON_2	=	0x00ca
                           0000CB   250 _T2CON_3	=	0x00cb
                           0000CC   251 _T2CON_4	=	0x00cc
                           0000CD   252 _T2CON_5	=	0x00cd
                           0000CE   253 _T2CON_6	=	0x00ce
                           0000CF   254 _T2CON_7	=	0x00cf
                           0000C8   255 _CP_RL2	=	0x00c8
                           0000C9   256 _C_T2	=	0x00c9
                           0000CA   257 _TR2	=	0x00ca
                           0000CB   258 _EXEN2	=	0x00cb
                           0000CC   259 _TCLK	=	0x00cc
                           0000CD   260 _RCLK	=	0x00cd
                           0000CE   261 _EXF2	=	0x00ce
                           0000CF   262 _TF2	=	0x00cf
                           0000D0   263 _P	=	0x00d0
                           0000D1   264 _FL	=	0x00d1
                           0000D2   265 _OV	=	0x00d2
                           0000D3   266 _RS0	=	0x00d3
                           0000D4   267 _RS1	=	0x00d4
                           0000D5   268 _F0	=	0x00d5
                           0000D6   269 _AC	=	0x00d6
                           0000D7   270 _CY	=	0x00d7
                                    271 ;--------------------------------------------------------
                                    272 ; overlayable register banks
                                    273 ;--------------------------------------------------------
                                    274 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        275 	.ds 8
                                    276 ;--------------------------------------------------------
                                    277 ; internal ram data
                                    278 ;--------------------------------------------------------
                                    279 	.area DSEG    (DATA)
                                    280 ;--------------------------------------------------------
                                    281 ; overlayable items in internal ram 
                                    282 ;--------------------------------------------------------
                                    283 ;--------------------------------------------------------
                                    284 ; Stack segment in internal ram 
                                    285 ;--------------------------------------------------------
                                    286 	.area	SSEG
      000009                        287 __start__stack:
      000009                        288 	.ds	1
                                    289 
                                    290 ;--------------------------------------------------------
                                    291 ; indirectly addressable internal ram data
                                    292 ;--------------------------------------------------------
                                    293 	.area ISEG    (DATA)
      000008                        294 _OE7:
      000008                        295 	.ds 1
                                    296 ;--------------------------------------------------------
                                    297 ; absolute internal ram data
                                    298 ;--------------------------------------------------------
                                    299 	.area IABS    (ABS,DATA)
                                    300 	.area IABS    (ABS,DATA)
                                    301 ;--------------------------------------------------------
                                    302 ; bit data
                                    303 ;--------------------------------------------------------
                                    304 	.area BSEG    (BIT)
                                    305 ;--------------------------------------------------------
                                    306 ; paged external ram data
                                    307 ;--------------------------------------------------------
                                    308 	.area PSEG    (PAG,XDATA)
                                    309 ;--------------------------------------------------------
                                    310 ; external ram data
                                    311 ;--------------------------------------------------------
                                    312 	.area XSEG    (XDATA)
                                    313 ;--------------------------------------------------------
                                    314 ; absolute external ram data
                                    315 ;--------------------------------------------------------
                                    316 	.area XABS    (ABS,XDATA)
                                    317 ;--------------------------------------------------------
                                    318 ; external initialized ram data
                                    319 ;--------------------------------------------------------
                                    320 	.area XISEG   (XDATA)
      008000                        321 _OEreg:
      008000                        322 	.ds 2
                                    323 	.area HOME    (CODE)
                                    324 	.area GSINIT0 (CODE)
                                    325 	.area GSINIT1 (CODE)
                                    326 	.area GSINIT2 (CODE)
                                    327 	.area GSINIT3 (CODE)
                                    328 	.area GSINIT4 (CODE)
                                    329 	.area GSINIT5 (CODE)
                                    330 	.area GSINIT  (CODE)
                                    331 	.area GSFINAL (CODE)
                                    332 	.area CSEG    (CODE)
                                    333 ;--------------------------------------------------------
                                    334 ; interrupt vector 
                                    335 ;--------------------------------------------------------
                                    336 	.area HOME    (CODE)
      002000                        337 __interrupt_vect:
      002000 02 20 06         [24]  338 	ljmp	__sdcc_gsinit_startup
                                    339 ;--------------------------------------------------------
                                    340 ; global & static initialisations
                                    341 ;--------------------------------------------------------
                                    342 	.area HOME    (CODE)
                                    343 	.area GSINIT  (CODE)
                                    344 	.area GSFINAL (CODE)
                                    345 	.area GSINIT  (CODE)
                                    346 	.globl __sdcc_gsinit_startup
                                    347 	.globl __sdcc_program_startup
                                    348 	.globl __start__stack
                                    349 	.globl __mcs51_genXINIT
                                    350 	.globl __mcs51_genXRAMCLEAR
                                    351 	.globl __mcs51_genRAMCLEAR
                                    352 	.area GSFINAL (CODE)
      00205F 02 20 03         [24]  353 	ljmp	__sdcc_program_startup
                                    354 ;--------------------------------------------------------
                                    355 ; Home
                                    356 ;--------------------------------------------------------
                                    357 	.area HOME    (CODE)
                                    358 	.area HOME    (CODE)
      002003                        359 __sdcc_program_startup:
      002003 02 20 90         [24]  360 	ljmp	_main
                                    361 ;	return from main will return to caller
                                    362 ;--------------------------------------------------------
                                    363 ; code
                                    364 ;--------------------------------------------------------
                                    365 	.area CSEG    (CODE)
                                    366 ;------------------------------------------------------------
                                    367 ;Allocation info for local variables in function 'putchar'
                                    368 ;------------------------------------------------------------
                                    369 ;c                         Allocated to registers 
                                    370 ;------------------------------------------------------------
                                    371 ;	gen.c:9: int putchar(int c) __naked {
                                    372 ;	-----------------------------------------
                                    373 ;	 function putchar
                                    374 ;	-----------------------------------------
      002062                        375 _putchar:
                                    376 ;	naked function: no prologue.
                                    377 ;	gen.c:14: __endasm;
      002062 E5 82            [12]  378 	mov	a, dpl
      002064 02 00 30         [24]  379 	ljmp	0x0030
                                    380 ;	gen.c:15: }
                                    381 ;	naked function: no epilogue.
                                    382 ;------------------------------------------------------------
                                    383 ;Allocation info for local variables in function 'getchar'
                                    384 ;------------------------------------------------------------
                                    385 ;	gen.c:17: int getchar(void) __naked {
                                    386 ;	-----------------------------------------
                                    387 ;	 function getchar
                                    388 ;	-----------------------------------------
      002067                        389 _getchar:
                                    390 ;	naked function: no prologue.
                                    391 ;	gen.c:23: __endasm;
      002067 12 00 32         [24]  392 	lcall	0x0032
      00206A F5 82            [12]  393 	mov	dpl, a
      00206C 75 83 00         [24]  394 	mov	dph, #0
      00206F 22               [24]  395 	ret
                                    396 ;	gen.c:24: }
                                    397 ;	naked function: no epilogue.
                                    398 ;------------------------------------------------------------
                                    399 ;Allocation info for local variables in function 'flashOE'
                                    400 ;------------------------------------------------------------
                                    401 ;	gen.c:29: static void flashOE(void) {
                                    402 ;	-----------------------------------------
                                    403 ;	 function flashOE
                                    404 ;	-----------------------------------------
      002070                        405 _flashOE:
                           000007   406 	ar7 = 0x07
                           000006   407 	ar6 = 0x06
                           000005   408 	ar5 = 0x05
                           000004   409 	ar4 = 0x04
                           000003   410 	ar3 = 0x03
                           000002   411 	ar2 = 0x02
                           000001   412 	ar1 = 0x01
                           000000   413 	ar0 = 0x00
                                    414 ;	gen.c:30: P1_7 = 0;
                                    415 ;	assignBit
      002070 C2 97            [12]  416 	clr	_P1_7
                                    417 ;	gen.c:31: *OEreg = OE7;
      002072 90 80 00         [24]  418 	mov	dptr,#_OEreg
      002075 E0               [24]  419 	movx	a,@dptr
      002076 FE               [12]  420 	mov	r6,a
      002077 A3               [24]  421 	inc	dptr
      002078 E0               [24]  422 	movx	a,@dptr
      002079 FF               [12]  423 	mov	r7,a
      00207A 8E 82            [24]  424 	mov	dpl,r6
      00207C 8F 83            [24]  425 	mov	dph,r7
      00207E 78 08            [12]  426 	mov	r0,#_OE7
      002080 E6               [12]  427 	mov	a,@r0
      002081 F0               [24]  428 	movx	@dptr,a
                                    429 ;	gen.c:32: P1_7 = 1;
                                    430 ;	assignBit
      002082 D2 97            [12]  431 	setb	_P1_7
                                    432 ;	gen.c:33: OE7 ^= 0xc0u;
      002084 78 08            [12]  433 	mov	r0,#_OE7
      002086 86 06            [24]  434 	mov	ar6,@r0
      002088 63 06 C0         [24]  435 	xrl	ar6,#0xc0
      00208B 78 08            [12]  436 	mov	r0,#_OE7
      00208D A6 06            [24]  437 	mov	@r0,ar6
                                    438 ;	gen.c:35: return;
                                    439 ;	gen.c:36: }
      00208F 22               [24]  440 	ret
                                    441 ;------------------------------------------------------------
                                    442 ;Allocation info for local variables in function 'main'
                                    443 ;------------------------------------------------------------
                                    444 ;	gen.c:38: int main(void) {
                                    445 ;	-----------------------------------------
                                    446 ;	 function main
                                    447 ;	-----------------------------------------
      002090                        448 _main:
                                    449 ;	gen.c:39: P1_7 = 1;		
                                    450 ;	assignBit
      002090 D2 97            [12]  451 	setb	_P1_7
                                    452 ;	gen.c:41: OE7 = 0x7fu;
      002092 78 08            [12]  453 	mov	r0,#_OE7
      002094 76 7F            [12]  454 	mov	@r0,#0x7f
                                    455 ;	gen.c:43: while (1) {
      002096                        456 00105$:
                                    457 ;	gen.c:44: if (OE7 & 0x80u) puts("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\r\n");
      002096 78 08            [12]  458 	mov	r0,#_OE7
      002098 E6               [12]  459 	mov	a,@r0
      002099 30 E7 0B         [24]  460 	jnb	acc.7,00102$
      00209C 90 21 15         [24]  461 	mov	dptr,#___str_0
      00209F 75 F0 80         [24]  462 	mov	b,#0x80
      0020A2 12 20 B5         [24]  463 	lcall	_puts
      0020A5 80 09            [24]  464 	sjmp	00103$
      0020A7                        465 00102$:
                                    466 ;	gen.c:45: else puts("00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n");
      0020A7 90 21 98         [24]  467 	mov	dptr,#___str_1
      0020AA 75 F0 80         [24]  468 	mov	b,#0x80
      0020AD 12 20 B5         [24]  469 	lcall	_puts
      0020B0                        470 00103$:
                                    471 ;	gen.c:46: flashOE();
      0020B0 12 20 70         [24]  472 	lcall	_flashOE
                                    473 ;	gen.c:53: return 0;
                                    474 ;	gen.c:54: }
      0020B3 80 E1            [24]  475 	sjmp	00105$
                                    476 	.area CSEG    (CODE)
                                    477 	.area CONST   (CODE)
                                    478 	.area CONST   (CODE)
      002115                        479 ___str_0:
      002115 31 31 31 31 31 31 31   480 	.ascii "111111111111111111111111111111111111111111111111111111111111"
             31 31 31 31 31 31 31
             31 31 31 31 31 31 31
             31 31 31 31 31 31 31
             31 31 31 31 31 31 31
             31 31 31 31 31 31 31
             31 31 31 31 31 31 31
             31 31 31 31 31 31 31
             31 31 31 31
      002151 31 31 31 31 31 31 31   481 	.ascii "111111111111111111111111111111111111111111111111111111111111"
             31 31 31 31 31 31 31
             31 31 31 31 31 31 31
             31 31 31 31 31 31 31
             31 31 31 31 31 31 31
             31 31 31 31 31 31 31
             31 31 31 31 31 31 31
             31 31 31 31 31 31 31
             31 31 31 31
      00218D 31 31 31 31 31 31 31   482 	.ascii "11111111"
             31
      002195 0D                     483 	.db 0x0d
      002196 0A                     484 	.db 0x0a
      002197 00                     485 	.db 0x00
                                    486 	.area CSEG    (CODE)
                                    487 	.area CONST   (CODE)
      002198                        488 ___str_1:
      002198 30 30 30 30 30 30 30   489 	.ascii "000000000000000000000000000000000000000000000000000000000000"
             30 30 30 30 30 30 30
             30 30 30 30 30 30 30
             30 30 30 30 30 30 30
             30 30 30 30 30 30 30
             30 30 30 30 30 30 30
             30 30 30 30 30 30 30
             30 30 30 30 30 30 30
             30 30 30 30
      0021D4 30 30 30 30 30 30 30   490 	.ascii "000000000000000000000000000000000000000000000000000000000000"
             30 30 30 30 30 30 30
             30 30 30 30 30 30 30
             30 30 30 30 30 30 30
             30 30 30 30 30 30 30
             30 30 30 30 30 30 30
             30 30 30 30 30 30 30
             30 30 30 30 30 30 30
             30 30 30 30
      002210 30 30 30 30 30 30 30   491 	.ascii "00000000"
             30
      002218 0D                     492 	.db 0x0d
      002219 0A                     493 	.db 0x0a
      00221A 00                     494 	.db 0x00
                                    495 	.area CSEG    (CODE)
                                    496 	.area XINIT   (CODE)
      00221B                        497 __xinit__OEreg:
      00221B 06 F0                  498 	.byte #0x06,#0xf0
                                    499 	.area CABS    (ABS,CODE)
